{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/Guard/auth.guard.ts","./src/app/Guard/auth2.guard.ts","./src/app/Guard/login.guard.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/dsa-register/dsa-register.component.ts","./src/app/auth/dsa-register/dsa-register.component.html","./src/app/auth/email-confirm/email-confirm.component.ts","./src/app/auth/email-confirm/email-confirm.component.html","./src/app/auth/reset-password/reset-password.component.ts","./src/app/auth/reset-password/reset-password.component.html","./src/app/auth/sign-in/sign-in.component.ts","./src/app/auth/sign-in/sign-in.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/directive/alphabet-only.directive.ts","./src/app/directive/equal-validator.directive.ts","./src/app/directive/ngx-tree-select/src/components/tree-select-item.component.ts","./src/app/directive/ngx-tree-select/src/components/tree-select-item.component.html","./src/app/directive/ngx-tree-select/src/components/tree-select.component.ts","./src/app/directive/ngx-tree-select/src/components/tree-select.component.html","./src/app/directive/ngx-tree-select/src/directives/off-click.directive.ts","./src/app/directive/ngx-tree-select/src/index.ts","./src/app/directive/ngx-tree-select/src/models/expand-mode.ts","./src/app/directive/ngx-tree-select/src/models/select-option.ts","./src/app/directive/ngx-tree-select/src/models/selectable-item.ts","./src/app/directive/ngx-tree-select/src/models/tree-select-default-options.ts","./src/app/directive/ngx-tree-select/src/module.ts","./src/app/directive/ngx-tree-select/src/pipes/item.pipe.ts","./src/app/directive/ngx-tree-select/src/services/select.service.ts","./src/app/directive/number-only.directive.ts","./src/app/layout/rights-footer/rights-footer.component.ts","./src/app/layout/rights-footer/rights-footer.component.html","./src/app/pages/account-header/account-header.component.ts","./src/app/pages/account-header/account-header.component.html","./src/app/pages/maintenance/maintenance.component.ts","./src/app/pages/maintenance/maintenance.component.html","./src/app/pages/privacy-policy/privacy-policy.component.ts","./src/app/pages/privacy-policy/privacy-policy.component.html","./src/app/pages/terms-condition/terms-condition.component.ts","./src/app/pages/terms-condition/terms-condition.component.html","./src/app/service/auth.service.ts","./src/app/service/common.service.ts","./src/app/service/domainvalues.service.ts","./src/app/service/dsa.service.ts","./src/app/service/global.service.ts","./src/app/service/notification.service.ts","./src/app/service/setting.service.ts","./src/app/service/token.service.ts","./src/app/service/uploadfile.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private _router: Router) { }\n\n    canActivate(): boolean {\n\n        if (localStorage.getItem('token')) {\n            return true\n        } else {\n            this._router.navigate(['/signup']);\n            return false;\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Auth2Guard implements CanActivateChild {\n    constructor(\n        private _router: Router) { }\n    canActivateChild(): boolean {\n        if (localStorage.getItem('token')) {\n            return true;\n        } else {\n            this._router.navigate(['/profile-authentication']);\n            return false\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n    constructor(private _router: Router) { }\n\n    canActivate(): boolean {\n        if (localStorage.getItem('buyerData')) {\n            return true;\n        } else {\n            this._router.navigate(['/signin']);\n            return false;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DsaRegisterComponent } from './auth/dsa-register/dsa-register.component';\nimport { EmailConfirmComponent } from './auth/email-confirm/email-confirm.component';\nimport { ResetPasswordComponent } from './auth/reset-password/reset-password.component';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { MaintenanceComponent } from './pages/maintenance/maintenance.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'home',\n        loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule)\n    },\n    {\n        path: 'my-accounts', loadChildren: () => import('./pages/my-accounts/my-accounts.module').then(m => m.MyAccountsModule)\n    },\n    {\n        path: 'other-settings', loadChildren: () => import('./pages/other-settings/other-settings.module').then(m => m.OtherSettingsModule)\n    },\n    {\n        path: 'dsa-module', loadChildren: () => import('./pages/dsa-module/dsa-module.module').then(m => m.DsaModuleModule)\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    }, {\n        path: 'signin',\n        component: SignInComponent\n    },{\n        path: 'dsa-buyer-signup',\n        component: SignupComponent\n    },\n    {\n        path: 'dsa-signup', component: DsaRegisterComponent\n    },\n    {\n        path: 'dsc-create-dsa', component: DsaRegisterComponent\n    },\n    {\n        path: 'forgot-password',\n        component: EmailConfirmComponent\n    },\n    {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n    },\n    {\n        path: 'maintenance',\n        component: MaintenanceComponent\n    },\n    {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled', initialNavigation: 'enabledBlocking' })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { OAuthService, AuthConfig, OAuthErrorEvent } from 'angular-oauth2-oidc';\nimport { NavigationEnd, Router, Event } from '@angular/router';\n\nimport { GlobalService } from './service/global.service';\nimport { SettingService } from './service/setting.service';\nimport { ConnectionService } from 'ng-connection-service';\nimport { DsaService } from 'src/app/service/dsa.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'Buyer-new';\n    username = '';\n    status = 'ONLINE';\n    isConnected = true;\n    noInternetConnection: boolean = true;\n    isExpoBuyerMainten: boolean = true;\n\n    get token() { return this.oauthService.getAccessToken(); }\n    get claims() { return this.oauthService.getIdentityClaims(); }\n\n    constructor(\n        private gs: GlobalService,\n        private connectionService: ConnectionService,\n        private oauthService: OAuthService,\n        private router: Router,\n        private dsaService: DsaService,\n    ) {\n        this.gs.loginData = localStorage.getItem('buyerData') ? JSON.parse(localStorage.getItem('buyerData') || '') : '';\n\n        if(localStorage.getItem('isExpoBuyerMainten') && localStorage.getItem('isExpoBuyerMainten') != 'undefined'){\n            this.isExpoBuyerMainten = localStorage.getItem('isExpoBuyerMainten') ? JSON.parse(localStorage.getItem('isExpoBuyerMainten') || '') : {};\n        }\n        \n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.gs.getMaintenanceDetail({ type: 'Buyer' }).subscribe((resp: any) => {\n                    if (resp.data.is_buyer_maintenance == 'Yes') {\n                        this.isExpoBuyerMainten = true;\n                        this.gs.is_buyer_description = resp.data.is_buyer_description \n                        localStorage.setItem('isExpoBuyerMainten', JSON.stringify(this.isExpoBuyerMainten));\n                        this.router.navigate(['/maintenance'])\n                    } else {\n                        if(this.isExpoBuyerMainten) {\n                            this.router.navigate(['/home'])\n                        }\n                        this.isExpoBuyerMainten = false;\n                        localStorage.setItem('isExpoBuyerMainten', JSON.stringify(this.isExpoBuyerMainten));\n                    }\n                })\n            }\n        });\n    }\n}\n","<router-outlet></router-outlet>","import { DatePipe } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { EmailConfirmComponent } from './auth/email-confirm/email-confirm.component';\nimport { SharedModule } from './shared/shared.module';\nimport { OAuthModule, AuthConfig, ValidationHandler, OAuthStorage, OAuthModuleConfig } from 'angular-oauth2-oidc'; // Added\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { PasswordStrengthMeterModule } from 'angular-password-strength-meter';\nimport { NgOtpInputModule } from 'ng-otp-input';\nimport { ResetPasswordComponent } from './auth/reset-password/reset-password.component';\nimport { LightboxModule } from 'ngx-lightbox';\nimport { DsaRegisterComponent } from './auth/dsa-register/dsa-register.component';\nimport { AuthGuard } from './Guard/auth.guard';\nimport { Auth2Guard } from './Guard/auth2.guard';\nimport { LoginGuard } from './Guard/login.guard';\nimport { PrivacyPolicyComponent } from './pages/privacy-policy/privacy-policy.component';\nimport { TermsConditionComponent } from './pages/terms-condition/terms-condition.component';\nimport { MaintenanceComponent } from './pages/maintenance/maintenance.component';\n\nconst config: AuthConfig = {\n    issuer: window.location.origin,\n    clientId: window.location.origin,\n    redirectUri: window.location.origin + '/index.html',\n    logoutUrl: window.location.origin + '/login',\n    // silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n    scope: 'openid profile email',\n    requireHttps: false\n};\n\nconfig.logoutUrl = `${config.issuer}v2/logout?client_id=${config.clientId}&returnTo=${encodeURIComponent(config.redirectUri || '')}`;\n\nconst authModuleConfig: OAuthModuleConfig = {\n    resourceServer: {\n        allowedUrls: ['http://localhost:4200'],\n        sendAccessToken: true,\n    },\n};\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SignInComponent,\n        SignupComponent,\n        DsaRegisterComponent,\n        EmailConfirmComponent,\n        ResetPasswordComponent,\n        PrivacyPolicyComponent,\n        TermsConditionComponent,\n        MaintenanceComponent\n    ],\n    imports: [\n        BrowserModule.withServerTransition({ appId: 'serverApp' }),\n        AppRoutingModule,\n        FormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule, // required animations module\n        ToastrModule.forRoot({\n            preventDuplicates: true\n        }), // ToastrModule added\n        SharedModule,\n        OAuthModule.forRoot(authModuleConfig),\n        Ng2TelInputModule,\n        PasswordStrengthMeterModule,\n        NgOtpInputModule,\n        LightboxModule\n    ],\n    providers: [\n        AuthGuard,\n        Auth2Guard,\n        LoginGuard,\n        // {\n        //   provide: HTTP_INTERCEPTORS,\n        //   useClass: AuthInterceptor,\n        //   multi: true\n        // },\n        { provide: OAuthModuleConfig, useValue: authModuleConfig },\n        // { provide: ValidationHandler, useClass: JwksValidationHandler },\n        { provide: OAuthStorage, useValue: localStorage },\n        { provide: AuthConfig, useValue: config },\n        DatePipe],\n    schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { DomainvaluesService } from 'src/app/service/domainvalues.service';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { CommonService } from 'src/app/service/common.service';\nimport { environment } from 'src/environments/environment';\nimport { DsaService } from 'src/app/service/dsa.service';\ndeclare const $: any;\n\n@Component({\n    selector: 'app-dsa-register',\n    templateUrl: './dsa-register.component.html',\n    styleUrls: ['./dsa-register.component.scss']\n})\n\nexport class DsaRegisterComponent implements OnInit {\n    assetsURL = environment.assetsURL;\n    isZero: boolean = false;\n    isSpinner: boolean = false;\n    passCode: any = '!@#$%^&*()'\n    allCountries: any = [];\n    allStates: any = [];\n    verfifyQuicker: any = 'yes';\n    parant_id: any;\n    viewData: any = '';\n\n    formObj: any = {\n        firstname: '',\n        lastname: '',\n        middlename: '',\n        email: '',\n        phone_number: '',\n        password: '',\n        agree_to_terms_conditions: '',\n\n        business: {\n            assignRole: 'DSA',\n            bus_name: '',\n            bus_email: '',\n            business_type: 'business',\n            business_phone: '',\n            numberofsales: '',\n            einNumber: '',\n            govtIDProof: '',\n            idNumber: '',\n            status: 'active',\n            editedby: null,\n            deleted: null,\n            deletedby: null,\n            individual: '',\n            create_user: '',\n            other_Business_Details: {\n                currentlySell: 'Yes',\n                brands: '',\n                products: '',\n                howLong: '',\n                monthlySalesUSD: '',\n                principalClients: '',\n                otherProductLines: '',\n                monthlySalesproduct: '',\n                provideDetailed: ''\n            }\n        },\n        address_Register: {\n            zipcode: '',\n            city: '',\n            country: '',\n            state: '',\n            status: 'active',\n            address_type: 'CADD',\n            add_line1: '',\n            add_line2: '',\n            individual: '',\n            create_user: '',\n            bussiness: '',\n            editedby: null,\n            deleted: null,\n            deletedby: null,\n            code: 'BYRADD',\n        },\n        \n    }\n\n    constructor(public service: DsaService,\n        private toastr: ToastrService,\n        public router: Router,\n        public _route: ActivatedRoute,\n        private domainVal: DomainvaluesService,\n        public gs: GlobalService,\n        public common: CommonService) {\n    }\n\n    ngOnInit(): void {\n        this._route.queryParamMap.subscribe((params) => {\n            this.parant_id = params['params']['pxd'] || null;\n            this.viewData = params['params']['bvd'] || null;\n            if(this.parant_id){\n                this.getDSAById(this.parant_id)\n            }\n            if(this.viewData){\n                this.getDSAById(this.viewData)\n            } \n        });\n\n        this.domainVal.getAll_Activecountries().subscribe((resp: any) => {\n            this.allCountries = resp.data;\n            if (this.allCountries && this.allCountries.length) {\n                this.allCountries.sort(this.common.dynamicSort(\"value\"));\n                const result = this.allCountries.find((x: { value: string; }) => x.value === 'USA');\n                if (result && result._id) {\n                    this.formObj.address_Register.country = result._id\n                    this.ChnageCountry(result._id);\n                }\n            }\n        });\n\n        if(this.router.url == '/dsc-create-dsa' || this.parant_id || this.viewData ){\n            this.formObj.business.assignRole = 'DSA';\n            this.formObj.parent_id = this.gs.loginData['_id'];\n        }\n    }\n\n    getDSAById(id: any){\n        this.isSpinner = true;\n        this.service.getDSAById({id}).subscribe((resp: any) => {\n            let dsaDetaisl = resp.data\n            console.log('dsaDetaisl', dsaDetaisl);\n            \n            if(dsaDetaisl){\n                this.formObj.firstname = dsaDetaisl?.firstname;\n                this.formObj.lastname = dsaDetaisl?.lastname;\n                this.formObj.middlename = dsaDetaisl?.middlename;\n                this.formObj.email = dsaDetaisl?.email_address?.email_add;\n                this.formObj.phone_number = dsaDetaisl?.phone_book?.phone_number;\n                this.formObj.individual = dsaDetaisl?.email_address?.individual;\n                this.formObj.agree_to_terms_conditions = dsaDetaisl.bussiness?.agree_terms || true;\n                \n                this.formObj.business.id = dsaDetaisl.bussiness?._id;\n                this.formObj.business.idNumber = dsaDetaisl.bussiness?.idNumber;\n                this.formObj.business.govtIDProof = dsaDetaisl.bussiness?.govtIDProof;\n\n                // this.formObj.business = dsaDetaisl.bussiness;\n                this.formObj.business.other_Business_Details.currentlySell = dsaDetaisl.bussiness?.other_Business_Details?.currentlySell;\n                this.formObj.business.other_Business_Details.currentlySell = dsaDetaisl.bussiness?.other_Business_Details?.currentlySell;\n                this.formObj.business.other_Business_Details.currentlySell = dsaDetaisl.bussiness?.other_Business_Details?.currentlySell;\n                this.formObj.business.other_Business_Details.brands = dsaDetaisl.bussiness?.other_Business_Details?.brands;\n                this.formObj.business.other_Business_Details.products = dsaDetaisl.bussiness?.other_Business_Details?.products;\n                this.formObj.business.other_Business_Details.howLong = dsaDetaisl.bussiness?.other_Business_Details?.howLong;\n                this.formObj.business.other_Business_Details.monthlySalesUSD = dsaDetaisl.bussiness?.other_Business_Details?.monthlySalesUSD;\n                this.formObj.business.other_Business_Details.principalClients = dsaDetaisl.bussiness?.other_Business_Details?.principalClients;\n                this.formObj.business.other_Business_Details.otherProductLines = dsaDetaisl.bussiness?.other_Business_Details?.otherProductLines;\n                this.formObj.business.other_Business_Details.monthlySalesproduct = dsaDetaisl.bussiness?.other_Business_Details?.monthlySalesproduct;\n                this.formObj.business.other_Business_Details.monthlySalesPrice = dsaDetaisl.bussiness?.other_Business_Details?.monthlySalesPrice;\n                this.formObj.business.other_Business_Details.provideDetailed = dsaDetaisl.bussiness?.other_Business_Details?.provideDetailed;\n\n\n                this.formObj.address_Register.zipcode = dsaDetaisl.address?.zipcode;\n                this.formObj.address_Register.city = dsaDetaisl.address?.city;\n                this.formObj.address_Register.country = dsaDetaisl.address?.country;\n                this.formObj.address_Register.state = dsaDetaisl.address?.state;\n                this.formObj.address_Register.address_type = dsaDetaisl.address?.address_type;\n                this.formObj.address_Register.add_line1 = dsaDetaisl.address?.add_line1;\n                this.formObj.address_Register.add_line2 = dsaDetaisl.address?.add_line2;\n\n            }\n            this.isSpinner = false;\n\n        }, (error: any) => {\n            this.isSpinner = false;\n        });\n    }\n\n    submit(form: any) {\n        if (form.valid) {\n            this.deleteEmptyVar();\n\n            this.isSpinner = true;\n            this.service.createDSA(this.formObj).subscribe((resp: any) => {\n                this.isSpinner = false;\n                if (resp.status) {\n                    if (this.formObj.parent_id) {\n                        this.toastr.success('DSA created successfully!', 'Success', {\n                            timeOut: 5000,\n                            positionClass: 'toast-top-right',\n                            progressBar: true,\n                            progressAnimation: 'increasing'\n                        });\n                        this.router.navigate(['/dsa-module/manage-buyers']);\n                        return;\n                    }\n\n                    $('#defaultSize').modal('show');\n                    this.toastr.success('Thank you for choosing ExpoBazaar!', 'Success', {\n                        timeOut: 5000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                } else {\n                    this.toastr.error(resp['message'], 'Oops', {\n                        timeOut: 8000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing',\n                    });\n                }\n            }, (error: any) => {\n                this.isSpinner = false;\n                console.log(error);\n            });\n        } else {\n            this.isSpinner = false;\n            this.toastr.error('Please fill all required fields.', 'Oops!', {\n                timeOut: 8000,\n                positionClass: 'toast-top-right',\n                progressBar: true,\n                progressAnimation: 'increasing',\n            });\n        }\n    }\n\n    modalHide(){\n        $('#defaultSize').modal('hide');\n    }\n\n    // Update\n    update(form: any){\n        if (form.valid) {\n            this.deleteEmptyVar();\n\n            this.isSpinner = true;\n            this.service.updateDSA(this.formObj).subscribe((resp: any) => {\n                this.isSpinner = false;\n                if (resp.status) {\n                    if (this.formObj.parent_id) {\n                        this.toastr.success('DSA updated Successfully!', 'Success', {\n                            timeOut: 5000,\n                            positionClass: 'toast-top-right',\n                            progressBar: true,\n                            progressAnimation: 'increasing'\n                        });\n                        this.router.navigate(['/dsa-module/manage-buyers']);\n                        return;\n                    }\n\n                    $('#defaultSize').modal('show');\n                    this.toastr.success('Register detail updated Successfully!', 'Success', {\n                        timeOut: 5000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                } else {\n                    this.toastr.error(resp['message'], 'Oops', {\n                        timeOut: 8000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing',\n                    });\n                }\n            }, (error: any) => {\n                this.isSpinner = false;\n                console.log(error);\n            });\n        } \n    }\n\n\n    deleteEmptyVar() {\n        if (this.formObj.business.assignRole != 'DSA') {\n            delete this.formObj.business.govtIDProof;\n            delete this.formObj.business.idNumber;\n        } else {\n            delete this.formObj.business.bus_name;\n            delete this.formObj.business.business_phone;\n            delete this.formObj.business.numberofsales;\n            delete this.formObj.business.einNumber;\n        }\n\n        if (this.formObj.business.other_Business_Details.currentlySell != 'Yes') {\n            delete this.formObj.business.other_Business_Details.brands;\n            delete this.formObj.business.other_Business_Details.products;\n            delete this.formObj.business.other_Business_Details.howLong;\n            delete this.formObj.business.other_Business_Details.monthlySalesUSD;\n        }\n    }\n\n    // Country\n    ChnageCountry(event: any) {\n        let val;\n        if (event && event.target) {\n            val = event.target.value;\n        } else {\n            val = event;\n        }\n        this.domainVal.getstateOrCity(val).subscribe((resp: any) => {\n            this.allStates = resp.data;\n            if (this.allStates && this.allStates.length) {\n                this.allStates.sort(this.common.dynamicSort(\"value\"));\n            }\n        });\n    }\n\n    mobilefirstnozero(event: any) {\n        var x = event.target.value.replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,3})/);\n        event.target.value = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\n    }\n\n    signIn() {\n        this.router.navigate(['/signin']);\n        $('#defaultSize').modal('hide');\n    }\n\n}\n","<div id=\"main-wrapper\">\n    <div class=\"section pt-90 pb-70 bg-color\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-center\">\n                    <div class=\"logo-area text-center\">\n                        <a routerLink=\"/homet\">\n                            <img src=\"assets/images/Logo.svg\" alt=\"\">\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"col-lg-12 align-items-center mt-2\">\n                    <form #signupForm=\"ngForm\" name=\"signupForm\" novalidate autocomplete=\"off\">\n                        <div class=\"width-800 mx-auto\">\n                            <div class=\"dsa-form\">\n                                <h3 class=\"text-center padd-y\">\n                                    Create DSA Account\n                                </h3>\n                                <div class=\"row\">\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"Firstname\">First Name<sup>*</sup></label>\n                                        <input type=\"text\" name=\"firstname\" id=\"Firstname\" class=\"form-control\"\n                                            placeholder=\"First Name\" aria-describedby=\"firstname\" #firstname=\"ngModel\"\n                                            appAlphabetOnly [(ngModel)]=\"formObj.firstname\" required [disabled]=\"viewData\"/>\n                                        <div class=\"text-danger\" *ngIf=\"firstname.errors && signupForm.submitted\">\n                                            First name is required!\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"Middlename\">Middle Name</label>\n                                        <input type=\"text\" name=\"middlename\" id=\"Middlename\" class=\"form-control\"\n                                            placeholder=\"Middle Name\" aria-describedby=\"middlename\" appAlphabetOnly\n                                            [(ngModel)]=\" formObj.middlename\" [disabled]=\"viewData\"/>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"lastName\">Last Name<sup>*</sup></label>\n                                        <input type=\"text\" id=\"lastName\" class=\"form-control\"\n                                            aria-describedby=\"lastname\" placeholder=\"Last Name\" name=\"lastname\"\n                                            [(ngModel)]=\"formObj.lastname\" #lastname=\"ngModel\" appAlphabetOnly\n                                            required [disabled]=\"viewData\"/>\n                                        <div class=\"text-danger\" *ngIf=\"lastname.errors && signupForm.submitted\">\n                                            <div *ngIf=\"lastname.errors.required\">Last name is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-4\">\n                                        <label class=\"form-label\" for=\"emailID\">Email<sup>*</sup></label>\n                                        <input type=\"email\" name=\"email\" aria-describedby=\"emailID\" id=\"emailID\"\n                                            class=\"form-control\" placeholder=\"john@email.com\"\n                                            [(ngModel)]=\"formObj.email\" required [pattern]=\"common.emailPattern\"\n                                            #email=\"ngModel\" [disabled]=\"viewData\"/>\n                                        <div class=\"text-danger\" *ngIf=\"email.errors && signupForm.submitted\">\n                                            <div *ngIf=\"email.errors?.required\">Email is required</div>\n                                            <div *ngIf=\"email.errors?.pattern\">Email is not correct</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"phone_number\">Phone number<sup>*</sup></label>\n                                        <input type=\"text\" id=\"phone_number\" class=\"form-control\"\n                                            aria-describedby=\"phone_number\" placeholder=\"Phone number\" name=\"phone_number\" maxlength=\"10\"\n                                            [(ngModel)]=\"formObj.phone_number\" #phone_number=\"ngModel\" numbersOnly\n                                            required [disabled]=\"viewData\" />\n                                        <div class=\"text-danger\" *ngIf=\"phone_number.errors && signupForm.submitted\">\n                                            <div *ngIf=\"phone_number.errors.required\">Phone number is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-password-toggle col-md-4\">\n                                        <label class=\"form-label\" for=\"Passwords\">Password<sup>*</sup></label>\n                                        <a class=\"helptip\" href=\"#\">\n                                            <i class=\"fa fa-question-circle\" title=\"\">\n                                            </i>\n                                            <span class=\"help\"><strong>Password</strong><br>MUST contain at least 8-20\n                                                characters.<br>MUST contain at least one number and one alphabet.\n                                                <br>MUST contain at least one special character !@#$%^&*()</span>\n                                        </a>\n                                        <input type=\"password\" name=\"#\" id=\"Passwords\" aria-describedby=\"password\"\n                                            name=\"password\" [(ngModel)]=\"formObj.password\" required minlength=\"8\"\n                                            maxlength=\"20\" #password=\"ngModel\" [pattern]=\"common.passwordPattern\"\n                                            (keydown.space)=\"$event.preventDefault();\" class=\"form-control\"\n                                            autocomplete=\"off\" [disabled]=\"viewData || parant_id\"\n                                            placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\" />\n                                        <password-strength-meter [password]=\"formObj.password\">\n                                        </password-strength-meter>\n                                        <div class=\"text-danger\" *ngIf=\"password.errors && signupForm.submitted\">\n                                            <div *ngIf=\"password.errors.required\">Password is required!</div>\n                                            <div *ngIf=\"password.errors.minlength\">Minimum 8 characters requried!</div>\n                                            <div *ngIf=\"password.errors.pattern\">Enter valid password!</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-password-toggle col-md-4\">\n                                        <label class=\"form-label\" for=\"CnfrmPasswordId\">Confirm\n                                            Password<sup>*</sup></label>\n                                        <input type=\"password\" name=\"CnfmPasswordVar\" id=\"CnfrmPasswordId\"\n                                            autocomplete=\"off\" class=\"form-control\"\n                                            placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                                            appPasswordvalidator=\"password\" [(ngModel)]=\"formObj.conformpassword\"\n                                            name=\"CnfmPasswordVar\" #CnfmPasswordVar=\"ngModel\" minlength=\"8\"\n                                            maxlength=\"20\" required [disabled]=\"viewData || parant_id\"\n                                            [ngClass]=\"{'is-invalid': (CnfmPasswordVar.touched || CnfmPasswordVar.dirty) && !CnfmPasswordVar.valid }\" />\n                                        <div class=\"text-danger\" *ngIf=\"CnfmPasswordVar.errors && signupForm.submitted\">\n                                            <div *ngIf=\"CnfmPasswordVar.hasError('required')\">\n                                                Confirm Password is required.\n                                            </div>\n                                            <div\n                                                *ngIf=\"CnfmPasswordVar.hasError('passwordMatchError') && !CnfmPasswordVar.hasError('required')\">\n                                                Password doesn't match\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <hr>\n\n                                <div class=\"row\">\n                                    <div class=\"mb-1 col-md-12\">\n                                        <h4 class=\"text-center text-capitalize\">\n                                            <u>Enter your business info</u>\n                                        </h4>\n                                    </div>\n\n                                    <div class=\"col-sm-12 col-md-12 mt-1\" \n                                    *ngIf=\"router.url != '/dsc-create-dsa' && !parant_id && !viewData\">\n                                        <div class=\"form-check form-check-inline\">\n                                            <input class=\"form-check-input pointer check-size\" type=\"radio\"\n                                                name=\"assignRole\" id=\"individualRadion2\" [disabled]=\"viewData\"\n                                                [(ngModel)]=\"formObj.business.assignRole\" value=\"DSA\">\n                                            <label class=\"form-label pointer f-15\" for=\"individualRadion2\">\n                                                I am an Individual\n                                            </label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input class=\"form-check-input pointer check-size\" type=\"radio\"\n                                                name=\"assignRole\" id=\"individualRadion\" [disabled]=\"viewData\"\n                                                [(ngModel)]=\"formObj.business.assignRole\" value=\"DSC\">\n                                            <label class=\"form-label pointer f-15\" for=\"individualRadion\">\n                                                I represent a company\n                                            </label>\n                                        </div>\n                                    </div>\n\n                                    <ng-container *ngIf=\"formObj.business.assignRole == 'DSC'\">\n                                        <div class=\"col-12\">\n                                            <h4>Enter your business info </h4>\n                                        </div>\n                                        <div class=\"mb-1 col-md-6\">\n                                            <label class=\"form-label\" for=\"registeredBusiness\">Registered Business\n                                                Name<sup>*</sup></label>\n                                            <input type=\"text\" id=\"registeredBusiness\" class=\"form-control\"\n                                                placeholder=\"Registered Business Name\"\n                                                [(ngModel)]=\"formObj.business.bus_name\" name=\"registeredBusinessName\"\n                                                #regisBusiness=\"ngModel\" required [disabled]=\"viewData\">\n                                            <div class=\"text-danger\"\n                                                *ngIf=\"regisBusiness.errors && signupForm.submitted\">\n                                                <div *ngIf=\"regisBusiness.errors.required\">\n                                                    Registered Business Name is required\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-md-6\">\n                                            <label class=\"form-label\" for=\"bus_emailID\">Business Email<sup>*</sup></label>\n                                            <input type=\"email\" name=\"bus_email\" aria-describedby=\"bus_emailID\" id=\"bus_emailID\"\n                                                class=\"form-control\" placeholder=\"Business Email\"\n                                                [(ngModel)]=\"formObj.business.bus_email\" required [pattern]=\"common.emailPattern\"\n                                                #bus_email=\"ngModel\" [disabled]=\"viewData\"/>\n                                            <div class=\"text-danger\" *ngIf=\"bus_email.errors && signupForm.submitted\">\n                                                <div *ngIf=\"bus_email.errors?.required\">Business email is required</div>\n                                                <div *ngIf=\"bus_email.errors?.pattern\">Business email is not correct</div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"mb-1 col-md-6\">\n                                            <label class=\"form-label float-left\" for=\"username\">\n                                                Business Phone <sup>*</sup>\n                                            </label>\n                                            <a class=\"helptip\" href=\"#\">\n                                                <i class=\"fa fa-question-circle\" title=\"\"></i>\n                                                <span class=\"help\">\n                                                    We may contact you for\n                                                    verification\n                                                </span>\n                                            </a>\n                                            <br>\n\n                                            <input type=\"text\" class=\"form-control input-style\" placeholder=\"\" disabled >\n                                            <input type=\"text\" id=\"businessPhone\" class=\"form-control Phone-next-input\"\n                                                placeholder=\"(555) 555-5555\" name=\"phone\" #businessPhone=\"ngModel\"\n                                                [(ngModel)]=\"formObj.business.business_phone\" required\n                                                (keypress)=\"mobilefirstnozero($event)\" minlength=\"14\" [disabled]=\"viewData\" autocomplete=\"disabled\"/>\n\n                                            <div *ngIf=\"isZero\" class=\"text-danger\">First number 0 not allowed</div>\n                                            <div class=\"text-danger\"\n                                                *ngIf=\"businessPhone.errors && signupForm.submitted\">\n                                                <div *ngIf=\"businessPhone.errors?.required\">Business Phone is required\n                                                </div>\n                                                <div *ngIf=\"businessPhone.errors?.minlength\">Enter valid USA phone\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ng-container>\n\n                                    <ng-container *ngIf=\"formObj.business.assignRole == 'DSA'\">\n                                        <div class=\"col-12\">\n                                            <h4 class=\"font-weight-bold mt-3\">Please specify your KYC</h4>\n                                        </div>\n\n                                        <div class=\"col-sm-12 col-md-12 mb-1 mt-1\">\n                                            <label for=\"ccccc\" class=\"mr-4\">\n                                                Govt. ID Proof<sup>*</sup>\n                                            </label>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input pointer\" type=\"radio\" name=\"govtIDProof\"\n                                                    id=\"IDProofRadio1\" [(ngModel)]=\"formObj.business.govtIDProof\"\n                                                    value=\"SSN\" [disabled]=\"viewData\">\n                                                <label class=\"form-check-label pointer\" for=\"IDProofRadio1\">SSN</label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input pointer\" type=\"radio\" name=\"govtIDProof\"\n                                                    id=\"IDProofRadio2\" [(ngModel)]=\"formObj.business.govtIDProof\"\n                                                    value=\"Driver's License\" [disabled]=\"viewData\">\n                                                <label class=\"form-check-label pointer\" for=\"IDProofRadio2\">Driver's\n                                                    License</label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input pointer\" type=\"radio\" name=\"govtIDProof\"\n                                                    id=\"IDProofRadio3\" [(ngModel)]=\"formObj.business.govtIDProof\"\n                                                    value=\"Passport\" [disabled]=\"viewData\">\n                                                <label class=\"form-check-label pointer\"\n                                                    for=\"IDProofRadio3\">Passport</label>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-sm-12 col-md-6 mb-3\">\n                                            <label for=\"IDNumber\">ID Number<sup>*</sup></label>\n                                            <input type=\"text\" class=\"form-control\" id=\"IDNumber\"\n                                                placeholder=\"ID Number\" [(ngModel)]=\"formObj.business.idNumber\"\n                                                name=\"idNumber\" #idNumber=\"ngModel\" required [disabled]=\"viewData\">\n                                            <div class=\"text-danger\" *ngIf=\"idNumber.errors && signupForm.submitted\">\n                                                <div *ngIf=\"idNumber.errors.required\">Registered Business is required\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ng-container>\n\n                                    <div class=\"mb-1 col-md-6\">\n                                        <label class=\"form-label\" for=\"streetNumber\">Address Line\n                                            1<sup>*</sup></label>\n\n                                        <input type=\"text\" id=\"streetNumber\" class=\"form-control\"\n                                            placeholder=\"Street & Number\"\n                                            [(ngModel)]=\"formObj.address_Register.add_line1\" name=\"add_line1\"\n                                            #streetNumber=\"ngModel\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\" *ngIf=\"streetNumber.errors && signupForm.submitted\">\n                                            <div *ngIf=\"streetNumber.errors.required\">Street and Number is required\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"mb-1 col-md-6\">\n                                        <label class=\"form-label\" for=\"suiteUnit\">Address Line 2<sup>*</sup></label>\n                                        <input type=\"text\" id=\"suiteUnit\" class=\"form-control\"\n                                            placeholder=\"Suite, Unit, Building, Floor\"\n                                            [(ngModel)]=\"formObj.address_Register.add_line2\" name=\"add_line2\"\n                                            #suiteUnit=\"ngModel\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\" *ngIf=\"suiteUnit.errors && signupForm.submitted\">\n                                            <div *ngIf=\"suiteUnit.errors.required\">Suite is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-6\">\n                                        <label class=\"form-label\" for=\"zipCode\">Zip Code<sup>*</sup></label>\n                                        <input type=\"text\" id=\"zipCode\" class=\"form-control\" placeholder=\"Zip Code \"\n                                            [(ngModel)]=\"formObj.address_Register.zipcode\" name=\"zipCode\"\n                                            #zipCode=\"ngModel\" minlength=\"5\" maxlength=\"5\" numbersOnly\n                                            onpaste=\"return false;\" pattern=\"\\d{1,5}\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\" *ngIf=\"zipCode.errors && signupForm.submitted\">\n                                            <div *ngIf=\"zipCode.errors.required\">Zip Code is required</div>\n                                            <div *ngIf=\"zipCode.errors?.minlength && !zipCode.errors?.pattern\">\n                                                Enter 5 digit Zip Code\n                                            </div>\n                                            <div *ngIf=\"zipCode.errors?.pattern\">Enter 5 digit Zip Code</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"city\">\n                                            City<sup>*</sup>\n                                        </label>\n                                        <input type=\"text\" class=\"form-control\" id=\"city\" placeholder=\"City\"\n                                            [(ngModel)]=\"formObj.address_Register.city\" name=\"city\" #city=\"ngModel\"\n                                            required [disabled]=\"viewData\">\n\n                                        <div class=\"text-danger\" *ngIf=\"city.errors && signupForm.submitted\">\n                                            <div *ngIf=\"city.errors.required\">City is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"state\">State <sup>*</sup></label>\n                                        <select class=\"form-control\" id=\"state\"\n                                            [(ngModel)]=\"formObj.address_Register.state\" name=\"state\" id=\"state\"\n                                            #state=\"ngModel\" required [disabled]=\"viewData\">\n                                            <option value=\"\" disabled>Select State</option>\n                                            <option *ngFor=\"let item of allStates\" value=\"{{item._id}}\">\n                                                    {{item.value}}\n                                            </option>\n                                            <div class=\"text-danger\" *ngIf=\"state.errors && signupForm.submitted\">\n                                                <div *ngIf=\"state.errors.required\">State is required</div>\n                                            </div>\n                                        </select>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"country\">Country<sup>*</sup></label>\n                                        <select class=\"form-control\" id=\"Country\" name=\"country\" #Country=\"ngModel\"\n                                            (change)=\"ChnageCountry($event)\" [disabled]=\"viewData\"\n                                            [(ngModel)]=\"formObj.address_Register.country\" required>\n                                            <option value=\"\" disabled>Select Country</option>\n                                            <ng-container *ngFor=\"let item of allCountries\">\n                                                <option *ngIf=\"item.code == 'USA'\" [value]=\"item._id\">\n                                                    {{item.value}}\n                                                </option>\n                                            </ng-container>\n                                        </select>\n                                        <div class=\"text-danger\" *ngIf=\"Country.errors && signupForm.submitted\">\n                                            Country is required!\n                                        </div>\n                                    </div>\n\n                                    <ng-container *ngIf=\"formObj.business.assignRole == 'DSC'\">\n                                        <div class=\"col-md-4 mb-3\">\n                                            <label for=\"numberofsales\">Number of sales reps in your\n                                                company<sup>*</sup>\n                                            </label>\n                                            <input type=\"text\" class=\"form-control\" id=\"numberofsales\"\n                                                placeholder=\"Number of sales reps in your company\"\n                                                [(ngModel)]=\"formObj.business.numberofsales\" name=\"numberofsales\"\n                                                #numberofsales=\"ngModel\" required [disabled]=\"viewData\">\n                                            <div class=\"text-danger\"\n                                                *ngIf=\"numberofsales.errors && signupForm.submitted\">\n                                                <div *ngIf=\"numberofsales.errors.required\">Number of sales is required\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-md-4 mb-3\">\n                                            <label for=\"einNumber\">EIN Number<sup>*</sup></label>\n                                            <input type=\"text\" class=\"form-control\" id=\"einNumber\"\n                                                placeholder=\"EIN Number\" [(ngModel)]=\"formObj.business.einNumber\"\n                                                name=\"einNumber\" #einNumber=\"ngModel\" required [disabled]=\"viewData\">\n                                            <div class=\"text-danger\" *ngIf=\"einNumber.errors && signupForm.submitted\">\n                                                <div *ngIf=\"einNumber.errors.required\">EIN Number</div>\n                                            </div>\n                                        </div>\n                                    </ng-container>\n                                </div>\n\n                                <h4 class=\"font-weight-bold mt-3\">Other Business Details</h4>\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12 col-md-12 mb-3\">\n                                        <label for=\"ccccc\" class=\"mr-4\">\n                                            Currently sell Home Lifestyle & Hospitality products <sup>*</sup>\n                                        </label>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input class=\"form-check-input pointer\" type=\"radio\" name=\"Currently sell\"\n                                                id=\"inlineRadio1\"\n                                                [(ngModel)]=\"formObj.business.other_Business_Details.currentlySell\" value=\"Yes\" [disabled]=\"viewData\">\n                                            <label class=\"form-check-label pointer\" for=\"inlineRadio1\">Yes</label>\n                                        </div>\n                                        <div class=\"form-check form-check-inline\">\n                                            <input class=\"form-check-input pointer\" type=\"radio\" name=\"Currently sell\"\n                                                id=\"inlineRadio2\"\n                                                [(ngModel)]=\"formObj.business.other_Business_Details.currentlySell\" value=\"No\">\n                                            <label class=\"form-check-label pointer\" for=\"inlineRadio2\">No</label>\n                                        </div>\n                                    </div>\n\n                                    <ng-container *ngIf=\"formObj.business.other_Business_Details.currentlySell == 'Yes'\">\n                                        <div class=\"col-sm-12 col-md-6 mb-3\">\n                                            <label for=\"Brands1\">Brands<sup>*</sup></label>\n                                            <input type=\"text\" class=\"form-control\" id=\"Brands1\" placeholder=\"Brands\"\n                                                [(ngModel)]=\"formObj.business.other_Business_Details.brands\" name=\"brands\"\n                                                #brands=\"ngModel\" required [disabled]=\"viewData\">\n                                            <div class=\"text-danger\" *ngIf=\"brands.errors && signupForm.submitted\">\n                                                <div *ngIf=\"brands.errors.required\">Brands is required</div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-sm-12 col-md-6 mb-3\">\n                                            <label for=\"Products1\">Products<sup>*</sup></label>\n                                            <input type=\"text\" class=\"form-control\" id=\"Products1\"\n                                                placeholder=\"Products\"\n                                                [(ngModel)]=\"formObj.business.other_Business_Details.products\" name=\"products\"\n                                                #products=\"ngModel\" required [disabled]=\"viewData\">\n                                            <div class=\"text-danger\" *ngIf=\"products.errors && signupForm.submitted\">\n                                                <div *ngIf=\"products.errors.required\">Products is required</div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-sm-12 col-md-6 mb-3\">\n                                            <label for=\"Howlong1\">How long<sup>*</sup></label>\n                                            <input type=\"text\" class=\"form-control\" id=\"Howlong1\" placeholder=\"How long\"\n                                                [(ngModel)]=\"formObj.business.other_Business_Details.howLong\" name=\"Howlong\"\n                                                #Howlong=\"ngModel\" required [disabled]=\"viewData\">\n                                            <div class=\"text-danger\" *ngIf=\"Howlong.errors && signupForm.submitted\">\n                                                <div *ngIf=\"Howlong.errors.required\">Howl long is required</div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-sm-12 col-md-6 mb-3\">\n                                            <label for=\"monthly\">Monthly Sales (USD) by product line<sup>*</sup></label>\n                                            <input type=\"text\" class=\"form-control\" id=\"monthly\"\n                                                placeholder=\"Monthly Sales\" numbersOnly\n                                                [(ngModel)]=\"formObj.business.other_Business_Details.monthlySalesUSD\"\n                                                name=\"monthlySalesUSD\" #monthlySales=\"ngModel\" required [disabled]=\"viewData\">\n                                            <div class=\"text-danger\"\n                                                *ngIf=\"monthlySales.errors && signupForm.submitted\">\n                                                <div *ngIf=\"monthlySales.errors.required\">Monthly Sales is required\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ng-container>\n\n                                    <div class=\"col-sm-12 col-md-6 mb-3\">\n                                        <label for=\"PrincipalClients1\">Principal Clients<sup>*</sup></label>\n                                        <input type=\"text\" class=\"form-control\" id=\"PrincipalClients1\"\n                                            placeholder=\"Principal Clients\"\n                                            [(ngModel)]=\"formObj.business.other_Business_Details.principalClients\"\n                                            name=\"principalClients\" #principalClients=\"ngModel\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\"\n                                            *ngIf=\"principalClients.errors && signupForm.submitted\">\n                                            <div *ngIf=\"principalClients.errors.required\">Principal Clients is required\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-sm-12 col-md-6 mb-3\">\n                                        <label for=\"otherProductLines1\">Other Product Lines you currently\n                                            sell<sup>*</sup></label>\n                                        <input type=\"text\" class=\"form-control\" id=\"otherProductLines1\"\n                                            placeholder=\"Other Product Lines\" numbersOnly\n                                            [(ngModel)]=\"formObj.business.other_Business_Details.otherProductLines\"\n                                            name=\"otherProductLines\" #otherProductLines=\"ngModel\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\"\n                                            *ngIf=\"otherProductLines.errors && signupForm.submitted\">\n                                            <div *ngIf=\"otherProductLines.errors.required\">Other Product Lines is\n                                                required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-sm-12 col-md-6 mb-3\">\n                                        <label for=\"monthlySalesProduct1\">Monthly Sales (USD) by product line and\n                                            amount<sup>*</sup></label>\n                                        <input type=\"text\" class=\"form-control\" id=\"monthlySalesProduct1\"\n                                            name=\"monthlySalesproduct\"\n                                            placeholder=\"Monthly Sales (USD) by product line and amount\"\n                                            [(ngModel)]=\"formObj.business.other_Business_Details.monthlySalesproduct\" numbersOnly\n                                            #monthlySalesproduct=\"ngModel\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\"\n                                            *ngIf=\"monthlySalesproduct.errors && signupForm.submitted\">\n                                            <div *ngIf=\"monthlySalesproduct.errors.required\">\n                                                Monthly Sales (USD) by product line and amount is required\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-sm-12 col-md-6 mb-3\">\n                                        <label for=\"price\">&nbsp;</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"price\" name=\"monthlySalesPrice\"\n                                            placeholder=\"Amount\" [disabled]=\"viewData\"\n                                            [(ngModel)]=\"formObj.business.other_Business_Details.monthlySalesPrice\">\n                                    </div>\n\n                                    <div class=\"col-sm-12 col-md-12 mb-3\">\n                                        <label for=\"Provides\">\n                                            Provide a detailed description of the geographic territory you seek for EB\n                                            products <sup>*</sup>\n                                        </label>\n                                        <textarea rows=\"3\" id=\"Provides\" placeholder=\"Enter details\"\n                                            name=\"provideDetailed\"\n                                            [(ngModel)]=\"formObj.business.other_Business_Details.provideDetailed\"\n                                            class=\"form-control\" #provideDetailed=\"ngModel\" required [disabled]=\"viewData\">\n                                        </textarea>\n                                        <div class=\"text-danger\" *ngIf=\"provideDetailed.errors && signupForm.submitted\">\n                                            <div *ngIf=\"provideDetailed.errors.required\">\n                                                Provide a detailed description is required\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row \">\n                                    <div class=\"col-md-8 col-12 mb-25\">\n                                        <input type=\"checkbox\" [(ngModel)]=\"formObj.agree_to_terms_conditions\"\n                                            name=\"agree_to_terms_conditions\" #agree_terms=\"ngModel\" required [disabled]=\"viewData\">\n                                        I agree to terms and conditions.\n                                        <div class=\"text-danger\" *ngIf=\"agree_terms.errors && signupForm.submitted\">\n                                            Terms and conditions is required!\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4 text-right\">\n                                        <!-- (click)=\"submit(signupForm.form)\" -->\n                                        <ng-container *ngIf=\"!viewData && !parant_id\">\n                                            <button type=\"submit\" class=\"btn btn-primary btn-next mr-2\" \n                                            [disabled]=\"isSpinner\" (click)=\"submit(signupForm.form)\">\n                                            Submit\n                                            </button>\n                                        </ng-container>\n\n                                        <ng-container *ngIf=\"parant_id\">\n                                            <button type=\"submit\" class=\"btn btn-primary btn-next mr-2\" \n                                            [disabled]=\"isSpinner\" (click)=\"update(signupForm.form)\">\n                                                Update\n                                            </button>\n                                        </ng-container>\n\n                                        <a *ngIf=\"parant_id || viewData || router.url == '/dsc-create-dsa'\">\n                                            <button [routerLink]=\"['/dsa-module/manage-buyers']\" type=\"button\"\n                                                class=\"btn btn-primary btn-prev\">\n                                                Back\n                                            </button>\n                                        </a>\n                                        \n                                    </div>\n                                </div>\n                                <div class=\"text-center\" *ngIf=\"!parant_id && !viewData && router.url != '/dsc-create-dsa'\">\n                                    Already have an account?\n                                    <a href=\"#\" routerLink=\"/signin\" class=\"text-forgot\">\n                                        Signin here\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Modal -->\n    <div class=\"modal fade text-start modal-success\" data-backdrop=\"static\" id=\"defaultSize\" tabindex=\"-1\"\n        aria-labelledby=\"myModalLabel18\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n\n                <div class=\"modal-body text-center\">\n                    <div class=\"logo-area mt-20 mb-20\">\n                        <a routerLink=\"/home\"><img src=\"./assets/images/Logo.svg\" alt=\"\"></a>\n                    </div>\n                    <h1 class=\"mx-auto mb-2\">Thank you for choosing ExpoBazaar!\n                    </h1>\n                    <p class=\"mb-2\">Our team will mail you back shortly to\n                        complete your account setup.</p>\n                </div>\n                <div class=\"modal-footer\">\n                    <div style=\"float: left\">Having trouble?\n                        <a [routerLink]=\"['/home/contactus']\" (click)=\"modalHide()\" class=\"text-link\">\n                            Contact us\n                        </a>\n                    </div>\n                    <div class=\"float-right\">\n                        <a *ngIf=\"parant_id\">\n                            <button [routerLink]=\"['/dsa-module/manage-buyers']\" type=\"button\"\n                                class=\"btn btn-primary btn-prev mr-2\">\n                                Back to Buyer Management\n                            </button>`\n                        </a>\n                        <a *ngIf=\"!parant_id\">\n                            <button class=\"btn btn-success\" (click)=\"signIn()\">Click here to Sign in</button>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div id=\"main-wrapper\">\n        <footer class=\"footer-section section bg-gray \">\n            <!--Footer bottom start-->\n            <div class=\"footer-bottom section \">\n                <div class=\"container \">\n                    <div class=\"row no-gutters \">\n                        <div class=\"col-12 ft-border pt-15 pb-15 \">\n                            <div class=\"row \">\n                                <div class=\"col-lg-6 col-md-6 col-sm-12 \">\n                                    <div class=\"copyright text-left \">\n                                        <p>© 2021 ExpoBazaar, Expo Digital India and all its affiliates. All rights\n                                            reserved.\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6 col-md-6 col-sm-12 \">\n                                    <div class=\"copyright text-right \">\n                                        <p class=\"copyright \">\n                                          <!-- <a href=\"# \">Intellectual Property Protection</a> -->\n                                          <a target=\"_blank\" class=\"pl-3\" [routerLink]=\"['/home/privacy']\">Privacy Policy</a>\n                                          <a target=\"_blank\" class=\"pl-3\" [routerLink]=\"['/home/terms-condition']\">Terms of use</a></p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--Footer bottom end-->\n        </footer>\n    </div>\n</div>\n<!-- </body> -->\n\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\n// import { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"src/app/service/auth.service\";\nimport { GlobalService } from \"src/app/service/global.service\";\n\n@Component({\n    selector: \"app-email-confirm\",\n    templateUrl: \"./email-confirm.component.html\",\n    styleUrls: [\"./email-confirm.component.scss\",],\n})\nexport class EmailConfirmComponent implements OnInit {\n    formObj = {\n        email: \"\",\n    };\n    // verifyData = { first: \"\", second: \"\", third: \"\", fourth: \"\" };\n    verifyData: any;\n    code : any = \"\";\n\n    action = false;\n    isSpinner: boolean = false;\n    constructor(\n        private toastr: ToastrService,\n        private auth_service: AuthService,\n        private gs: GlobalService,\n        private router: Router\n    ) { \n        this.gs.updatePageName('Forgot Password');\n     }\n\n    ngOnInit() {\n        localStorage.clear();\n    }\n\n    submit() {\n        if (this.formObj.email == \"\") {\n            this.toastr.error(\"Please enter email\", \"\", {\n                timeOut: 1000,\n                positionClass: \"toast-top-right\",\n                progressBar: true,\n                progressAnimation: \"increasing\",\n            });\n        } else {\n            this.isSpinner = true;\n            this.auth_service.forgetPasswordOTP(this.formObj).subscribe(\n                (resp: any) => {\n                    this.isSpinner = false;\n                    if (resp.message == \"success\") {\n                        localStorage.setItem(\"OTPcode\", resp.code);\n                        this.code = localStorage.getItem(\"OTPcode\");\n                        this.action = true;\n                        this.toastr.success(\"OTP sent on this email successfully\", \"Success\", {\n                            timeOut: 1000,\n                            positionClass: \"toast-top-right\",\n                            progressBar: true,\n                            progressAnimation: \"increasing\",\n                        });\n                    } else if (resp.message == \"Un Authorized\") {\n                        this.toastr.error(\"Please enter registered email.\", \"Oops!\", {\n                            timeOut: 1000,\n                            positionClass: \"toast-top-right\",\n                            progressBar: true,\n                            progressAnimation: \"increasing\",\n                        });\n                    } else {\n                        console.log(\"something went wrong\");\n                    }\n                },\n                (error) => {\n                    this.isSpinner = false;\n                });\n        }\n    }\n\n    keytab(event : any) {\n        if (!isNaN(event.key)) {\n            let nextInput = event.srcElement.nextElementSibling;\n            if (nextInput == null) return;\n            else nextInput.focus();\n        } else {\n            return;\n        }\n    }\n\n    VerifyOTPsubmitNo(otp?: any) {\n        if (otp) {\n            this.verifyData = otp;\n        }\n    }\n\n    MatchedOTP() {\n        // var dummy = this.verifyData;\n        // var final = dummy.first + dummy.second + dummy.third + dummy.fourth;\n        this.isSpinner = true;\n        if (this.verifyData && this.verifyData.length == 4 && this.verifyData === this.code) {\n        // if (final === this.code) {\n            this.isSpinner = false;\n            this.toastr.success(\"OTP Matched successfully\", \"Success\", {\n                timeOut: 2000,\n                positionClass: \"toast-top-right\",\n                progressBar: true,\n                progressAnimation: \"increasing\",\n            });\n            localStorage.removeItem(\"OTPcode\");\n            localStorage.setItem(\"email\", this.formObj.email);\n            this.router.navigate([\"/reset-password\"]);\n        } else {\n            this.isSpinner = false;\n            this.toastr.error(\"OTP is not correct\", \"Oops!\", {\n                timeOut: 2000,\n                positionClass: \"toast-top-right\",\n                progressBar: true,\n                progressAnimation: \"increasing\",\n            });\n        }\n    }\n}\n","<body class=\"bg-color\">\n    <div id=\"main-wrapper\">\n        <!--Login Register section start-->\n        <div\n            class=\"login-register-section section pt-90 pt-lg-70 pt-md-60 pt-sm-55 pt-xs-45  pb-70 pb-lg-50 pb-md-40 pb-sm-30 pb-xs-20\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-center\">\n                        <div class=\"logo-area text-center\">\n                            <a routerLink=\"/home\"><img src=\"./assets/images/Logo.svg\" alt=\"\"></a>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6 col-sm-6 offset-md-3\">\n                        <div class=\"customer-login-register\">\n                            <div class=\"login-form mb-50\">\n                                <div class=\"form-login-title text-center\">\n                                    <h3>Forgot password?</h3>\n                                    <!-- <p>Enter your email address below to receive a link in your email to reset the\n                                        password.</p> -->\n                                </div>\n\n                                <form *ngIf=\"!action\">\n                                    <div class=\"form-fild\">\n                                        <p><label class=\"mb-0\">Your Email <sup>*</sup> </label></p>\n                                        <input [(ngModel)]=\"formObj.email\" name=\"email\" type=\"text\" class=\"form-control\"\n                                            placeholder=\"Enter your email address\">\n                                    </div>\n\n                                    <div class=\"login-submit mt-10 mb-25\">\n                                        <button type=\"button\" (click)=\"submit()\" class=\"btn-login pull-right\" [disabled]=\"isSpinner\">\n                                            Submit\n                                        </button>\n                                    </div>\n\n                                    <div class=\"clear mb-25\"></div>\n                                    <div class=\"clear\"></div>\n                                    <div class=\"text-center text-muted mb-10 footer-account\">\n\n                                        Already have an account? <br>\n                                        <a routerLink=\"/signin\" class=\"text-link\">\n                                            <strong> Sign in here</strong>\n                                        </a>\n                                    </div>\n                                    <div class=\"clear mb-25\"></div>\n                                </form>\n\n                                <form *ngIf=\"action\">\n                                    <h5 class=\"mb-4 text-center text-muted font-weight-normal\">\n                                        Enter the OTP sent to Email.\n                                    </h5>\n                                    <div class=\"row justify-content-center\">\n                                        <ng-otp-input (onInputChange)=\"VerifyOTPsubmitNo($event)\"\n                                            [config]=\"{length:4}\"></ng-otp-input>\n                                    </div>\n                                    <div class=\"text-center pt-3 pb-4\">\n                                        <button (click)=\"MatchedOTP()\" type=\"button\" class=\"btn-login\" [disabled]=\"isSpinner\">\n                                            Verify\n                                        </button>\n                                    </div>\n                                </form>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"isSpinner\" class=\"sub-loading\">\n            <div class=\"loader\">\n                <span class=\"text-large font-weight-bolder\">\n                  <img src=\"assets/images/loader/123.gif\">\n                </span>\n            </div>\n         </div>\n    </div>\n    <app-rights-footer></app-rights-footer>\n</body>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { GlobalService } from 'src/app/service/global.service';\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.scss']\n})\n\nexport class ResetPasswordComponent implements OnInit {\n\n    isSpinner: boolean = false;\n    formObj = {\n        password: '',\n        confirmpassword: '',\n        email: ''\n    }\n    passCode: any = '!@#$%^&*()';\n\n    passRequirement = {\n        passwordMinLowerCase: 1,\n        passwordMinNumber: 1,\n        passwordMinSymbol: 1,\n        passwordMinCharacters: 8\n    };\n    passwordPattern = [\n        `(?=([^A-Za-z]*[A-Za-z])\\{${this.passRequirement.passwordMinLowerCase},\\})`,\n        `(?=([^0-9]*[0-9])\\{${this.passRequirement.passwordMinNumber},\\})`,\n        `(?=(\\.\\*[\\$\\@\\$\\!\\%\\*\\#\\^\\(\\)\\&])\\{${this.passRequirement.passwordMinSymbol},\\})`,\n        `[A-Za-z\\\\d\\$\\@\\$\\!\\%\\*\\#\\^\\(\\)\\&]{${this.passRequirement.passwordMinCharacters},}`\n    ].map(item => item.toString()).join('');\n\n    constructor(\n        private toastr: ToastrService,\n        private auth_service: AuthService,\n        private router: Router,\n        public gs: GlobalService,\n    ) {\n        this.gs.updatePageName('Update Password');\n    }\n\n    ngOnInit() {\n        this.formObj.email = localStorage.getItem('email') || '';\n    }\n\n    onSubmit(form: any) {\n        if (\n            this.formObj.password == '' ||\n            this.formObj.confirmpassword == ''\n        ) {\n            this.toastr.error('Please fill all required fields', 'Oops!', {\n                timeOut: 2000,\n                positionClass: 'toast-top-right',\n                progressBar: true,\n                progressAnimation: 'increasing'\n            });\n        } else {\n            if (form.valid) {\n                if (this.formObj.password == this.formObj.confirmpassword) {\n                    this.isSpinner = true;\n                    this.auth_service.resetPassword(this.formObj).subscribe((resp: any) => {\n                        this.isSpinner = false;\n                        if (resp.status) {\n                            this.toastr.success('Password updated successfully.', 'Success', {\n                                timeOut: 2000,\n                                positionClass: 'toast-top-right',\n                                progressBar: true,\n                                progressAnimation: 'increasing'\n                            });\n                            this.router.navigate(['/signin'])\n                        } else {\n                            console.log('something went wrong')\n                        }\n                    }, error => {\n                        this.isSpinner = false;\n                    });\n                } else {\n                    this.toastr.error('New password and confirm password should be same', 'Oops!', {\n                        timeOut: 4000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                }\n            }\n\n        }\n    }\n\n}\n","<div class=\"px-4 ui-bg-cover ui-bg-overlay-container\">\n    <div class=\"opacity-25 ui-bg-overlay bg-color\" ></div>\n    <div class=\"row pt-90\">\n      <div class=\"col-md-12 text-center\">\n          <div class=\"logo-area text-center\">\n              <a routerLink=\"/home\"><img src=\"./assets/images/Logo.svg\" alt=\"\"></a>\n          </div>\n      </div>\n   </div>\n    <div class=\"pb-5 authentication-inner\">\n        <div class=\"card mt-4 formsize\">\n            <div class=\"p-2\">\n                <h4 class=\"text-center text-muted font-weight-normal mb-4\">Update Password</h4>\n                <form #updateProfile=\"ngForm\" name=\"updateProfile\" autocomplete=\"off\">\n                    <div class=\"form-group\">\n                        <label class=\"form-label\">New Password</label>\n      \n                        <input type=\"password\" name=\"new\" placeholder=\"New Password\" [(ngModel)]=\"formObj.password\"\n                        class=\"form-control\" minlength=\"8\" maxlength=\"20\" #password=\"ngModel\" [pattern]=\"passwordPattern\" (keydown.space)=\"$event.preventDefault();\">\n                        <password-strength-meter [password]=\"formObj.password\"></password-strength-meter>\n                        <div class=\"text-danger\" *ngIf=\"password.errors && updateProfile.submitted\">\n                            <div *ngIf=\"password.errors.minlength\">Minimum 8 characters requried!</div>\n                            <div *ngIf=\"password.errors.pattern\">Enter valid password!</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"form-label\">Confirm Password</label>\n                        <input [(ngModel)]=\"formObj.confirmpassword\" name=\"confirmpassword\" type=\"password\" placeholder=\"Confirm Password\" class=\"form-control\">\n                    </div>\n\n                    <div id=\"Passwords\">\n                        Password MUST contain at least 8-20 characters. MUST contain at least one number and one alphabet.\n                        MUST contain at least one special character {{passCode}}\n                    </div>\n\n                    <button type=\"submit\" class=\"btn-login btn-block p-2 mt-4\" (click)=\"onSubmit(updateProfile.form)\" [disabled]=\"isSpinner\">\n                        Reset\n                    </button>\n\n                </form>\n            </div>\n            <div class=\"py-3 px-4 px-sm-5\">\n                <div class=\"text-center text-muted\">\n                    Already have an account? <a href=\"javascript:void(0)\" class=\"text-primary\" routerLink=\"/signin\">Sign In</a>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"isSpinner\" class=\"sub-loading\">\n        <div class=\"loader\">\n            <span class=\"text-large font-weight-bolder\">\n              <img src=\"assets/images/loader/123.gif\">\n            </span>\n        </div>\n     </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { DsaService } from 'src/app/service/dsa.service';\nimport { GlobalService } from 'src/app/service/global.service';\n\n@Component({\n    selector: 'app-sign-in',\n    templateUrl: './sign-in.component.html',\n    styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n    isSpinner: boolean = false;\n    formObj = { email: '', password: '', emailCode: '' };\n    isSubmited: boolean = false;\n    paramsData: any = {};\n    passwordType: any = 'password';\n\n    cartObj: any = {\n        user_collection: {\n            user_id: '',\n            collection_name: 'cart',\n            collection_type: '',\n            payment_card_id: '1',\n            ship_from: '',\n            terms_agree: '',\n            status_reason: '',\n            delivery_charges: '',\n            taxes: '',\n            related_business_indv_id: '',\n            order_id: null,\n            user_collection_seller: [],\n            status: 'active',\n            editedby: null,\n            deleted: null,\n            address_id: '',\n            create_user: '',\n            deletedby: null\n        },\n\n        collection_product: {\n            user_collection_id: '',\n            product_id: '',\n            quantity: 1,\n            status: 'active',\n            editedby: null,\n            deleted: null,\n            create_user: '',\n            deletedby: null\n        }\n    }\n\n    constructor(private router: Router,\n        private toastr: ToastrService,\n        private auth_service: AuthService,\n        private gs: GlobalService,\n        private _route: ActivatedRoute,\n        private dsa_service: DsaService\n    ) {\n        this.gs.updatePageName('Signin');\n    }\n\n    ngOnInit(): void {\n        this._route.queryParamMap.subscribe((params) => {\n            this.paramsData = params['params'];\n            // this.paramsData = params.get('params');\n            // this.paramsData = params.get('params');\n        });\n\n        if (this.gs.loginData && this.gs.loginData['_id']) {\n            this.cartObj.user_collection.user_id = this.gs.loginData['_id'];\n            this.cartObj.user_collection.create_user = this.gs.loginData['_id'];\n            this.cartObj.collection_product.create_user = this.gs.loginData['_id'];\n        }\n\n    }\n\n    onSubmit() {\n        if (this.formObj.email === '' || this.formObj.password === '') {\n            this.toastr.error('Please enter credientails', 'Oops!', {\n                timeOut: 1500,\n                positionClass: 'toast-top-right',\n                progressBar: true,\n                progressAnimation: 'increasing'\n            });\n        } else {\n            this.isSpinner = true;\n            this.auth_service.LoginBuyer(this.formObj).subscribe((res: any) => {\n                this.isSpinner = false;\n\n                if (res.status) {\n                    localStorage.clear();\n                    localStorage.setItem('tokens', res.token);\n                    localStorage.setItem('buyerData', JSON.stringify(res.data));\n\n                    this.gs.loginData = JSON.parse(localStorage.getItem('buyerData') || '');\n\n                    if (this.paramsData && this.paramsData['pd']) {\n                        this.addToCart();\n                    } else if (this.paramsData && this.paramsData['wld'] && this.paramsData['proId']) {\n                        this.router.navigate(['/home/single-product', this.paramsData['wld'], this.paramsData['proId']]);\n                    } else if (this.paramsData && this.paramsData['catId']) {\n                        this.router.navigate(['/home/shop', this.paramsData['catId']]);\n                    } else if (this._route.snapshot['queryParams']['page']) {\n                        this.router.navigate(['/my-accounts/my-accounts-details']);\n                    } else {\n                        this.router.navigate(['/']);\n                    }\n\n                    this.toastr.success('Login successfully.', 'Success', {\n                        timeOut: 2000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                } else {\n                    this.toastr.error(res.message, 'Oops!', {\n                        timeOut: 2000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                }\n            }, error => {\n                this.isSpinner = false;\n            });\n        }\n    }\n\n\n    addToCart() {\n        this.isSpinner = true;\n\n        this.cartObj.collection_product.product_id = this.paramsData.pd;\n        this.cartObj.user_collection.collection_type = 'cart';\n        this.cartObj.user_collection.user_id = this.gs.loginData['_id']\n        this.cartObj.user_collection.create_user = this.gs.loginData['_id']\n        this.cartObj.collection_product.create_user = this.gs.loginData['_id']\n        this.cartObj.user_collection.ship_from = ''\n        this.gs.addToCart(this.cartObj).subscribe((resp: any) => {\n            this.isSpinner = false;\n\n            if (resp.status) {\n                this.gs.cartCount += 1;\n                this.toastr.success('Product added to cart', 'Success', {\n                    timeOut: 5000,\n                    positionClass: 'toast-top-right',\n                    progressBar: true,\n                    progressAnimation: 'increasing'\n                });\n                this.router.navigate(['/home/cart']);\n            } else {\n                this.toastr.warning(resp['message'], 'Oops!', {\n                    timeOut: 5000,\n                    positionClass: 'toast-top-right',\n                    progressBar: true,\n                    progressAnimation: 'increasing'\n                });\n            }\n        });\n    }\n\n    newAccount() {\n        if (this.paramsData && this.paramsData['pd']) {\n            this.router.navigate(['/signup'], { queryParams: { pd: this.paramsData.pd } });\n        } else if (this.paramsData && this.paramsData['wld']) {\n            this.router.navigate(['/signup'], { queryParams: { wld: this.paramsData.wld } });\n        } else if (this.paramsData && this.paramsData['catId']) {\n            this.router.navigate(['/signup'], { queryParams: { catId: this.paramsData.catId } });\n        } else {\n            this.router.navigate(['/signup']);\n        }\n    }\n\n\n    // dsa-signin\n    dsaSignIn(emailCode: any) {\n        if (this.formObj.email === '' || this.formObj.password === '') {\n            this.toastr.error('Please enter credientails', 'Oops!', {\n                timeOut: 1500,\n                positionClass: 'toast-top-right',\n                progressBar: true,\n                progressAnimation: 'increasing'\n            });\n        } else {\n            this.isSpinner = true;\n            this.formObj.emailCode = emailCode;\n            this.dsa_service.signInDSA(this.formObj).subscribe((res: any) => {\n                this.isSpinner = false;\n\n                if (res.status) {\n                    localStorage.clear();\n                    localStorage.setItem('tokens', res.token);\n                    localStorage.setItem('buyerData', JSON.stringify(res.data));\n\n                    this.gs.loginData = JSON.parse(localStorage.getItem('buyerData') || '');\n                    if (this.gs.loginData.userType == 'DSARUSER') {\n                        this.router.navigate(['/dsa-module/dsa-account']);\n                    } else {\n                        this.router.navigate(['/']);\n                    }\n\n                    this.toastr.success('Login successfully.', 'Success', {\n                        timeOut: 2000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                } else {\n                    this.toastr.error(res.message, 'Oops!', {\n                        timeOut: 2000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                }\n            }, error => {\n                this.isSpinner = false;\n            });\n        }\n    }\n\n    changePassType() {\n        if (this.passwordType === \"password\") {\n            this.passwordType = 'text';\n        } else {\n            this.passwordType = 'password'\n        }\n\n    }\n\n}\n\n","<div id=\"main-wrapper\">\n    <!--Login Register section start-->\n    <div \n        class=\"login-register-section section pt-90 pt-lg-70 pt-md-60 pt-sm-55 pt-xs-45  pb-70 pb-lg-50 pb-md-40 pb-sm-30 pb-xs-20 bg-color\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-center\">\n                    <div class=\"logo-area text-center\">\n                        <a href=\"index.html\"><img src=\"assets/images/Logo.svg\" alt=\"\"></a>\n                    </div>\n                </div>\n                <!--Login Form Start-->\n                <div class=\"col-md-6 col-12 offset-md-3\">\n                    <div class=\"customer-login-register\">\n\n                        <div class=\"login-form mb-50\">\n                            <div class=\"form-login-title text-center\">\n                                <h3>Login to Your Account</h3>\n                            </div>\n                            <form #form=\"ngForm\">\n                                <div class=\"form-fild\">\n                                    <p>\n                                        <label>Your Email<sup>*</sup></label>\n                                    </p>\n                                    <input type=\"text\" [(ngModel)]=\"formObj.email\" name=\"email\" required>\n                                </div>\n                                <div class=\"form-fild mb-1\">\n                                    <p>\n                                        <label>Password <sup>*</sup></label>\n                                    </p>\n                                    <input [type]=\"passwordType\" [(ngModel)]=\"formObj.password\" name=\"password\" required>\n                                </div>\n                                <div class=\"form-group mb-2\">\n                                    <input name=\"passwordshow\" id=\"passwordshow\" type=\"checkbox\" \n                                    (click)=\"changePassType()\">\n                                    <label for=\"passwordshow\" class=\"pl-1 password\"> Show Password</label>\n                                 </div>\n\n                                <div class=\"login-submit mt-10 mb-20\">\n                                    <div class=\"pull-left line-height\">\n                                        By continuing, you agree to<br>ExpoBazaar's\n                                        <a target=\"_blank\" [routerLink]=\"['/home/privacy']\" class=\"text-link\">\n                                            <strong>Privacy Policy</strong>\n                                        </a> and\n                                        <a target=\"_blank\" [routerLink]=\"['/home/terms-condition']\" class=\"text-link\">\n                                            <strong>Terms of Use</strong>\n                                        </a>.\n                                    </div>\n                                    <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn-login pull-right\"\n                                        [disabled]=\"isSpinner\">\n                                        Login\n                                    </button>\n                                </div>\n\n                                <!-- <div class=\"text-center pt-5\">\n                                    <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn-login mr-2\" \n                                    [disabled]=\"isSpinner\">\n                                        Login\n                                     </button>\n                                </div> -->\n                                <!--\n                                    <button type=\"button\" (click)=\"dsaSignIn('DSARGEM')\" class=\"btn-login mr-2\" [disabled]=\"isSpinner\">\n                                        DSA Login\n                                    </button>\n                                    <button type=\"button\" (click)=\"dsaSignIn('DSCRGEM')\" class=\"btn-login\" [disabled]=\"isSpinner\">\n                                        DSC Login\n                                    </button> -->\n\n                                <div class=\"clear\"></div>\n                                <div class=\"form-fild text-center mt-3\">\n                                    <a routerLink=\"/forgot-password\" class=\"text-forgot\">Forgot password?</a>\n                                </div>\n                                <div class=\"clear\"></div>\n                                <div class=\"text-center text-muted mb-10 footer-account footer-account\">\n                                    Don't have an account yet?<br>\n                                    <a href=\"#\" (click)=\"newAccount()\" class=\"text-link\">\n                                       <strong>Create New Account</strong>\n                                   </a>\n                                    <br>\n                                    <a [routerLink]=\"['/dsa-signup']\" class=\"text-link\">\n                                        <strong>Become a Sales Partner</strong>\n                                    </a>\n                                </div>\n                                <div class=\"clear\"></div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <!--Login Form End-->\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"isSpinner\" class=\"sub-loading\">\n        <div class=\"loader\">\n            <span class=\"text-large font-weight-bolder\">\n              <img src=\"assets/images/loader/123.gif\">\n            </span>\n        </div>\n     </div>\n    <!--Login Register section end-->\n    <app-rights-footer></app-rights-footer>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { DomainvaluesService } from 'src/app/service/domainvalues.service';\nimport { GlobalService } from 'src/app/service/global.service';\nimport * as Feather from 'feather-icons';\nimport { CommonService } from 'src/app/service/common.service';\nimport { UploadfileService } from 'src/app/service/uploadfile.service';\nimport { environment } from 'src/environments/environment';\nimport { SettingService } from 'src/app/service/setting.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { flush } from '@angular/core/testing';\ndeclare const $: any;\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.scss']\n})\n\nexport class SignupComponent implements OnInit {\n\n    assetsURL = environment.assetsURL;\n    step: any = 'step1'\n    isZero: boolean = false;\n    isSpinner: boolean = false;\n    isDisable: boolean = false;\n    passCode: any = '!@#$%^&*()'\n    busTypeother: any;\n    businessTypeData: any = [];\n    allCountries: any = [];\n    allStates: any = [];\n    verfifyQuicker: any = 'yes';\n    paramsData: any = {};\n    actionPermissions: any = {};\n    parant_id: any;\n    imageView: any;\n    viewData: any = '';\n    userRegData: any = {\n        firstname: '',\n        lastname: '',\n        mobile: '',\n        email: ''\n    };\n\n    formObj: any = {\n        firstname: '',\n        lastname: '',\n        middlename: '',\n        phone_number: '',\n        password: '',\n        email: '',\n        individual: '',\n        buyer_status: 'BYPR',\n        agree_to_terms_conditions: '',\n\n        business: {\n            // bus_entity_type_other: '',\n            business_type: '',\n            bus_entity_type_other: '',\n            bus_name: '',\n            bus_email: '',\n            noOfStores: '',\n            business_Tax_Id: '',\n            business_phone: '',\n            status: 'active',\n            editedby: null,\n            deleted: null,\n            deletedby: null,\n            individual: '',\n            create_user: '',\n            w9_form: {\n                url: '',\n                document_name: '',\n            },\n        },\n        address_Register: {\n            zipcode: '',\n            city: '',\n            country: '',\n            state: '',\n            status: 'active',\n            address_type: 'CADD',\n            add_line1: '',\n            add_line2: '',\n            individual: '',\n            create_user: '',\n            bussiness: '',\n            editedby: null,\n            deleted: null,\n            deletedby: null,\n            code: 'BYRADD',\n        },\n    }\n\n    // OTP Var Section\n    config = {\n        allowNumbersOnly: false,\n        length: 4,\n        isPasswordInput: false,\n        disableAutoFocus: false,\n        placeholder: '',\n        inputStyles: {\n            width: '50px',\n            height: '50px'\n        }\n    };\n\n    receiveOTPCode: any;\n    otp: any;\n\n    // *** //\n\n    constructor(public auth_service: AuthService,\n        private toastr: ToastrService,\n        public router: Router,\n        private domainVal: DomainvaluesService,\n        private _route: ActivatedRoute,\n        public gs: GlobalService,\n        private uploadSrv: UploadfileService,\n        public setService: SettingService,\n        public sanitizer: DomSanitizer,\n        public common: CommonService) {\n        this.gs.updatePageName('Signup');\n    }\n\n    ngOnInit(): void {\n\n        if (this.gs.loginData && this.gs.loginData['_id']) {\n            this.setService.getPermission({ id: this.gs.loginData['_id'] }).subscribe((resp: any) => {\n                // console.log(\"resp >>\", resp);\n                this.actionPermissions = resp['data'];\n            }, (error: any) => {\n                console.log(error);\n            });\n        }\n        this._route.queryParamMap.subscribe((params) => {\n            this.paramsData = params['params'];\n            this.parant_id = params['params']['pxd'] || null;\n            this.viewData = params['params']['bvd'] || null;\n            if (this.parant_id) {\n                this.getBuyerById(this.parant_id)\n            }\n            if (this.viewData) {\n                this.getBuyerById(this.viewData)\n            }\n        });\n\n        // Get all Countries\n        this.domainVal.getAll_Activecountries().subscribe((resp: any) => {\n            this.allCountries = resp.data;\n            if (this.allCountries && this.allCountries.length) {\n                this.allCountries.sort(this.common.dynamicSort(\"value\"));\n                const result = this.allCountries.find((x: { value: string; }) => x.value === 'USA');\n                if (result && result._id) {\n                    this.formObj.address_Register.country = result._id;\n                    this.ChnageCountry(result._id);\n                }\n            }\n        });\n\n        // Get All Business Type\n        this.domainVal.getAll_bussiness_type().subscribe((resp: any) => {\n            this.businessTypeData = resp.data;\n\n            if (this.businessTypeData && this.businessTypeData.length) {\n                this.businessTypeData.sort(this.common.dynamicSort(\"value\"));\n                this.businessTypeData.push({ _id: 0, value: \"Others\" });\n            }\n        });\n    }\n\n    getBuyerById(id: any) {\n        this.isDisable = true;\n        this.auth_service.getBuyerById({ id }).subscribe((resp: any) => {\n            this.isDisable = false;\n            let userDetaisl = resp.data;\n\n            if (userDetaisl) {\n                this.formObj._id = userDetaisl._id;\n                this.formObj.firstname = userDetaisl.firstname;\n                this.formObj.lastname = userDetaisl.lastname;\n                this.formObj.middlename = userDetaisl.middlename;\n                this.formObj.email = userDetaisl.email_address.email_add;\n\n                this.formObj.business.id = userDetaisl.bussiness._id;\n                this.formObj.business.bus_email = userDetaisl.email_business.email_add;\n                this.formObj.business.business_type = userDetaisl.bussiness.business_type;\n                this.formObj.business.bus_name = userDetaisl.bussiness.bus_name;\n                this.formObj.business.noOfStores = userDetaisl.bussiness.noOfStores;\n                this.formObj.business.business_Tax_Id = userDetaisl.bussiness.business_Tax_Id;\n\n                this.formObj.phone_number = userDetaisl.phonebook.phone_number;\n                this.formObj.agree_to_terms_conditions = userDetaisl.bussiness.agree_terms || true;\n                let x = userDetaisl.phonebook_business.phone_number.replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/)\n                this.formObj.business.business_phone = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\n                this.formObj.address_Register.zipcode = userDetaisl.address.zipcode;\n                this.formObj.address_Register.city = userDetaisl.address.city;\n                this.formObj.address_Register.country = userDetaisl.address.country;\n                this.formObj.address_Register.state = userDetaisl.address.state;\n                this.formObj.address_Register.address_type = userDetaisl.address.address_type;\n                this.formObj.address_Register.add_line1 = userDetaisl.address.add_line1;\n                this.formObj.address_Register.add_line2 = userDetaisl.address.add_line2;\n                if (userDetaisl.bussiness && userDetaisl.bussiness.w9_form) {\n                    this.formObj.business.w9_form.document_name = userDetaisl.bussiness.w9_form.document_name || '';\n                    this.formObj.business.w9_form.url = userDetaisl.bussiness.w9_form.url || '';\n                }\n            }\n\n        }, error => {\n            this.isDisable = false;\n            console.log('error', error);\n        });\n    }\n\n    tabChange(key: string) {\n        this.step = key;\n    }\n\n    telInputObject(obj: any) {\n        obj.setCountry('us');\n    }\n\n    submit(form: any) {\n        if (form.valid && this.formObj.business.w9_form.url) {\n            this.isSpinner = true;\n            if (this.router.url == '/dsa-buyer-signup') {\n                this.formObj.parent_id = this.gs.loginData['_id'];\n            }\n            this.auth_service.createBuyer(this.formObj).subscribe((resp: any) => {\n                this.isSpinner = false;\n                if (resp.status) {\n                    if (this.formObj.parent_id) {\n                        this.toastr.success('Buyer created successfully!', 'Success', {\n                            timeOut: 5000,\n                            positionClass: 'toast-top-right',\n                            progressBar: true,\n                            progressAnimation: 'increasing'\n                        });\n\n                        this.router.navigate(['/dsa-module/manage-buyers']);\n                        return;\n                    }\n\n                    $('#defaultSize').modal('show');\n                    // localStorage.setItem('buyerUserData', JSON.stringify(resp.data));\n                    // localStorage.setItem('otpcode', resp.code);\n                    this.toastr.success('Thank you for choosing ExpoBazaar!', 'Success', {\n                        timeOut: 5000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                    // this.getOTP();\n                    // setTimeout(() => {\n                    //     window.scroll(0, 0);\n                    // }, 80);\n                } else {\n                    // if (resp.pending && resp.pending._id) {\n                    //     localStorage.setItem('buyerUserData', JSON.stringify(resp.pending));\n                    //     this.toastr.error('Otp verification is pending.', 'Oops', {\n                    //         timeOut: 8000,\n                    //         positionClass: 'toast-top-right',\n                    //         progressBar: true,\n                    //         progressAnimation: 'increasing',\n                    //     });\n                    //     this.getOTP();\n                    //     return;\n                    // }\n                    this.toastr.error(resp['message'], 'Oops', {\n                        timeOut: 8000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing',\n                    });\n                }\n            }, (error: any) => {\n                this.isSpinner = false;\n                console.log(error);\n            });\n        } else {\n            this.isSpinner = false;\n            this.toastr.error('Please fill all required fields.', 'Oops!', {\n                timeOut: 8000,\n                positionClass: 'toast-top-right',\n                progressBar: true,\n                progressAnimation: 'increasing',\n            });\n        }\n    }\n\n\n    updateBuyer(form: any) {\n        if (form.valid) {\n            this.isSpinner = true;\n            this.formObj.individual = this.parant_id;\n            this.auth_service.updateRegBuyer(this.formObj).subscribe((resp: any) => {\n                this.isSpinner = false;\n                if (resp.status) {\n                    this.toastr.success('Register details updated Successfully!', 'Success', {\n                        timeOut: 5000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing'\n                    });\n                    this.router.navigate(['/dsa-module/manage-buyers']);\n\n                } else {\n                    this.toastr.error(resp['message'], 'Oops', {\n                        timeOut: 8000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing',\n                    });\n                }\n            }, (error: any) => {\n                this.isSpinner = false;\n                console.log(error);\n            });\n        }\n    }\n\n    // w9 form upload picture\n    w9_form_upload(event: any) {\n        var file = event.target.files[0];\n        var FileSize = event.target.files[0].size / Math.pow(1024, 2) // in MB\n        if (FileSize >= 5) {\n            try {\n                (<HTMLInputElement>document.getElementById('W9-form')).value = '';\n            } catch (ee) { }\n            this.toastr.error('File size is too Large, Maximum 5 mb Allowed', '', {\n                timeOut: 3000,\n                positionClass: 'toast-top-right',\n                progressBar: true,\n                progressAnimation: 'increasing'\n            });\n\n        }\n        else {\n            this.isSpinner = true;\n            this.uploadSrv.saveimage(file).subscribe((data: any) => {\n                this.formObj.business.w9_form.url = data.file;\n                this.formObj.business.w9_form.document_name = file.name;\n                this.isSpinner = false;\n            },\n                error => {\n                    console.log('error');\n                });\n        }\n    }\n\n    update(form: any, key: string) {\n        if (form.valid) {\n            let userData = JSON.parse(localStorage.getItem('buyerUserData') || '{}');\n\n            this.formObj.business.individual = userData._id;\n            this.formObj.business.email = userData.email_add;\n            this.formObj.business.create_user = userData._id;\n            this.formObj.address_Register.individual = userData._id;\n            this.formObj.address_Register.create_user = userData._id;\n            this.formObj.id = this.userRegData._id;\n            this.formObj.buyer_status = 'BYPR';\n            this.isSpinner = true;\n            this.updateBusiness(key);\n        }\n    }\n\n    updateBusiness(key: string) {\n        this.isSpinner = true;\n        this.auth_service.updateBuyer(this.formObj).subscribe((resp: any) => {\n            this.isSpinner = false;\n            if (resp.status) {\n                this.toastr.success('Business details added successfully', 'Success', {\n                    timeOut: 5000,\n                    positionClass: 'toast-top-right',\n                    progressBar: true,\n                    progressAnimation: 'increasing'\n                });\n\n                this.step = key;\n\n                setTimeout(() => {\n                    if (typeof window !== 'undefined' && window.document) {\n                        window.scroll(0, 0);\n                    }\n                }, 80);\n            }\n        }, (error: any) => {\n            this.isSpinner = false;\n            console.log(error);\n        });\n    }\n\n    backToBuyer() {\n        this.router.navigate(['/dsa-module/manage-buyers']);\n    }\n\n    submitTabChange(key: string, form: any) {\n        if (form.valid) {\n            this.step = key;\n            if (typeof window !== 'undefined' && window.document) {\n                window.scroll(0, 0);\n            }\n\n        }\n    }\n\n    // OTP Section Start\n    getOTP() {\n        this.userRegData = JSON.parse(localStorage.getItem('buyerUserData') || '');\n        this.receiveOTPCode = localStorage.getItem('otpcode') || '';\n    }\n\n    VerifyOTPsubmitNo(otp?: any) {\n        if (otp) {\n            this.otp = otp;\n        }\n    }\n\n    VerifyOTPsubmit() {\n        if (this.otp && this.otp.length == 4) {\n            let body = {\n                id: this.userRegData._id,\n                buyer_status: 'PR',\n                otp: this.otp,\n            }\n\n            this.isSpinner = true;\n\n            this.auth_service.otpVerficationBuyer(body).subscribe((resp: any) => {\n                this.isSpinner = false;\n                if (resp.status) {\n                    this.toastr.success('Email Address Verified successfully', 'Success', {\n                        timeOut: 4000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing',\n                    });\n                    this.tabChange('step3');\n                } else {\n                    this.toastr.error(resp.message, 'error', {\n                        timeOut: 4000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing',\n                    });\n                }\n            }, error => {\n                this.isSpinner = false;\n            });\n        } else {\n            this.toastr.error('OTP is not correct', 'error', {\n                timeOut: 4000,\n                positionClass: 'toast-top-right',\n                progressBar: true,\n                progressAnimation: 'increasing',\n            });\n        }\n    }\n\n    resendOTP() {\n        this.isSpinner = true;\n\n        this.auth_service.resendOTP({\n            email: this.userRegData.email_add\n        }).subscribe((resp: any) => {\n            this.isSpinner = false;\n            localStorage.setItem('otpcode', resp.code);\n\n            if (resp.status) {\n                this.getOTP();\n                this.toastr.success('OTP sent on the registered Email', 'Success',\n                    {\n                        timeOut: 4000,\n                        positionClass: 'toast-top-right',\n                        progressBar: true,\n                        progressAnimation: 'increasing',\n                    }\n                );\n                this.tabChange('step2');\n            }\n        });\n    }\n\n    // ####################  OTP SECTION END #################### //\n\n    // Business Type Change Others\n    BusinessType($event: any) {\n        let text = $event.target.options[$event.target.options.selectedIndex].text;\n\n        if (text == \"Others\") {\n            this.busTypeother = true;\n        } else {\n            this.busTypeother = false;\n        }\n    }\n\n    // Country\n    ChnageCountry(event: any) {\n        let val;\n        if (event && event.target) {\n            val = event.target.value;\n        } else {\n            val = event;\n        }\n        this.domainVal.getstateOrCity(val).subscribe((resp: any) => {\n            this.allStates = resp.data;\n            if (this.allStates && this.allStates.length) {\n                this.allStates.sort(this.common.dynamicSort(\"value\"));\n            }\n        });\n    }\n\n    mobilefirstnozero(event: any) {\n        var x = event.target.value.replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,3})/);\n        event.target.value = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\n        return;\n\n        if (!this.formObj.business.phone.match('^[1-9][0-9]*$')) {\n            this.formObj.business.phone = ''\n            this.isZero = true\n        } else {\n            this.isZero = false\n        }\n    }\n\n    imageViewModal(image: any) {\n        $('#imageViewModal').modal('show');\n        this.imageView = image\n    }\n\n    modalHide() {\n        $('#defaultSize').modal('hide');\n    }\n\n\n    signIn() {\n        if (this.paramsData && this.paramsData['pd']) {\n            this.router.navigate(['/signin'], { queryParams: { pd: this.paramsData.pd } });\n        } else if (this.paramsData && this.paramsData['wld']) {\n            this.router.navigate(['/signin'], { queryParams: { wld: this.paramsData.wld } });\n        } else if (this.paramsData && this.paramsData['catId']) {\n            this.router.navigate(['/signin'], { queryParams: { catId: this.paramsData.catId } });\n        } else {\n            this.router.navigate(['/signin']);\n        }\n        $('#defaultSize').modal('hide');\n    }\n}\n","<!-- <body style=\"background-color: #F1F1F1\"> -->\n<div id=\"main-wrapper\">\n    <!--Login Register section start-->\n    <div class=\"section pt-90 pb-70 pt-xs-45 signup-page\">\n        <div class=\"container snup-container\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-center\">\n                    <div class=\"logo-area text-center\">\n                        <a routerLink=\"/home\"><img src=\"assets/images/Logo.svg\" alt=\"\"></a>\n                    </div>\n                </div>\n\n                <div class=\"col-lg-12 col-md-12 align-items-center mt-2\">\n                    <form #signupForm=\"ngForm\" name=\"signupForm\" novalidate>\n                        <div class=\"width-800 mx-auto\">\n                            <div class=\"signup-form\">\n                                <h3 class=\"text-center padding\">\n                                    Create Buyer Account\n                                </h3>\n                                <div class=\"row\">\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"Firstname\">First Name<sup>*</sup></label>\n                                        <input type=\"text\" name=\"firstname\" id=\"Firstname\" class=\"form-control\"\n                                            placeholder=\"First Name\" aria-describedby=\"firstname\" #firstname=\"ngModel\"\n                                            appAlphabetOnly [(ngModel)]=\"formObj.firstname\" required\n                                            [disabled]=\"viewData\" />\n                                        <div class=\"text-danger\" *ngIf=\"firstname.errors && signupForm.submitted\">\n                                            First name is required!\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"Middlename\">Middle Name</label>\n                                        <input type=\"text\" name=\"middlename\" id=\"Middlename\" class=\"form-control\"\n                                            placeholder=\"Middle Name\" aria-describedby=\"middlename\" appAlphabetOnly\n                                            [(ngModel)]=\" formObj.middlename\" [disabled]=\"viewData\" />\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"lastName\">Last Name<sup>*</sup></label>\n                                        <input type=\"text\" id=\"lastName\" class=\"form-control\"\n                                            aria-describedby=\"lastname\" placeholder=\"Last Name\" name=\"lastname\"\n                                            [(ngModel)]=\"formObj.lastname\" #lastname=\"ngModel\" appAlphabetOnly required\n                                            [disabled]=\"viewData\" />\n                                        <div class=\"text-danger\" *ngIf=\"lastname.errors && signupForm.submitted\">\n                                            <div *ngIf=\"lastname.errors.required\">Last name is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"phone_number\">Phone number<sup>*</sup></label>\n                                        <input type=\"text\" id=\"phone_number\" class=\"form-control\"\n                                            placeholder=\"Phone number\" name=\"phone_number\"\n                                            [(ngModel)]=\"formObj.phone_number\" #phone_number=\"ngModel\" numbersOnly\n                                            minlength=\"10\" maxlength=\"10\" required [disabled]=\"viewData\" />\n\n                                        <div class=\"text-danger\" *ngIf=\"phone_number.errors && signupForm.submitted\">\n                                            <div *ngIf=\"phone_number.errors.required\">Phone number is required</div>\n                                            <div *ngIf=\"phone_number.errors?.minlength\">Enter valid USA phone no\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-4 mb-1\">\n                                        <label class=\"form-label\" for=\"emailID\">Email<sup>*</sup></label>\n                                        <input type=\"email\" name=\"email\" aria-describedby=\"emailID\" id=\"emailID\"\n                                            class=\"form-control\" placeholder=\"john@email.com\"\n                                            [(ngModel)]=\"formObj.email\" required [pattern]=\"common.emailPattern\"\n                                            #email=\"ngModel\" [disabled]=\"viewData\" />\n                                        <div class=\"text-danger\" *ngIf=\"email.errors && signupForm.submitted\">\n                                            <div *ngIf=\"email.errors?.required\">Email is required</div>\n                                            <div *ngIf=\"email.errors?.pattern\">Email is not correct</div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"form-password-toggle col-md-4\">\n                                        <label class=\"form-label\" for=\"Passwords\">Password<sup>*</sup></label>\n                                        <a class=\"helptip\" href=\"#\">\n                                            <i class=\"fa fa-question-circle\" title=\"\">\n                                            </i>\n                                            <span class=\"help\"><strong>Password</strong><br>MUST contain at least 8-20\n                                                characters.<br>MUST contain at least one number and one alphabet.\n                                                <br>MUST contain at least one special character !@#$%^&*()</span>\n                                        </a>\n                                        <input type=\"password\" name=\"#\" id=\"Passwords\" aria-describedby=\"password\"\n                                            name=\"password\" [(ngModel)]=\"formObj.password\" required minlength=\"8\"\n                                            maxlength=\"20\" #password=\"ngModel\" [pattern]=\"common.passwordPattern\"\n                                            (keydown.space)=\"$event.preventDefault();\" class=\"form-control\"\n                                            [disabled]=\"viewData || parant_id\"\n                                            placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\" />\n                                        <password-strength-meter [password]=\"formObj.password\">\n                                        </password-strength-meter>\n                                        <div class=\"text-danger\" *ngIf=\"password.errors && signupForm.submitted\">\n                                            <div *ngIf=\"password.errors.required\">Password is required!</div>\n                                            <div *ngIf=\"password.errors.minlength\">Minimum 8 characters requried!</div>\n                                            <div *ngIf=\"password.errors.pattern\">Enter valid password!</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-password-toggle col-md-4\">\n                                        <label class=\"form-label\" for=\"CnfrmPasswordId\">\n                                            Confirm Password<sup>*</sup>\n                                        </label>\n                                        <input type=\"password\" name=\"CnfmPasswordVar\" id=\"CnfrmPasswordId\"\n                                            class=\"form-control\"\n                                            placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                                            appPasswordvalidator=\"password\" [(ngModel)]=\"formObj.conformpassword\"\n                                            name=\"CnfmPasswordVar\" #CnfmPasswordVar=\"ngModel\" minlength=\"8\"\n                                            maxlength=\"20\" required [disabled]=\"viewData || parant_id\"\n                                            [ngClass]=\"{'is-invalid': (CnfmPasswordVar.touched || CnfmPasswordVar.dirty) && !CnfmPasswordVar.valid }\" />\n                                        <div class=\"text-danger\" *ngIf=\"CnfmPasswordVar.errors && signupForm.submitted\">\n                                            <div *ngIf=\"CnfmPasswordVar.hasError('required')\">\n                                                Confirm Password is required.\n                                            </div>\n                                            <div\n                                                *ngIf=\"CnfmPasswordVar.hasError('passwordMatchError') && !CnfmPasswordVar.hasError('required')\">\n                                                Password doesn't match\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <hr>\n                                <div class=\"row\">\n                                    <div class=\"mb-1 col-md-12\">\n                                        <h3 class=\"text-center text-capitalize\">Enter your business info</h3>\n                                    </div>\n                                    <!-- <h3 class=\"text-center padding\">\n                                        Create Buyer Account\n                                    </h3> -->\n                                    <div class=\"mb-1 col-md-6\">\n                                        <label class=\"form-label\" for=\"registeredBusiness\">Registered Business\n                                            Name<sup>*</sup></label>\n                                        <input type=\"text\" id=\"registeredBusiness\" class=\"form-control\"\n                                            placeholder=\"Registered Business Name\"\n                                            [(ngModel)]=\"formObj.business.bus_name\" name=\"registeredBusinessName\"\n                                            #regisBusiness=\"ngModel\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\" *ngIf=\"regisBusiness.errors && signupForm.submitted\">\n                                            <div *ngIf=\"regisBusiness.errors.required\">Registered Business Name is\n                                                required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-6\">\n                                        <label class=\"form-label\" for=\"bus_emailID\">Business Email<sup>*</sup></label>\n                                        <input type=\"email\" name=\"bus_email\" aria-describedby=\"bus_emailID\"\n                                            id=\"bus_emailID\" class=\"form-control\" placeholder=\"Business Email\"\n                                            [(ngModel)]=\"formObj.business.bus_email\" required\n                                            [pattern]=\"common.emailPattern\" #bus_email=\"ngModel\"\n                                            [disabled]=\"viewData\" />\n                                        <div class=\"text-danger\" *ngIf=\"bus_email.errors && signupForm.submitted\">\n                                            <div *ngIf=\"bus_email.errors?.required\">Business email is required</div>\n                                            <div *ngIf=\"bus_email.errors?.pattern\">Business email is not correct</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-6\">\n                                        <label class=\"form-label float-left\" for=\"username\">\n                                            Business Phone<sup>*</sup>\n                                        </label>\n                                        <a class=\"helptip\" href=\"#\">\n                                            <i class=\"fa fa-question-circle\" title=\"\"></i>\n                                            <span class=\"help\">\n                                                We may contact you for\n                                                verification\n                                            </span>\n                                        </a>\n                                        <br>\n\n                                        <input type=\"text\" class=\"form-control input-style\" placeholder=\"\" disabled>\n                                        <input type=\"text\" id=\"businessPhone\" class=\"form-control Phone-next-input\"\n                                            placeholder=\"(555) 555-5555\" name=\"phone\" #businessPhone=\"ngModel\"\n                                            [(ngModel)]=\"formObj.business.business_phone\" required\n                                            (keypress)=\"mobilefirstnozero($event)\" minlength=\"14\" [disabled]=\"viewData\" />\n\n                                        <!-- <input type=\"text\" id=\"businessPhone\" class=\"form-control\"\n                                            placeholder=\"Business Phone\" ng2TelInput\n                                            [ng2TelInputOptions]=\"{initialCountry: 'in'}\" numbersOnly\n                                            (intlTelInputObject)=\"telInputObject($event)\" name=\"phone\"\n                                            #businessPhone=\"ngModel\" [(ngModel)]=\"formObj.business.business_phone\" minlength=\"10\"\n                                            maxlength=\"10\" required (keypress)=\"mobilefirstnozero($event)\"\n                                            oninput=\"if(!this.value.match('^[1-9][0-9]*$'))this.value='';\" /> -->\n\n                                        <div *ngIf=\"isZero\" class=\"text-danger\">First number 0 not allowed</div>\n                                        <div class=\"text-danger\" *ngIf=\"businessPhone.errors && signupForm.submitted\">\n                                            <div *ngIf=\"businessPhone.errors?.required\">Business Phone is required</div>\n                                            <div *ngIf=\"businessPhone.errors?.minlength\">Enter valid USA phone\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-6\">\n                                        <label class=\"form-label\" for=\"streetNumber\">Address Line 1<sup>*</sup></label>\n\n                                        <input type=\"text\" id=\"streetNumber\" class=\"form-control\"\n                                            placeholder=\"Street & Number\"\n                                            [(ngModel)]=\"formObj.address_Register.add_line1\" name=\"add_line1\"\n                                            #streetNumber=\"ngModel\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\" *ngIf=\"streetNumber.errors && signupForm.submitted\">\n                                            <div *ngIf=\"streetNumber.errors.required\">Address Line 1 is required\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"suiteUnit\">Address Line 2</label>\n                                        <input type=\"text\" id=\"suiteUnit\" class=\"form-control\"\n                                            placeholder=\"Suite, Unit, Building, Floor\"\n                                            [(ngModel)]=\"formObj.address_Register.add_line2\" name=\"add_line2\"\n                                            #suiteUnit=\"ngModel\" [disabled]=\"viewData\">\n                                        <!-- <div class=\"text-danger\" *ngIf=\"suiteUnit.errors && signupForm.submitted\">\n                                            <div *ngIf=\"suiteUnit.errors.required\">Address Line 2 required</div>\n                                        </div> -->\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"zipCode\">Zip Code<sup>*</sup></label>\n                                        <input type=\"text\" id=\"zipCode\" class=\"form-control\" placeholder=\"Zip Code \"\n                                            [(ngModel)]=\"formObj.address_Register.zipcode\" name=\"zipCode\"\n                                            #zipCode=\"ngModel\" minlength=\"5\" maxlength=\"5\" numbersOnly\n                                            onpaste=\"return false;\" pattern=\"\\d{1,5}\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\" *ngIf=\"zipCode.errors && signupForm.submitted\">\n                                            <div *ngIf=\"zipCode.errors.required\">Zip Code is required</div>\n                                            <div *ngIf=\"zipCode.errors?.minlength && !zipCode.errors?.pattern\">\n                                                Enter 5 digit Zip Code\n                                            </div>\n                                            <div *ngIf=\"zipCode.errors?.pattern\">Enter 5 digit Zip Code</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"city\">\n                                            City<sup>*</sup>\n                                        </label>\n                                        <input type=\"text\" class=\"form-control\" id=\"city\" placeholder=\"City\"\n                                            [(ngModel)]=\"formObj.address_Register.city\" name=\"city\" #city=\"ngModel\"\n                                            required [disabled]=\"viewData\">\n\n                                        <div class=\"text-danger\" *ngIf=\"city.errors && signupForm.submitted\">\n                                            <div *ngIf=\"city.errors.required\">City is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"country\">Country<sup>*</sup></label>\n                                        <select class=\"form-control\" id=\"Country\" name=\"country\" #Country=\"ngModel\"\n                                            (change)=\"ChnageCountry($event)\" [disabled]=\"viewData\"\n                                            [(ngModel)]=\"formObj.address_Register.country\" required>\n                                            <option value=\"\" disabled>Select Country</option>\n                                            <ng-container *ngFor=\"let item of allCountries\">\n                                                <option *ngIf=\"item.code == 'USA'\" [value]=\"item._id\">\n                                                    {{item.value}}\n                                                </option>\n                                            </ng-container>\n                                        </select>\n                                        <div class=\"text-danger\" *ngIf=\"Country.errors && signupForm.submitted\">\n                                            Country is required!\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"state\">State<sup>*</sup></label>\n                                        <select class=\"form-control\" id=\"state\" [disabled]=\"viewData\"\n                                            [(ngModel)]=\"formObj.address_Register.state\" name=\"state\" id=\"state\"\n                                            #state=\"ngModel\" required>\n                                            <option value=\"\" disabled>Select State</option>\n                                            <option *ngFor=\"let item of allStates; let i = index\" value=\"{{item._id}}\">\n                                                {{item.value}}\n                                            </option>\n                                            <div class=\"text-danger\" *ngIf=\"state.errors && signupForm.submitted\">\n                                                <div *ngIf=\"state.errors.required\">State is required</div>\n                                            </div>\n                                        </select>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"bus_entity_typ\">Business\n                                            Type<sup>*</sup></label><a class=\"helptip\" href=\"#\"><i\n                                                class=\"fa fa-question-circle\" title=\"\"></i><span class=\"help\">Most\n                                                businesses in the US register as sole proprietorships, partnerships,\n                                                corporations, and limited liability companies. View the IRS website for\n                                                more\n                                                information. If you’re a sole proprietor, clearly indicate your full\n                                                name\n                                                and business name in the fields above. If you don’t have an official\n                                                business name, use your full name in that field as well. This will help\n                                                us\n                                                confirm your business. In some cases, we may contact you for some\n                                                additional\n                                                documents.</span></a>\n                                        <select class=\"form-control\" id=\"bus_entity_typ\" name=\"bus_entity_typ\"\n                                            (change)=\"BusinessType($event)\" required #business_type=\"ngModel\"\n                                            [(ngModel)]=\"formObj.business.business_type\" [disabled]=\"viewData\">\n                                            <option value=\"\">Select Business Type</option>\n                                            <option *ngFor=\"let item of businessTypeData\" value=\"{{item?._id}}\">\n                                                {{item?.value}}\n                                            </option>\n                                        </select>\n\n                                        <div class=\"text-danger\" *ngIf=\"business_type.errors && signupForm.submitted\">\n                                            Business Type is required!\n                                        </div>\n                                    </div>\n\n                                    <div *ngIf=\"busTypeother\" class=\"mb-1 col-md-4\">\n                                        <label for=\"bus_entity_type_other\">Business Type Others <sup>*</sup></label>\n                                        <input type=\"text\" id=\"us_ownership\" required #bus_entity_type_other=\"ngModel\"\n                                            [(ngModel)]=\"formObj.business.bus_entity_type_other\" class=\"form-control\"\n                                            id=\"bus_entity_type_other\" name=\"bus_entity_type_other\"\n                                            placeholder=\"Business Type Others\">\n                                        <div class=\"text-danger\"\n                                            *ngIf=\"busTypeother && bus_entity_type_other.errors && signupForm.submitted\">\n                                            Please specify other business type\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"noOfS\">No. of Stores<sup>*</sup></label>\n                                        <input type=\"text\" class=\"form-control\" id=\"noOfS\" name=\"noOfStores\"\n                                            [(ngModel)]=\"formObj.business.noOfStores\" #noOfStores=\"ngModel\"\n                                            placeholder=\"Enter Number\" required [disabled]=\"viewData\">\n\n                                        <div class=\"text-danger\" *ngIf=\"noOfStores.errors && signupForm.submitted\">\n                                            No. of Stores is required!\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"username\">Business Tax ID/SSN<sup>*</sup>\n                                        </label>\n                                        <a class=\"helptip\" href=\"#\">\n                                            <i class=\"fa fa-question-circle\" title=\"\"></i>\n                                            <span class=\"help\">Enter your business' 9-digit Employer Identification\n                                                Number\n                                                (EIN). <br><br><strong>Sole proprietor?</strong><br>Enter your Social\n                                                Security Number instead.</span></a>\n                                        <input type=\"text\" class=\"form-control\" name=\"business_Tax_Id\"\n                                            [(ngModel)]=\"formObj.business.business_Tax_Id\" #business_Tax_Id=\"ngModel\"\n                                            placeholder=\"Business Tax ID/SSN\" required [disabled]=\"viewData\">\n                                        <div class=\"text-danger\" *ngIf=\"business_Tax_Id.errors && signupForm.submitted\">\n                                            Business Tax ID/SSN is required!\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"mb-1 col-md-4\">\n                                        <label class=\"form-label\" for=\"username\">Upload W9 form<sup>*</sup></label>\n                                        <label class=\"file\">\n                                            <input type=\"file\" id=\"W9-form\" aria-label=\"File browser example\"\n                                                (change)=\"w9_form_upload($event);\" accept=\".pdf,.doc\"\n                                                [disabled]=\"viewData\">\n                                            <span class=\"file-custom\"\n                                                *ngIf=\"formObj.business && formObj.business.w9_form\">\n                                                {{formObj.business.w9_form.document_name}}\n                                            </span>\n                                            <div class=\"text-danger pt-2\" *ngIf=\"!(formObj.business.w9_form && formObj.business.w9_form.url) && signupForm.submitted\">\n                                                W9 form is required\n                                            </div>\n                                        </label>\n                                    </div>\n                                    <div class=\"mb-2 col-md-2 pt-3\">\n                                        <span  *ngIf=\"formObj.business.w9_form && formObj.business.w9_form.url\">\n                                             <img src=\"assets/pdf.png\" alt=\"w9_form\" id=\"mediaImage\" class=\"pointer\"\n                                                 (click)=\"imageViewModal(formObj.business.w9_form.url)\" />\n                                             <br>\n                                             <i class=\"fa fa-download action_btn ml-3 mt-2 pointer float-none\" aria-hidden=\"true\"\n                                               (click)=\"gs.downloadFileFromUrl(assetsURL + formObj.business.w9_form.url,formObj.business.w9_form.url)\" >\n                                             </i>\n                                             <i class=\"fa fa-eye action_btn ml-4 mt-2 pointer float-left\" aria-hidden=\"true\"\n                                              (click)=\"imageViewModal(formObj.business.w9_form.url)\" >\n                                             </i>\n                                       </span>\n                                   </div>\n                                    <div class=\"col-md-4 downlod btn-padd\">\n                                        <a class=\"btn btn-warning btn-xl\" href=\"https://www.irs.gov/pub/irs-pdf/fw9.pdf\"\n                                            target=\"_blank\">\n                                            <i data-feather=\"download\" class=\"align-middle me-sm-25 me-0\"></i>\n                                            <span class=\"align-middle d-sm-inline-block \">\n                                                Download template\n                                            </span>\n                                        </a>\n                                    </div>\n                                </div>\n                                <div class=\"row mt-25\">\n                                    <div class=\"col-md-8 col-12 mb-25\">\n                                        <input type=\"checkbox\" [(ngModel)]=\"formObj.agree_to_terms_conditions\"\n                                            name=\"agree_to_terms_conditions\" #agree_terms=\"ngModel\" required\n                                            [disabled]=\"viewData\">\n                                        I agree to ExpoBazaar's\n                                        <a target=\"_blank\" [routerLink]=\"['/home/privacy']\" class=\"text-link\">\n                                            <strong>Privacy Policy</strong>\n                                        </a> and\n                                        <a target=\"_blank\" [routerLink]=\"['/home/terms-condition']\" class=\"text-link\">\n                                            <strong>Terms of Use</strong>\n                                        </a>.\n                                        <!-- terms and conditions. -->\n                                        <div class=\"text-danger\" *ngIf=\"agree_terms.errors && signupForm.submitted\">\n                                            Terms and conditions are required!\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4 text-right\">\n                                        <ng-container *ngIf=\"!viewData && !parant_id\">\n                                            <button type=\"submit\" (click)=\"submit(signupForm.form)\"\n                                                class=\"btn btn-primary btn-next mr-2\" [disabled]=\"isSpinner\">\n                                                Submit\n                                            </button>\n                                        </ng-container>\n\n                                        <ng-container *ngIf=\"parant_id\">\n                                            <button type=\"submit\" (click)=\"updateBuyer(signupForm.form)\"\n                                                class=\"btn btn-primary btn-next mr-2\" [disabled]=\"isSpinner\">\n                                                Update\n                                            </button>\n                                        </ng-container>\n\n                                        <a *ngIf=\"parant_id || viewData || router.url == '/dsa-buyer-signup'\">\n                                            <button [routerLink]=\"['/dsa-module/manage-buyers']\" type=\"button\"\n                                                class=\"btn btn-primary btn-prev\">\n                                                Back\n                                            </button>\n                                        </a>\n                                    </div>\n                                </div>\n                                <div class=\"text-center\"\n                                    *ngIf=\"!parant_id && !viewData && router.url != '/dsa-buyer-signup'\">\n                                    <!-- <div class=\"form-fild text-center mt-20\"> -->\n                                    Already have an account?\n                                    <a routerLink=\"/signin\" class=\"text-forgot\">\n                                        Sign In here\n                                    </a>\n                                    <!-- </div> -->\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Modal -->\n    <div class=\"modal fade text-start modal-success\" data-backdrop=\"static\" id=\"defaultSize\" tabindex=\"-1\"\n        aria-labelledby=\"myModalLabel18\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n\n                <div class=\"modal-body text-center\">\n                    <!-- <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button> -->\n                    <div class=\"logo-area mt-20 mb-20\">\n                        <a routerLink=\"/home\"><img src=\"./assets/images/Logo.svg\" alt=\"\"></a>\n                    </div>\n                    <h1 class=\"mx-auto mb-2\">Thank you for choosing ExpoBazaar!\n                    </h1>\n                    <p class=\"mb-2\">Our team will mail you back shortly to\n                        complete your account setup.</p>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"float-left\">Having trouble?\n                        <a [routerLink]=\"['/home/contactus']\" (click)=\"modalHide()\" class=\"text-link\">\n                            Contact us\n                        </a>\n                    </div>\n                    <div class=\"float-right\">\n                        <a *ngIf=\"parant_id\">\n                            <button (click)=\"backToBuyer()\" type=\"button\" class=\"btn btn-primary btn-prev mr-2\">\n                                Back to Buyer Management\n                            </button>\n                        </a>\n                        <a *ngIf=\"!parant_id\">\n                            <button class=\"btn btn-success\" (click)=\"signIn()\">Click here to Sign in</button>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"main-wrapper\">\n        <footer class=\"footer-section section bg-gray \">\n            <!--Footer bottom start-->\n            <div class=\"footer-bottom section \">\n                <div class=\"container \">\n                    <div class=\"row no-gutters \">\n                        <div class=\"col-12 ft-border pt-15 pb-15 \">\n                            <div class=\"row \">\n                                <div class=\"col-lg-6 col-md-6 col-sm-12 \">\n                                    <div class=\"copyright text-left \">\n                                        <p>© 2021 ExpoBazaar, Expo Digital India and all its affiliates. All rights\n                                            reserved.\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6 col-md-6 col-sm-12 \">\n                                    <div class=\"copyright text-right \">\n                                        <p class=\"copyright \">\n                                          <!-- <a href=\"# \">Intellectual Property Protection</a>  -->\n                                          <a class=\"pl-3\" target=\"_blank\" [routerLink]=\"['/home/privacy']\">Privacy Policy</a>\n                                          <a class=\"pl-3\" target=\"_blank\" [routerLink]=\"['/home/terms-condition']\">Terms of use</a></p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--Footer bottom end-->\n        </footer>\n    </div>\n</div>\n<!-- </body> -->\n\n<!-- image View Modal-->\n<div class=\"modal fade text-start modal-success\" id=\"imageViewModal\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"imageViewModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <ng-container *ngIf=\"imageView\">\n                <div class=\"modal-header\">\n                    <h3 id=\"exampleModalLabel\">PDF Preview\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </h3>\n                </div>\n                <div class=\"modal-body\">\n                    <iframe id=\"frame\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(assetsURL+ imageView)\"\n                        width=\"100%\" class=\"iframe-size\">\n                    </iframe>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</div>\n\n<!-- Spinner -->\n<!-- <div *ngIf=\"isDisable\" class=\"sub-loading\">\n    <div class=\"loader\">\n        <span class=\"text-large font-weight-bolder\">\n            <img src=\"assets/images/loader/123.gif\">\n        </span>\n    </div>\n</div> -->\n<div *ngIf=\"isSpinner\" class=\"sub-loading\">\n   <div class=\"loader\">\n       <span class=\"text-large font-weight-bolder\">\n         <img src=\"assets/images/loader/123.gif\">\n       </span>\n   </div>\n</div>","import { Directive, HostListener, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appAlphabetOnly]'\n})\n\nexport class AlphabetOnlyDirective {\n  key: any | undefined;\n  @HostListener('keydown', ['$event']) onKeydown(event: KeyboardEvent) {\n    this.key = event.keyCode;\n    if ((this.key >= 15 && this.key <= 64 && this.key!=32) || (this.key >= 123) || (this.key >= 96 && this.key <= 105)) {\n      event.preventDefault();\n    }\n  }\n}","import { Directive, Attribute } from '@angular/core';  \nimport { NG_VALIDATORS, Validator, UntypedFormControl } from '@angular/forms';  \nimport { Subscription } from 'rxjs';  \n  \n@Directive({  \n  selector: '[appPasswordvalidator]',  \n  providers: [  \n    {  \n      provide: NG_VALIDATORS,  \n      useClass: PasswordvalidatorDirective,  \n      multi: true  \n    }  \n  ]  \n})  \nexport class PasswordvalidatorDirective implements Validator {  \n  \n  constructor(@Attribute('appPasswordvalidator') public PasswordControl: string) { }  \n  \n  validate(c: UntypedFormControl) {  \n  \n    const Password = c.root.get(this.PasswordControl);  \n    const ConfirmPassword = c;  \n  \n    if (ConfirmPassword.value === null) {  \n      return null;  \n    }  \n  \n    if (Password) {  \n      const subscription: Subscription = Password.valueChanges.subscribe(() => {  \n        ConfirmPassword.updateValueAndValidity();  \n        subscription.unsubscribe();  \n      });  \n    }  \n    return Password && Password.value !== ConfirmPassword.value ? { passwordMatchError: true } : null;  \n  }  \n  \n} ","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output\n  } from '@angular/core';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectService } from '../services/select.service';\n\n// tslint:disable-next-line:no-empty\nconst noop = () => {};\n\n@Component({\n  selector: 'tree-select-item',\n  templateUrl: './tree-select-item.component.html',\n  styleUrls: ['./tree-select-item.component.scss']\n})\nexport class TreeSelectItemComponent {\n  public get isOpen() {\n    return this.item.isOpen;\n  }\n\n  @Input() public onTouchedCallBack: () => void = noop ;\n\n  @Input()\n  public item: any ;\n\n  public constructor(\n    private svc: SelectService\n  ) { }\n\n  public toggleOpen($event: any) {\n    $event.stopPropagation();\n    if (this.haveChildren) {\n      this.item.isOpen = !this.item.isOpen;\n    } else {\n      this.select($event);\n    }\n  }\n\n  get allowParentSelection(): boolean {\n    return this.svc.Configuration.allowParentSelection;\n  }\n\n  get restructureWhenChildSameName(): boolean {\n    return this.svc.Configuration.restructureWhenChildSameName;\n  }\n\n  get needCheckBox(): boolean {\n    return this.svc.Configuration.isHierarchy() && this.svc.Configuration.allowMultiple;\n  }\n\n  public get haveChildren(): boolean {\n    if (this.restructureWhenChildSameName && this.item && this.item.children\n       && this.item.children.length === 1 && this.item.text === this.item.children[0].text) {\n      this.item = this.item.children[0];\n    }\n    return this.item && this.item.children && this.item.children.length > 0;\n  }\n\n  public select($event: any): void {\n    $event.stopPropagation();\n    if (this.svc.Configuration.allowMultiple ||\n        !this.haveChildren ||\n        this.svc.Configuration.allowParentSelection) {\n      this.svc.toggleItemSelection(this.item);\n    }\n    this.onTouchedCallBack();\n  }\n\n  public get filter(): string {\n    return this.svc.Configuration.filter;\n  }\n}\n","<div class='item' (click)=\"select($event)\">\n  <div class=\"item\" [class.active]=\"item.selected && !needCheckBox\">\n    <a href=\"javascript:void(0)\" (click)=\"toggleOpen($event)\">\n            <span>\n                    <i class=\"fa\"\n                    [class.fa-plus-square-o]=\"haveChildren && !isOpen\"\n                    [class.fa-minus-square-o]=\"haveChildren && isOpen\"></i>\n                </span>\n            <i class=\"fa\" *ngIf=\"needCheckBox\" [class.fa-check-square-o]=\"item.checked === true\" [class.fa-square-o]=\"item.checked === false\"\n                [class.fa-square]=\"item.checked === null\" (click)=\"select($event)\"></i>\n            <span *ngIf=\"allowParentSelection\" (click)=\"select($event)\"> {{item.text}}</span>\n            <span *ngIf=\"!allowParentSelection\"> {{item.text}}</span>\n        </a>\n  </div>\n  <ul *ngIf=\"haveChildren && isOpen\" class=\"ui-select-choices\" role=\"menu\">\n    <li *ngFor=\"let o of item.children\" role=\"menuitem\">\n      <tree-select-item [item]=\"o\" [onTouchedCallBack]=\"onTouchedCallBack\"></tree-select-item>\n    </li>\n  </ul>\n</div>\n","import {\n  Component,\n  forwardRef,\n  HostListener,\n  Input,\n  OnInit\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ItemPipe } from '../pipes/item.pipe';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectOption } from '../models/select-option';\nimport { SelectService } from '../services/select.service';\nimport { TreeSelectDefaultOptions } from '../models/tree-select-default-options';\nimport { ExpandMode } from '../models/expand-mode';\n\n// tslint:disable-next-line:no-empty\nconst noop = () => {};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-forward-ref\n  useExisting: forwardRef(() => TreeSelectComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'tree-select',\n  templateUrl: './tree-select.component.html',\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR, SelectService],\n  styleUrls: ['./tree-select.component.scss']\n})\nexport class TreeSelectComponent implements ControlValueAccessor {\n  public onTouchedCallback: () => void = noop;\n  public showMoreLink = false;\n  public moreLoaded = false;\n  @Input() public disabled = false;\n  @Input() public placeholder = '';\n  @Input() public filterPlaceholder = 'Type here for filtering items...';\n  @Input() public allowFilter = true;\n  private _isOpen = false;\n  private onChangeCallback: (_: any) => void = noop;\n  private haveFocus = false;\n  private inputFocus = false;\n\n  @Input()\n  public set items(value: any[]) {\n    this.svc.setItems(value);\n  }\n\n  @Input()\n  public set idField(value: string) {\n    this.svc.setConfiguration((opt) => opt.idProperty = value, true);\n  }\n\n  @Input()\n  public set textField(value: string) {\n    this.svc.setConfiguration((opt) => opt.textProperty = value, true);\n  }\n\n  @Input()\n  public set allowParentSelection(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.allowParentSelection = value, true);\n  }\n\n  public get allowParentSelection(): boolean {\n    return this.svc.Configuration.allowParentSelection;\n  }\n\n  @Input()\n  public set restructureWhenChildSameName(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.restructureWhenChildSameName = value, true);\n  }\n\n  public get restructureWhenChildSameName(): boolean {\n    return this.svc.Configuration.restructureWhenChildSameName;\n  }\n\n  @Input()\n  public set childrenField(value: string) {\n    this.svc.setConfiguration((opt) => opt.childProperty = value, true);\n  }\n\n  @Input()\n  public set multiple(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.allowMultiple = value, true);\n  }\n  public get multiple(): boolean {\n    return this.svc.Configuration.allowMultiple;\n  }\n\n  @Input()\n  public set filterCaseSensitive(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.filterCaseSensitive = value, true);\n  }\n  public get filterCaseSensitive(): boolean {\n    return this.svc.Configuration.filterCaseSensitive;\n  }\n\n  @Input()\n  public set expandMode(value: string) {\n    this.svc.setConfiguration((opt) => opt.expandMode = value, true);\n    this.svc.setExpand();\n  }\n  public get expandMode(): string {\n    return this.svc.Configuration.expandMode;\n  }\n\n  @Input()\n  public set maxVisibleItemCount(value: number) {\n    this.svc.setConfiguration((opt) => opt.maxVisibleItemCount = value, true);\n  }\n  public get maxVisibleItemCount(): number {\n    return this.svc.Configuration.maxVisibleItemCount;\n  }\n\n  public get internalItems(): SelectableItem[] {\n    return this.svc.getInternalItems() || [];\n  }\n\n  public get selection(): SelectableItem[] {\n    this.showMoreLink = (\n      this.maxVisibleItemCount > 0 &&\n      ((this.svc.getInternalSelection().length - this.maxVisibleItemCount) > 0)\n    );\n    return this.svc.getInternalSelection();\n  }\n\n  public get filter(): string {\n    return this.svc.Configuration.filter;\n  }\n\n  public set filter(value: string) {\n    this.svc.setConfiguration((opt) => opt.filter = value, false);\n    for (const item of this.internalItems) {\n      this.ProcessMatchFilterTreeItem(item, this.svc.Configuration.filter);\n    }\n    this.svc.setExpand();\n  }\n\n  public constructor(\n    private svc: SelectService,\n    private defaultOpts: TreeSelectDefaultOptions\n  ) {\n    this.clickedOutside = this.clickedOutside.bind(this);\n\n    this.svc.modelChanged$.subscribe((result) => {\n      this.onChangeCallback(result);\n    });\n    this.maxVisibleItemCount = (defaultOpts.maxVisibleItemCount || 0);\n    this.allowParentSelection = (\n      (defaultOpts.allowParentSelection === undefined ||\n       defaultOpts.allowParentSelection === null) ?\n        true :\n        defaultOpts.allowParentSelection\n    );\n    this.allowFilter = (\n      (defaultOpts.allowFilter === undefined || defaultOpts.allowFilter === null) ?\n        true :\n        defaultOpts.allowFilter\n    );\n    this.filterCaseSensitive = (\n      (defaultOpts.filterCaseSensitive === undefined || defaultOpts.filterCaseSensitive === null) ?\n        false :\n        defaultOpts.filterCaseSensitive\n    );\n    this.filterPlaceholder = (defaultOpts.filterPlaceholder || 'Type here for filtering items...');\n    this.idField = (defaultOpts.idField || 'id');\n    this.textField = (defaultOpts.textField || 'id');\n    this.childrenField = (defaultOpts.childrenField || '');\n    this.expandMode = (defaultOpts.expandMode || ExpandMode.None);\n  }\n\n  // tslint:disable-next-line:no-empty\n  public keyUp($event: any) {}\n\n  public toggle($event: any) {\n    $event.preventDefault();\n    this.haveFocus = true;\n    this.svc.toggleOpen();\n  }\n\n  public removeItem($event: any, item: SelectableItem): void {\n    $event.stopPropagation();\n    this.svc.toggleItemSelection(item);\n  }\n\n  public get isOpen(): boolean {\n    return this.svc.Configuration.isOpen;\n  }\n\n  public clickedOutside() {\n    if (!this.inputFocus) {\n      if (!this.haveFocus && this.isOpen || this.haveFocus && !this.isOpen) {\n        this.onTouched();\n      }\n      this.haveFocus = false;\n    }\n  }\n\n  // Set touched on blur\n  public onTouched() {\n    this.svc.close();\n    this.onTouchedCallback();\n  }\n\n  public setInputFocus() {\n    this.inputFocus = true;\n  }\n  public setInputFocusOut() {\n    this.inputFocus = false;\n  }\n\n  /**\n   * Write a new value to the element.\n   *\n   * @param {*} value\n   * @memberof TreeSelectComponent\n   */\n  public writeValue(value: any): void {\n    this.svc.setSelection(value);\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   *\n   * @param {*} fn\n   * @memberof TreeSelectComponent\n   */\n  public registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   *\n   * @param {*} fn\n   * @memberof TreeSelectComponent\n   */\n  public registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param {boolean} isDisabled\n   * @memberof TreeSelectComponent\n   */\n  public setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * This finction is called when user click on show more link.\n   *\n   * @param {*} $event\n   * @memberof TreeSelectComponent\n   */\n  public loadMore($event: any) {\n    $event.stopPropagation();\n    this.moreLoaded = !this.moreLoaded;\n  }\n\n  private ProcessMatchFilterTreeItem(tree: SelectableItem, filter: string): boolean {\n    let result = false;\n    if (tree && tree.children && tree.children.length > 0) {\n      for (const child of tree.children) {\n        result = this.ProcessMatchFilterTreeItem(child, filter) || result;\n      }\n    }\n    tree.matchFilter = this.filterCaseSensitive ?\n                      (\n                        tree.id.indexOf(filter) > -1 ||\n                        tree.text.indexOf(filter) > -1 ||\n                        result) :\n                      (\n                        tree.id.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n                        tree.text.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n                        result\n                      );\n    return tree.matchFilter;\n  }\n}\n","<div tabindex=\"0\" class=\"dropdown open show\" [off-click]=\"clickedOutside\">\n\n  <!-- Control display -->\n  <div [class.disabled]=\"disabled\">\n    <span tabindex=\"-1\" class=\"btn btn-default btn-secondary form-control\" [class.selected-container-text]=\"!multiple\" [class.selected-container-item]=\"multiple\"\n      (click)=\"toggle($event)\">\n      <span *ngIf=\"selection.length <= 0\" class=\"ui-select-placeholder text-muted\">{{placeholder}}</span>\n      <span *ngFor=\"let itm of selection; let idx=index\">\n        <span *ngIf=\"moreLoaded || maxVisibleItemCount == 0 || idx<maxVisibleItemCount\" class=\"pull-left\" [class.selected-item-text]=\"!multiple\"\n          [class.selected-item-item]=\"multiple\" [class.btn]=\"multiple\" [class.btn-default]=\"multiple\" [class.btn-xs]=\"multiple\">\n          {{itm.text}}\n          <a *ngIf=\"multiple && !disabled\" class=\"close\" (click)=\"removeItem($event, itm)\">x</a>\n        </span>\n      </span>\n\n    </span>\n\n  </div>\n  <div class=\"enabled\">\n    <span class=\"pull-right more-items-icon\" (click)=\"loadMore($event)\" *ngIf=\"showMoreLink\">(...)</span>\n    <i class=\"caret pull-right\" (click)=\"toggle($event)\"></i>\n  </div>\n\n  <!-- options template -->\n  <ul *ngIf=\"!disabled && isOpen && internalItems && internalItems.length > 0\" class=\"dropdown-menu\" role=\"menu\">\n    <input name=\"filterText\" *ngIf=\"allowFilter\" type=\"text\" [(ngModel)]=\"filter\" (click)=\"setInputFocus()\" (blur)=\"setInputFocusOut()\"\n      class=\"form-control\" placeholder=\"{{filterPlaceholder}}\" [ngModelOptions]=\"{standalone: true}\" autocomplete=\"off\" />\n    <li *ngFor=\"let o of internalItems\" role=\"menuitem\">\n      <tree-select-item [item]=\"o\" [onTouchedCallBack]=\"onTouchedCallback\"></tree-select-item>\n    </li>\n  </ul>\n</div>\n","import {\n  Directive,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID\n  } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: '[off-click]'\n})\nexport class OffClickDirective implements OnInit, OnDestroy {\n  /* tslint:disable */\n  @Input('off-click')\n  public offClickHandler: any;\n  /* tslint:enable */\n\n  constructor( @Inject(PLATFORM_ID) private platformId: string) { }\n\n  public ngOnInit(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      setTimeout(() => { document.addEventListener('click', this.offClickHandler); }, 0);\n    }\n  }\n\n  public ngOnDestroy(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      document.removeEventListener('click', this.offClickHandler);\n    }\n  }\n}\n","import { ExpandMode } from './models/expand-mode';\nexport { TreeSelectDefaultOptions } from './models/tree-select-default-options';\nexport { TreeSelectComponent } from './components/tree-select.component';\nexport { ItemPipe } from './pipes/item.pipe';\nexport { NgxTreeSelectModule } from './module';\nexport { ExpandMode } from './models/expand-mode';\n","export class ExpandMode {\n  public static None = 'None';\n  public static Selection = 'Selection';\n  public static All = 'All';\n}\n","import { ExpandMode } from './expand-mode';\n\nexport class SelectOption {\n  public idProperty = 'id';\n  public textProperty = 'text';\n  public childProperty: string = '';\n  public allowMultiple = false;\n  public closeOnSelection = true;\n  public items: any[] = [];\n  public model: any[] | any;\n  public isOpen = false;\n  public filter = '';\n  public filterCaseSensitive = false;\n  public allowParentSelection = false;\n  public restructureWhenChildSameName = false;\n  public maxVisibleItemCount: number = 0;\n  public expandMode = ExpandMode.None;\n\n  public isHierarchy(): boolean {\n    return this.childProperty != '' && this.childProperty.trim().length > 0;\n  }\n\n  public get filterExpandMode(): ExpandMode {\n     if (this.filter !== '') {\n        return ExpandMode.All;\n     } else {\n       return this.expandMode;\n     }\n  }\n\n  public displayCheckbox(): boolean {\n    return this.allowMultiple && this.isHierarchy();\n  }\n\n  public isValid(): boolean {\n    // Check id property value\n    return this.idProperty != '' && this.idProperty.trim().length > 0 &&\n      // Check text property value\n      this.textProperty != '' && this.textProperty.trim().length > 0 &&\n      // Check items value\n      this.items && Array.isArray(this.items) && this.items.length > 0;\n  }\n}\n","import { SelectService } from '../services/select.service';\n\nexport class SelectableItem {\n  public _selected = false;\n  public children: SelectableItem[] = [];\n  public isOpen = false;\n  public matchFilter = true;\n  public isVisible = false;\n\n  constructor(public id: string, public text: string, public data: any, public svc: SelectService) {\n  }\n\n  get hasChild(): boolean {\n    return this.children != undefined && this.children.length > 0;\n  }\n  get checked(): boolean {\n    if (this.hasChild && this.svc.Configuration.allowMultiple) {\n      if (this.children?.every((child) => child.selected)) {\n        return true;\n      } else if (this.children?.every((child) => child.selected === false)) {\n        return this._selected;\n      }\n      return false;\n    }\n    return this._selected;\n  }\n  get selected(): boolean {\n    if (this.hasChild && this.svc.Configuration.allowMultiple) {\n      if (this.children?.some((child) => child.selected)) {\n        if (this.svc.Configuration.allowParentSelection) {\n          this._selected = false;\n        }\n        return true;\n      } else if (this.children?.every((child) => child.selected === false)) {\n        if (this.svc.Configuration.allowParentSelection) {\n          return this._selected;\n        } else {\n          return this._selected = false;\n        }\n      }\n      return false;\n    } else if (this.hasChild && this._selected === true) {\n      this.children?.forEach((itm) => itm.selected = false);\n      /*for (const itm of this.children) {\n        itm.selected = false;\n      }*/\n    }\n\n    return this._selected;\n  }\n  set selected(value: boolean) {\n    if (this.hasChild && !this.svc.Configuration.allowParentSelection) {\n      if (value !== null) {\n        this.children?.forEach((child) => child.selected = value);\n      }\n    } else {\n      this._selected = value;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ExpandMode } from './expand-mode';\n\n@Injectable()\nexport class TreeSelectDefaultOptions {\n  public allowFilter?: boolean;\n  public filterPlaceholder?: string;\n  public maxVisibleItemCount?: number;\n  public allowParentSelection?: boolean;\n  public idField?: string;\n  public textField?: string;\n  public childrenField?: string;\n  public filterCaseSensitive?: boolean;\n  public expandMode = ExpandMode.None;\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ItemPipe } from './pipes/item.pipe';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OffClickDirective } from './directives/off-click.directive';\nimport { TreeSelectComponent } from './components/tree-select.component';\nimport { TreeSelectDefaultOptions } from './models/tree-select-default-options';\nimport { TreeSelectItemComponent } from './components/tree-select-item.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    TreeSelectComponent,\n    TreeSelectItemComponent,\n    OffClickDirective,\n    ItemPipe\n  ],\n  exports: [\n    TreeSelectComponent\n  ]\n})\n\nexport class NgxTreeSelectModule {\n  public static forRoot(options: TreeSelectDefaultOptions): ModuleWithProviders<NgxTreeSelectModule> {\n    return {\n      ngModule: NgxTreeSelectModule,\n      providers: [\n        { provide: TreeSelectDefaultOptions, useValue: options }\n      ]\n    };\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SelectableItem } from '../models/selectable-item';\n\n@Pipe({ name: 'itemPipe' })\nexport class ItemPipe implements PipeTransform {\n  public transform(value: SelectableItem[]) {\n    // ES6 array destructuring\n    return value.filter((item) => item.matchFilter);\n  }\n}\n","import { Subject } from 'rxjs';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectOption } from '../models/select-option';\nimport { Injectable } from '@angular/core';\nimport { ExpandMode } from '../models/expand-mode';\n\nexport type OptionDelegate = (options: SelectOption) => void;\n\n@Injectable()\nexport class SelectService {\n  public modelChanged$: Subject<any> = new Subject<any>();\n\n  private _items: SelectableItem[] = [];\n  private _options: SelectOption = new SelectOption();\n\n  public close(): void {\n    if (this.Configuration.isOpen) {\n      this.setConfiguration((opt) => opt.isOpen = false, false);\n    }\n  }\n\n  public open(): void {\n    if (!this.Configuration.isOpen) {\n      this.setConfiguration((opt) => opt.isOpen = true, false);\n    }\n  }\n\n  public toggleOpen(): void {\n    this.setConfiguration((opt) => opt.isOpen = !opt.isOpen, false);\n  }\n\n  /*\n    Call when list of items is set.\n  */\n  public setItems(value: any[]) {\n    this.setConfiguration((opt) => opt.items = value, true);\n    this.setExpand();\n  }\n\n  public getInternalItems(): SelectableItem[] {\n    return this._items;\n  }\n\n  /*\n    Call when ng-model is set\n  */\n  public setSelection(values: any | any[]): void {\n    this.setConfiguration((opt) => opt.model = values, true);\n    this.setExpand();\n  }\n\n  public setSelectedItemOrChild(items: SelectableItem[], destination: string) {\n    for (const itm of items) {\n      if (itm.hasChild) {\n        if (itm.id === destination) {\n          itm.selected = true;\n        }\n        this.setSelectedItemOrChild(itm.children, destination);\n      } else if (itm.id === destination) {\n        itm.selected = true;\n      }\n    }\n  }\n\n  public getSelection(): any | any[] {\n    if (this.Configuration.allowMultiple) {\n      return this.getInternalSelection().map((v) => v.data);\n    } else {\n      const result = this.getInternalSelection();\n      if (result && result.length > 0) {\n        return result[0].data;\n      }\n    }\n\n    return null;\n  }\n\n  public getInternalSelection(): SelectableItem[] {\n    const selectedItems = this.getSelectedItems(this._items);\n    if (selectedItems && selectedItems.length > 0) {\n      let i = 0;\n      const max = this._options.maxVisibleItemCount ? this._options.maxVisibleItemCount : 0;\n\n      for (const item of selectedItems) {\n        item.isVisible =\n          // Max not reached or not max value\n          (i < max || max === 0) &&\n          // all my children are unselected\n          (!item.hasChild || item.children.every((child) => child.selected === false));\n        if (item.isVisible && max > 0) {\n          i++;\n        }\n      }\n    }\n    return selectedItems;\n  }\n\n  public toggleItemSelection(item: SelectableItem): void {\n    if (!this.Configuration.allowMultiple) {\n      this.setAllUnselected(this._items);\n    }\n    item.selected = !item.selected;\n    this.setConfiguration((opt) => opt.model = this.getSelection(), false);\n    if (this.Configuration.closeOnSelection) {\n      this.setConfiguration((opt) => opt.isOpen = false, false);\n    }\n  }\n\n  public setAllUnselected(items: SelectableItem[]) {\n    for (const itm of items) {\n      if (itm.hasChild) {\n        itm.selected = false;\n        this.setAllUnselected(itm.children);\n      } else {\n        itm.selected = false;\n      }\n    }\n  }\n\n  public setConfiguration(delegate: OptionDelegate, processItems: boolean): void {\n    const modelBck = this._options.model;\n    delegate(this._options);\n    if (this._options.isValid()) {\n      this.reconfigure(processItems);\n    }\n    // if model changed, raise event\n    if (\n      !processItems &&\n      (\n        (modelBck && this._options.model !== modelBck) ||\n        (!modelBck && this._options.model)\n      )\n    ) {\n      this.modelChanged$.next(this._options.model);\n    }\n  }\n\n  public get Configuration(): SelectOption {\n    return this._options;\n  }\n\n  public setExpand() {\n    this.setExpandForList(this._items);\n  }\n\n  private setExpandForList(items: SelectableItem[]) {\n    if (!items) {\n      return;\n    }\n    for (const item of items) {\n      this.setExpandForList(item.children);\n      item.isOpen = (this._options.filterExpandMode === ExpandMode.All);\n      if (this._options.filterExpandMode === ExpandMode.Selection) {\n        if (item.children) {\n          item.isOpen = item.children.some(\n            (itm: SelectableItem) => itm.isOpen || itm.selected\n          );\n        }\n      }\n    }\n  }\n\n  private toSelectableItems(sources: any[]): SelectableItem[] {\n    if (sources && Array.isArray(sources)) {\n      let i = 1;\n      return sources.map((srcItem) => {\n        let item: SelectableItem;\n        if (srcItem[this._options.idProperty] &&\n            srcItem[this._options.idProperty] !== '' &&\n            srcItem[this._options.textProperty]) {\n          item = new SelectableItem(\n            (srcItem[this._options.idProperty] || '').toString(),\n            srcItem[this._options.textProperty] as string,\n            srcItem,\n            this\n          );\n        } else {\n          item = new SelectableItem(\n            i.toString(),\n            srcItem as string,\n            srcItem,\n            this\n          );\n          i++;\n        }\n        if (this._options.isHierarchy()) {\n          item.children = this.toSelectableItems(srcItem[this._options.childProperty]);\n        }\n        return item;\n      });\n    }\n\n    return [];\n  }\n\n  private getSelectedItems(array: SelectableItem[]): SelectableItem[] {\n    if (this.Configuration.isValid()) {\n      let res: SelectableItem[] = [];\n      for (const v of array) {\n        if (v.hasChild && v.selected === true) {\n          if (v.children.every((child) => child.selected === false)) {\n            res = [...res, v];\n          } else {\n            res = [...res, ...this.getSelectedItems(v.children)];\n          }\n        } else if (v.hasChild) {\n          res = [...res, ...this.getSelectedItems(v.children)];\n        } else if (v.selected === true) {\n          res = [...res, v];\n        }\n      }\n      return res;\n    } else {\n      return [];\n    }\n  }\n\n  private reconfigure(processItems: boolean): void {\n    if (this.Configuration.isValid()) {\n      this.checkConfig();\n      if (processItems) {\n        this._items = this.toSelectableItems(this.Configuration.items);\n      }\n\n      const model = this.getModel();\n      let select: SelectableItem[] = [];\n      model.forEach((v) => {\n        select = [...select, ...this.getItemForModel(v, this._items)];\n      });\n      select.forEach((v) => v._selected = true);\n    }\n  }\n\n  private checkConfig() {\n    if (this.Configuration.allowMultiple && this.Configuration.closeOnSelection) {\n      this.Configuration.closeOnSelection = false;\n    } else if (!this.Configuration.allowMultiple && !this.Configuration.closeOnSelection) {\n      this.Configuration.closeOnSelection = true;\n    }\n  }\n  private getModel(): any[] {\n    if (!this.Configuration.model) {\n      return [];\n    } else if (!Array.isArray(this.Configuration.model)) {\n      return [this.Configuration.model];\n    } else {\n      return this.Configuration.model;\n    }\n  }\n\n  private getItemForModel(value: any, array: SelectableItem[]): SelectableItem[] {\n    let result: SelectableItem[] = [];\n    for (const v of array) {\n      if (value) {\n        if (typeof value !== 'object') {\n          if (v.data === value) {\n            result.push(v);\n          }\n        } else {\n          if (value[this.Configuration.idProperty]) {\n            if (v.id === (value[this.Configuration.idProperty] || '').toString()) {\n              result.push(v);\n            }\n          }\n          if (this.Configuration.isHierarchy() && v.children && v.children.length > 0) {\n            result = [...result, ...this.getItemForModel(value, v.children)];\n          }\n        }\n      }\n    }\n    return result;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[numbersOnly]'\n})\nexport class OnlynumberDirective {\n\n  constructor(private _el: ElementRef) { }\n\n  @HostListener('input', ['$event']) onInputChange(event: any) {\n    const initalValue = this._el.nativeElement.value;\n\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if ( initalValue !== this._el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rights-footer',\n  templateUrl: './rights-footer.component.html',\n  styleUrls: ['./rights-footer.component.scss']\n})\nexport class RightsFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"main-wrapper\">\n    <!--Footer section start-->\n  <footer class=\"footer-section section bg-gray \"> \n    <!--Footer bottom start-->\n    <div class=\"footer-bottom section \">\n      <div class=\"container \">\n        <div class=\"row no-gutters \">\n          <div class=\"col-12 ft-border pt-15 pb-15 \">\n            <div class=\"row \">\n              <div class=\"col-lg-6 col-md-6 col-sm-12 \">\n                <div class=\"copyright2 text-left\">\n                  <p>© 2022 ExpoBazaar USA Inc. Expo Digital India and its Affiliates. All rights reserved. </p>\n\n\n                </div>\n              </div>\n              <div class=\"col-lg-6 col-md-6 col-sm-12 \">\n                <div class=\"copyright2 text-right text-dark\"> <p class=\"text-dark\">\n                  <!-- <a href=\"#\" class=\"text-dark\">Intellectual Property Protection</a> -->\n                  <a target=\"_blank\" [routerLink]=\"['/home/privacy']\" class=\"text-dark pl-3\">Privacy Policy</a>  <a target=\"_blank\" [routerLink]=\"['/home/terms-condition']\" class=\"text-dark pl-3\">Terms of use</a></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--Footer bottom end--> \n  </footer>\n  <!--Footer section end-->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonService } from 'src/app/service/common.service';\nimport { DsaService } from 'src/app/service/dsa.service';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { SettingService } from 'src/app/service/setting.service';\ndeclare const $: any;\n@Component({\n    selector: 'app-account-header',\n    templateUrl: './account-header.component.html',\n    styleUrls: ['./account-header.component.scss']\n})\nexport class AccountHeaderComponent implements OnInit {\n    searchText: any = '';\n\n    constructor(public gs: GlobalService,\n        public router: Router,\n        private _route: ActivatedRoute,\n        public common: CommonService,\n        public dsaService: DsaService,\n        private settings: SettingService) {\n        this._route.queryParamMap.subscribe((params) => {\n            this.gs.globalBuyer = params['params']['bcid'] || '';\n\n            if (this.gs.loginData.userType == 'DSARUSER') {\n                this.gs.userTypeDSa = this.gs.loginData.userType;\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.gs.loadScript();\n\n      /* Offcanvas Menu Start */\n      var offCanvasNav = $('.offcanvas-navigation'),\n         offCanvasNavSubMenu = offCanvasNav.find('.submenu2');\n      \n      offCanvasNavSubMenu.slideUp();\n\n      /*Category Sub Menu Toggle*/\n      offCanvasNav.on('click', 'li a, li .menu-expand', function (e: any) {\n\n         var $this = $(e.target);\n         if (($this.parent().attr('class').match(/\\b(menu-item-has-children|has-children|has-sub-menu)\\b/)) && ($this.attr('href') === '#' || $this.hasClass('menu-expand'))) {\n            e.preventDefault();\n            if ($this.siblings('ul:visible').length) {\n               $this.parent('li').removeClass('active');\n               $this.siblings('ul').slideUp();\n            } else {\n               $this.parent('li').addClass('active');\n               $this.closest('li').siblings('li').removeClass('active').find('li').removeClass('active');\n               $this.closest('li').siblings('li').find('ul:visible').slideUp();\n               $this.siblings('ul').slideDown();\n            }\n         }\n      });\n      /* Offcanvas Menu End */\n\n        if (this.gs.loginData && this.gs.loginData['_id']) {\n            this.settings.getMenuPermission({ id: this.gs.loginData._id }).subscribe((res: any) => {\n                this.gs.menuPermission = res['data'];\n            });\n            if (this.gs.globalBuyer && this.gs.globalBuyer != null) {\n                this.common.getCartCount(this.gs.globalBuyer);\n                this.common.get_notify_count(this.gs.globalBuyer);\n            } else {\n                this.common.getCartCount(this.gs.loginData['_id']);\n                this.common.get_notify_count(this.gs.loginData['_id']);\n            }\n            if (this.gs.loginData['userType'] == 'DSARUSER') {\n                this.getGlobalBuyers();\n            }\n        }\n\n    }\n\n    getGlobalBuyers() {\n        this.dsaService.getManageBuyer({ id: this.gs.loginData['_id'] }).subscribe((resp: any) => {\n            this.gs.globalBuyerList = resp.data;\n        }, (error: any) => {\n            console.log(error);\n        });\n    }\n\n    logOut() {\n        localStorage.clear();\n        this.gs.loginData = '';\n        this.gs.menuPermission = [];\n        this.router.navigateByUrl('/');\n        $('#offcanvas-mobile-menu').removeClass('active').addClass('inactive')\n    }\n\n    closeOffcanvas() {\n        $('#offcanvas-mobile-menu').removeClass('active').addClass('inactive')\n    }\n\n}\n\n\n","<!-- Header section start-->\n<header class=\"header header-transparent header-sticky  d-lg-block d-none\">\n    <div class=\"header-deafult-area\">\n        <div class=\"container\">\n            <div class=\"row align-items-center padd-top-15 padd-bottom-25\">\n                <div class=\"col-md-8 col-12\">\n                    <!--Logo Area Start-->\n                    <div class=\"logo-area\">\n                        <a [routerLink]=\"['/home']\" [queryParamsHandling]=\"gs.userTypeDSa ? 'preserve': null\">\n                            <img src=\"./assets/images/Logo.svg\" alt=\"\">\n                        </a>\n                    </div>\n                    <!--Logo Area End-->\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                    <div class=\"header-search-cart-area\">\n                        <ul>\n                            <li class=\"currency-menu\">\n                                <a href=\"#\">\n                                    <img src=\"./assets/images/usflag.png\">\n                                    <span class=\"ml-1 font\">United States</span>\n                                </a>\n                            </li>\n                            <li class=\"currency-menu\">\n                                <a [routerLink]=\"['/my-accounts/my-notification']\"\n                                    [queryParamsHandling]=\"gs.userTypeDSa ? 'preserve' : null\">\n                                    <i class=\"fa fa-bell-o m-top-10\"></i>\n                                    <span class=\"badge badge-pill badge-success\">\n                                        {{gs.notificationCount || '0'}}\n                                    </span>\n                                </a>\n                            </li>\n                            <li class=\"mini-cart\">\n                                <a routerLink=\"/home/cart\" [queryParamsHandling]=\"gs.userTypeDSa ? 'preserve' : null\">\n                                    <i class=\"flaticon-shopping-cart\"></i>\n                                    <span class=\"badge badge-pill badge-success badge-noti\">\n                                        {{gs.cartCount || '0'}}\n                                    </span>\n                                </a>\n                            </li>\n                            <li class=\"currency-menu\">\n                                <a href=\"#\" *ngIf=\"gs.loginData\">\n                                    <i class=\"flaticon-user\"></i>&nbsp;&nbsp;\n                                    <strong class=\"text-capitalize\">{{gs.loginData.firstname}}\n                                    </strong>\n                                </a>\n                                <!--Crunccy dropdown-->\n                                <nav class=\"nav currency-dropdown\" role=\"navigation\">\n                                    <ul class=\"nav__list\">\n                                        <ng-container *ngIf=\"gs.loginData && gs.loginData.userType == 'DSARUSER'\">\n                                            <select class=\"form-control\" [(ngModel)]=\"gs.globalBuyer\"\n                                                (change)=\"common.changeBuyer(gs.globalBuyer)\">\n                                                <option value=\"\" disabled>Select Buyer</option>\n                                                <option value=\"\">Me</option>\n                                                <ng-container *ngFor=\"let item of gs.globalBuyerList\">\n                                                    <ng-container *ngIf=\"item.buyer_status == 'BUY_ACNTACTIVE'\">\n                                                        <option [value]=\"item._id\">\n                                                            {{item.firstname}} {{item.lastname}}\n                                                        </option>\n                                                    </ng-container>\n                                                </ng-container>\n                                            </select>\n                                        </ng-container>\n                                        <li *ngFor=\"let menu of gs.menuPermission\">\n                                            <input id=\"{{menu._id}}\" type=\"checkbox\" hidden />\n                                            <label class=\"font-weight-bold padd-left-9\" for=\"{{menu._id}}\">\n                                                <span class=\"fa fa-angle-right font-angle\">\n                                                </span>\n                                                {{menu.name}}\n                                            </label>\n                                            <ul class=\"group-list\" *ngIf=\"menu.children && menu.children.length\">\n                                                <li *ngFor=\"let xmenu of menu.children\">\n                                                    <a routerLink=\"/{{xmenu.route}}\"\n                                                        [queryParamsHandling]=\"gs.userTypeDSa ? 'preserve' : null\">\n                                                        {{xmenu.name}}\n                                                    </a>\n                                                </li>\n                                            </ul>\n                                        </li>\n\n                                        <li>\n                                            <input id=\"group-2\" type=\"checkbox\" hidden />\n                                            <label for=\"group-2\">\n                                                <a href=\"mailto:support@expobazaar.com\">\n                                                    Support\n                                                </a>\n                                            </label>\n                                        </li>\n                                        <li>\n                                            <input id=\"group-3\" type=\"checkbox\" hidden />\n                                            <label for=\"group-3\">\n                                                <a (click)=\"logOut()\">Sign Out</a>\n                                            </label>\n                                        </li>\n                                    </ul>\n                                </nav>\n                                <!--Crunccy dropdown-->\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</header>\n<!--Header section end-->\n\n<!--Header Mobile section start-->\n<header class=\"header-mobile d-block d-lg-none\">\n    <div class=\"header-bottom menu-right\">\n        <div class=\"container-fluid \">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"header-mobile-navigation d-block d-lg-none\">\n                        <div class=\"row align-items-center\">\n                            <div class=\"col-6 col-md-6\" style=\"padding-left: 0px;\">\n                                <div class=\"header-logo\">\n                                    <a routerLink=\"/home\" style=\"  display: block;\">\n                                        <img src=\"assets/images/Logo.svg\" class=\"img-fluid\" alt=\"\" style=\"height: 40px;\">\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"col-6 col-md-6 p-0\">\n                                <div class=\"mobile-navigation text-right\">\n                                    <div class=\"header-icon-wrapper\">\n                                        <ul class=\"icon-list justify-content-end\">\n                                            <li style=\"margin: 0;\" *ngIf=\"gs.loginData\">\n                                                <a style=\"font-size: 17px;\" routerLink=\"/my-accounts/my-accounts-details\">\n                                                    {{gs.loginData.firstname}}\n                                                </a>\n                                            </li>\n                                            <li style=\"margin-left:3px;\">\n                                                <div class=\"header-cart-icon header-cart-icon-mobile\">\n                                                    <a routerLink=\"/home/cart\" \n                                                        [queryParamsHandling]=\"gs.userTypeDSa ? 'preserve' : null\">\n                                                      <i class=\"flaticon-shopping-cart\"></i>\n                                                      <span class=\"badge badge-pill badge-success badge-noti badge-mobile\">\n                                                         {{gs.cartCount || '0'}}\n                                                      </span>  \n                                                    </a>\n                                                </div>\n                                            </li>\n                                            <li class=\"menu-item-has-children\" style=\"margin-left:19px;\">\n                                                <a href=\"javascript:void(0)\" class=\"mobile-menu-icon\"\n                                                    id=\"mobile-menu-trigger\"><i class=\"fa fa-bars\"></i>\n                                                </a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--Mobile Menu start-->\n            <div class=\"row\">\n                <div class=\"col-12 d-flex d-lg-none\">\n                    <div class=\"mobile-menu\"></div>\n                </div>\n            </div>\n            <!--Mobile Menu end-->\n        </div>\n    </div>\n</header>\n  <!--Header Mobile section end-->\n<!-- Offcanvas Menu Start -->\n<div class=\"offcanvas-mobile-menu d-block d-lg-none\" id=\"offcanvas-mobile-menu\">\n   <a href=\"javascript:void(0)\" class=\"offcanvas-menu-close\" id=\"offcanvas-menu-close-trigger\">\n       <i class=\"fa fa-times\"></i>\n   </a>\n    <div class=\"offcanvas-wrapper\">\n       <div class=\"offcanvas-inner-content pt-2\">\n           <!-- <div class=\"offcanvas-mobile-search-area\">\n               <form action=\"#\">\n                   <input type=\"search\" placeholder=\"Search ...\" name=\"search\"\n                   id=\"searchHere\" [(ngModel)]=\"searchText\" autocomplete=\"off\">\n                   <button type=\"submit\">\n                       <i class=\"fa fa-search\"></i>\n                   </button>\n               </form>\n           </div> -->\n           <div class=\"offcanvas-settings\">\n               <nav class=\"offcanvas-navigation\">\n                   <ul>\n                      <ng-container *ngIf=\"gs.loginData\">\n                         <li class=\"menu-item-has-children\" *ngFor=\"let menu of gs.menuPermission\">\n                            <a href=\"#\">{{menu.name}}</a>\n                            <span class=\"menu-expand\"><i></i></span>\n                            <ul class=\"submenu2\" *ngIf=\"menu.children && menu.children.length\">\n                              <li class=\"menu-item-has-children\" *ngFor=\"let xmenu of menu.children\">\n                                  <a routerLink=\"/{{xmenu.route}}\" [queryParamsHandling]=\"gs.userTypeDSa ? 'preserve' : null\" (click)=\"closeOffcanvas()\">\n                                     {{xmenu.name}}\n                                  </a>\n                               </li>\n                            </ul>\n                         </li>\n                         <li class=\"menu-item-has-children\">\n                            <a href=\"mailto:support@expobazaar.com\">Support</a>\n                         </li>\n                         <li class=\"menu-item-has-children\">\n                            <a (click)=\"logOut()\" >Sign Out</a>\n                         </li>\n                     </ng-container>\n                   </ul>\n               </nav>\n           </div>\n       </div>\n    </div>\n</div>\n    <!-- Offcanvas Menu End -->","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from 'src/app/service/global.service';\n\n@Component({\n  selector: 'app-maintenance',\n  templateUrl: './maintenance.component.html',\n  styleUrls: ['./maintenance.component.scss']\n})\nexport class MaintenanceComponent implements OnInit {\n\n   constructor(public gs: GlobalService) {\n      this.gs.updatePageName('Under Maintenance');\n      }\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"main-wrapper\">\n  <!-- main-search start -->\n  <div\n    class=\"404-error-section section pt-30 pt-lg-70 pt-md-60 pt-sm-50 pt-xs-45 pb-30 pb-lg-80 pb-md-70 pb-sm-60 pb-xs-50\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12 col-12\">\n          <div class=\"logo-area text-center\"><a><img src=\"./assets/images/Logo.svg\" alt=\"\"></a> </div>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"error-wrapper text-center\">\n            <div class=\"error-text\">\n              <img src=\"./assets/images/maintenance.svg\" alt=\"\" class=\"w-75\">\n              <h2>We will be back soon</h2>\n              <p>We are performing some maintenance to make this site even more awesome! In case you need to reach out\n                to us, please send an email at <a href=\"mailto:support@expobazaar.com\"\n                  class=\"text-forgot\">support@expobazaar.com</a></p>\n                  <small><b>Note :- </b> {{gs.is_buyer_description}}</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from 'src/app/service/common.service';\nimport { GlobalService } from 'src/app/service/global.service';\n\n@Component({\n    selector: 'app-privacy-policy',\n    templateUrl: './privacy-policy.component.html',\n    styleUrls: ['./privacy-policy.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n\n    constructor(public gs: GlobalService, private common: CommonService\n    ) {\n        this.gs.updatePageName('Privacy Policy | ExpoBazaar');\n        this.common.updateSeoTags('Privacy Policy');\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div id=\"main-wrapper\"> \n\n  <!-- main-search start -->\n\t  <div class=\"policy-banner-section section\">\n   <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12 col-sm-12 col-xs-12\">\n          <h1 class=\"text-white heading-title\">Privacy Policy</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"faq-section section pt-90 pt-lg-70 pt-md-60 pt-sm-50 pt-xs-40  pb-90 pb-lg-70 pb-md-60 pb-sm-50 pb-xs-40\">\n      <div class=\"container\">\n          <div class=\"row\">\n              <div class=\"col-md-12\">\n                  <p>\n                      <strong>\n                          Last Updated: March 1, 2022\n                      </strong>\n                  </p>\n                  <p>\n                      ExpoBazaar USA understands you care about how your personal  information is used and shared, and we take your privacy seriously. Please read  the following to learn more about our privacy practices. By using or accessing  the Services in any manner, you acknowledge that you accept the practices and  policies outlined in this Privacy Policy, and that we will collect, use, and  share your information in the following ways.\n                  </p>\n                  <p>\n                      Your use of ExpoBazaar’s Services is subject to the certain  Terms of Use and this Privacy Policy. Any terms we use in this Policy without  defining them have the definitions given to them in the Terms of Use.\n                  </p>\n                  <p>\n                      <strong>\n                          What does this Privacy Policy cover?\n                      </strong>\n                      <br/>\n                      This Privacy Policy applies to ExpoBazaar.com, and all other  websites, applications, widgets, products, services, and other offerings  (collectively, the “Services”) owned and operated by ExpoBazaar USA, Inc. and  our affiliates and subsidiaries (collectively, “ExpoBazaar”) that link to this  Privacy Policy. This Policy covers our treatment of the personal information we  gather through use of our Services.   ExpoBazaar USA Inc. 123 Oak Lawn Ave, Dallas, TX 75207 is the data  controller for the personal information collected in connection with use of all  ExpoBazaar’s Services.\n                  </p>\n                  <p>\n                      <strong>\n                          What Information does ExpoBazaar Collect?\n                      </strong>\n                      <br/>\n                      We collect information about your use of our Services. We  also gather various types of personal information, as explained in more detail  below.\n                  </p>\n                  <p>\n                      <strong>\n                          How do we Protect Your Information?\n                      </strong>\n                      <br/>\n                      We protect your information by using Secure Sockets Layer  (SSL) software which encrypts the information you submit via the website.\n                  </p>\n                  <p>\n                      <strong>\n                          Information You Provide to Us:\n                      </strong>\n                      <br/>\n                      We receive and store any information you knowingly provide  to us.\n                  </p>\n                  <p>\n                      <strong>\n                          Communication with Us\n                      </strong>\n                      <br/>\n                      We collect personal information from you when you  communicate with us, for example when you request information about our  services, contact our Support team, apply for a job, or register for our  newsletter.\n                  </p>\n                  <p>\n                      <strong>\n                          How Does ExpoBazaar Use the Personal Information It  Collects?\n                      </strong>\n                      <br/>\n                      We use the information we collect about you for various business  purposes as described below.\n\n                      \n                  </p>\n\n                  <ul class=\"policy-list\">\n                          <li>\n                              To provide you with our Services\n                          </li>\n                          <li>\n                              Enter into a contract with you\n                          </li>\n                          <li>\n                              Allow you to set up a user account and profile\n                          </li>\n                          <li>\n                              Fulfil your requests for products and services\n                          </li>\n                          <li>\n                              Allow you to create and share content with  others\n                          </li>\n                          <li>\n                              Communicate with you about your account and  updates to our Services\n                          </li>\n                          <li>\n                              Determine your order or account limits\n                          </li>\n                          <li>\n                              Process applications, transactions, and payments\n                          </li>\n                          <li>\n                              Allow you to register for events\n                          </li>\n                          <li>\n                              Facilitate communications between you and other  users\n                          </li>\n                          <li>\n                              For our legitimate business interests\n                          </li>\n                          <li>\n                              Analyze how you use the Services\n                          </li>\n                          <li>\n                              Understand user interest and engagement on the  Services\n                          </li>\n                          <li>\n                              Engage in marketing or sales outreach\n                          </li>\n                          <li>\n                              Provide customized content, offers, or Services,  including marketing content via email, postal mail, social media, SMS, or other  channels, subject to applicable laws\n                          </li>\n                          <li>\n                              Research and develop Services\n                          </li>\n                          <li>\n                              Improve and streamline our Services\n                          </li>\n                          <li>\n                              Verify your identity and prevent fraud\n                          </li>\n                          <li>\n                              Detect security incidents; protect against  malicious, deceptive, fraudulent, or illegal activity\n                          </li>\n                          <li>\n                              Ensure quality control\n                          </li>\n                          <li>\n                              Debug to identify and repair errors\n                          </li>\n                          <li>\n                              Enforce our Terms and policies\n                          </li>\n                          <li>\n                              Audit or other compliance activities\n                          </li>\n                          <li>\n                              To comply with our legal obligations\n                          </li>\n                      </ul>\n                  <p>\n                      We retain and use your information in connection with  potential legal claims, and for compliance, regulatory and auditing purposes.  For example, we retain information where we are required by law, or if we are  compelled to do so by a court order or regulatory body. Also, when you exercise  any applicable legal rights, you have to access, amend or delete your personal  information, we may request identification and verification documents from you  for the purpose of confirming your identity.\n                  </p>\n                  <p>\n                      With your consent ExpoBazaar may collect and use personal  information based with your consent. You can revoke your consent at any time  (either through our Services directly or by contacting us via\n                      <a href=\"mailto:privacy@ExpoBazaar.com\">\n                          privacy@ExpoBazaar.com\n                      </a>\n                      ), though note that you might not be able to use any  service or feature that requires collection or use of that personal information.\n                      <br/>\n                      In exceptional cases we may further process your personal  information to protect your vital interests or as further required for the  public good.\n                  </p>\n                  <p>\n                      <strong>\n                          Will ExpoBazaar Share Any of the Personal Information It  Receives?\n                      </strong>\n                      <br/>\n                      We do not rent nor sell your personal information in  personally identifiable form to anyone.\n                  </p>\n                  <p>\n                      <strong>\n                          What Are My Privacy Rights and Choices?\n                      </strong>\n                      <br/>\n                      You can always opt not to disclose information to us, but  keep in mind some information may be needed to register with us, use our  Services or to take advantage of some of our features.\n                  </p>\n                  <p>\n                      <strong>\n                          Opting Out of Communications:\n                      </strong>\n                      <br/>\n                      If you no longer wish to  receive electronic communications from us, click the unsubscribe link at the  bottom of the email or follow opt-out instructions provided in other  communication channels. Note you may still receive transactional emails from  us. We process requests to be placed on do-not-mail and do-not-call lists as  required by applicable law.\n                  </p>\n                  <p>\n                      <strong>\n                          Will ExpoBazaar Change this Privacy Policy?\n                      </strong>\n                      <br/>\n                      We’re constantly trying to improve our Services, so we may  need to change this Privacy Policy from time to time as well, but we will alert  you to material changes by placing a notice on the\n                      <strong>\n                          https://www.ExpoBazaar.com\n                      </strong>\n                      website, by sending you an email, and/or by some other means.\n                      <br/>\n                      <br/>\n                      By using the Services after any changes to the Privacy  Policy have been posted, you agree to the new Privacy Policy.\n                  </p>\n              </div>\n          </div>\n      </div>\n  </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from 'src/app/service/common.service';\nimport { GlobalService } from 'src/app/service/global.service';\n\n@Component({\n  selector: 'app-terms-condition',\n  templateUrl: './terms-condition.component.html',\n  styleUrls: ['./terms-condition.component.scss']\n})\nexport class TermsConditionComponent implements OnInit {\n\n   constructor(public gs: GlobalService , private common: CommonService) {\n      this.gs.updatePageName('Terms Of Use | ExpoBazaar');\n      this.common.updateSeoTags('Terms Of Use');\n      }\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"main-wrapper\"> \n\n  <!-- main-search start -->\n\t  <div class=\"policy-banner-section section\">\n   <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12 col-sm-12 col-xs-12\">\n          <h1 class=\"text-white heading-title\">Terms of use</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n\t<div class=\"faq-section section pt-90 pt-lg-70 pt-md-60 pt-sm-50 pt-xs-40  pb-90 pb-lg-70 pb-md-60 pb-sm-50 pb-xs-40\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      \n<p><strong>Expo Bazaar USA, Inc. (&quot;ExpoBazaar&quot;)</strong> and its supplier,  partners and/or affiliates provide their services to you subject to the  following general terms and conditions and our Privacy Policy. If you visit  and/or shop at ExpoBazaar.com, or any other website managed by ExpoBazaar  (collectively, this &quot;Site&quot;), you accept these terms and conditions.  Please read them carefully.<br>\n  <br>\n  <strong>Privacy</strong><br>\n  Please review our Privacy Policy, which also governs this Site, to understand  our privacy practices.<br>\n  <br>\n  <strong>Electronic Communications</strong><br>\n  When you visit this Site or send e-mails to us, you are communicating with us  electronically. You consent to receive communications from us electronically.  We will communicate with you by e-mail or by posting notices on this Site. You  agree that all agreements, notices, disclosures and other communications that  we provide to you electronically satisfy any legal requirement that such  communications be in writing.<br>\n  <br>\n  <strong>Site Content</strong><br>\n  All content included on this Site, such as information, data, text, graphics,  logos, photographs, images, audio clips, and other material (collectively  &quot;Content&quot;) is the property of ExpoBazaar, its supplier and/or  affiliates and is protected under U.S. and International copyright laws. The  compilation of all Content presented on this Site is the exclusive property of ExpoBazaar  and protected by U.S. and international copyright laws. You may not copy,  reproduce, modify, remove, delete, augment, add to, publish, transmit,  participate in the transfer or sale of, create derivative works from, in any  way exploit, or otherwise use the Content, without the express prior written  consent of ExpoBazaar.<br>\n  <br>\n  <strong>Trademarks</strong><br>\n  ExpoBazaar, ExpoBazaar.com, ExpoBazaar logos and other marks included on this  Site (&quot;ExpoBazaar Trademarks&quot;) are trademarks and/or service marks of  ExpoBazaar or ExpoBazaar Affiliates. ExpoBazaar trademarks may not be used in  connection with any product or service that is not ExpoBazaar's, in any manner  that is likely to cause confusion, or in any manner that disparages or  discredits ExpoBazaar. All trademarks, service marks, and logos that are not  owned by ExpoBazaar or ExpoBazaar Affiliates and appear on this Site are the  property of their respective owners.<br>\n  <br>\n  <strong>Online Orders/Product Descriptions and Prices </strong><br>\n  ExpoBazaar and its  affiliates are dedicated towards providing accurate information to our users,  however, we do not warrant that product  availability, shipping times, descriptions, prices or other Content included on  this Site is accurate, complete, reliable, current or error-free. If a product  offered on this Site is not as described, please  contact us at <a href=\"mailto:support@expobazaar.com\" class=\"text-forgot\">support@expobazaar.com </a>. <br><br>\n  All prices and costs listed on this Site are subject to  change without notice. Except where otherwise noted, the Original Price listed  for a product on this Site represents the wholesale price provided by the supplier  or manufacturer or estimated in accordance with standard industry practice. The  Original Price is a comparative price estimate and may or may not represent the  prevailing wholesale price in every market on a particular day.<br>\n  <br>\n  Shipping and handling charges for your order will be  displayed on this Site during checkout. By placing an online order, you agree  to accept these charges and pay the amount invoiced for the items purchased.  Do not place an order if you do not agree to  the shipping and handling terms.  <br>\n  <br>\n  ExpoBazaar is not responsible for delayed, misplaced,  lost and/or damaged goods by freight carriers once said goods are in transit. Unless  otherwise agreed in a shipment contract with ExpoBazaar, risk of loss and title  for items purchased via this Site pass to you upon delivery to the carrier.<br>\n  <br>\n  All orders are subject to ExpoBazaar acceptance. Please  note that there is no binding order until you receive an order confirmation by  e-mail from ExpoBazaar.<br>\n  <br>\n  <strong>Your Account</strong><br>\n  By using this Site, you agree that you are responsible for maintaining the  confidentiality of your account and password and restricting access to your  computer, and you agree to accept responsibility for all activities that occur  under your account and/or password. You agree to immediately notify us of any  unauthorized use of your account or password or any other breach of security. ExpoBazaar  reserves the right to terminate accounts, refuse to provide services, remove or  edit Content, or cancel orders in its sole discretion.<br>\n  <br>\n  <strong>Links to Third Party Sites</strong><br>\n  We may make available a link from this Site to an ExpoBazaar Affiliate's or  other third party's web site. These links permit you to leave this Site. The  linked sites are not under our control and we are not responsible for the  contents of any linked site or any link contained in a linked site, or any  changes or updates to such sites. You should carefully review the privacy  statements and other terms and conditions of use of all linked sites you visit.<br>\n  <br>\n  <strong>Disclaimer of Warranties and Limitation of Liability</strong><br>\n  THIS SITE IS PROVIDED BY EXPOBAZAAR ON AN &quot;AS IS&quot; AND &quot;AS  AVAILABLE&quot; BASIS. EXPOBAZAAR MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY  KIND, EXPRESS OR IMPLIED, AS TO THE OPERATION OF THIS SITE OR THE INFORMATION,  CONTENT, MATERIALS, OR PRODUCTS INCLUDED ON THIS SITE. YOU EXPRESSLY AGREE THAT  YOUR USE OF THIS SITE IS AT YOUR SOLE RISK.<br>\n  <br>\n  TO THE FULLEST EXTENT PERMISSIBLE BY APPLICABLE LAW, EXPOBAZAAR  DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. EXPOBAZAAR  DOES NOT WARRANT THAT THIS SITE, ITS SERVERS, OR E-MAIL SENT FROM EXPOBAZAAR  ARE FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS. EXPOBAZAAR WILL NOT BE LIABLE  FOR ANY DAMAGES OF ANY KIND ARISING FROM THE USE OF THIS SITE OR FROM ANY  INFORMATION, CONTENT, MATERIALS, PRODUCTS (INCLUDING SOFTWARE) OR SERVICES  INCLUDED ON OR OTHERWISE MADE AVAILABLE TO YOU THROUGH THIS SITE, INCLUDING,  BUT NOT LIMITED TO DIRECT, INDIRECT, INCIDENTAL, PUNITIVE, AND CONSEQUENTIAL  DAMAGES.<br>\n  <br>\n  CERTAIN STATE LAWS DO NOT ALLOW LIMITATIONS ON IMPLIED  WARRANTIES OR THE EXCLUSION OR LIMITATION OF CERTAIN DAMAGES. IF THESE LAWS  APPLY TO YOU, SOME OR ALL OF THE ABOVE DISCLAIMERS, EXCLUSIONS, OR LIMITATIONS  MAY NOT APPLY TO YOU, AND YOU MIGHT HAVE ADDITIONAL RIGHTS.<br>\n  <br>\n  <strong>Applicable Law</strong><br>\n  By visiting ExpoBazaar.com, you agree that the laws of the State of Texas,  without regard to principles of conflict of laws, will govern these Conditions  of Use and any dispute of any kind that might arise between you and ExpoBazaar  or its supplier or affiliates.<br>\n  <br>\n  <strong>Disputes</strong><br>\n  All disputes in which ExpoBazaar is a party which relate in any way to your  visit to ExpoBazaar.com and/or products that you purchase through ExpoBazaar.com  shall be submitted to confidential arbitration in Dallas, Texas. Arbitration  under this paragraph shall be conducted under the rules then prevailing of the  American Arbitration Association. The arbitrator's award shall be binding and  may be entered as a judgment in any court of competent jurisdiction. To the  fullest extent permitted by applicable law, no arbitration under this paragraph  shall be joined to an arbitration involving any other party subject to this  paragraph, whether through class arbitration proceedings or otherwise.<br>\n  <br>\n  <strong>Site Policies, Modification, and Severability</strong><br>\n  Please review our other policies, such as our Privacy Policy, posted on this  Site. These policies also govern your visit to ExpoBazaar.com. We reserve the  right to modify or amend these policies, this Site, and these Terms and  Conditions of Use at any time. If we ever change our policies in a material  fashion, we will post any changes on this Site and/or send you an email so that  you are always aware of any such material change. Unless we state otherwise,  the changes to our policies will affect only your use of the Site and our  services after the effective date of the change. If you continue to use the  Site and/or our services after notification of a change, such use shall  constitute your acceptance of the modified terms. If any of these terms and  conditions is deemed invalid, void, or for any reason unenforceable, that  condition shall be deemed severable and shall not affect the validity and  enforceability of any remaining term or condition.<br>\n  <br>\n  <strong>Our Address</strong><br>\n  Expo Bazaar USA, Inc.<br>\n  100 Oak Lawn Avenue<br>\n  Dallas, TX 75207<br>\n  Phone: 855.726.3368<br>\n  <a href=\"http://www.expobazaar.com\" class=\"text-forgot\">www.expobazaar.com</a></p>\n\n                  </div>\n                </div>\n\t\t\t\t\n            </div>\n        </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { TokenService } from './token.service';\nimport { Buffer } from 'buffer';\n\nconst OAUTH_CLIENT = 'express-client';\nconst OAUTH_SECRET = 'express-secret';\n\nconst HTTP_OPTIONS = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' + Buffer.from(OAUTH_CLIENT + ':' + OAUTH_SECRET).toString('base64')\n    })\n};\n// btoa is not supported by the server so disabling this and installing buffer package, importing the buffer package and modying below code. Result is above this comment. \n// const HTTP_OPTIONS = {\n//     headers: new HttpHeaders({\n//         'Content-Type': 'application/x-www-form-urlencoded',\n//         Authorization: 'Basic ' + btoa(OAUTH_CLIENT + ':' + OAUTH_SECRET)\n//     })\n// };\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    redirectUrl = '';\n    baseUrl = environment.api1;\n    assetsURL = environment.assetsURL;\n\n    constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n    // OAuth20\n    private static handleError(error: HttpErrorResponse): any {\n        if (error.error instanceof ErrorEvent) {\n            console.error('An error occurred:', error.error.message);\n        } else {\n            console.error(\n                `Backend returned code ${error.status}, ` +\n                `body was: ${error.error}`);\n        }\n        return throwError(\n            'Something bad happened; please try again later.');\n    }\n\n    private static log(message: string): any {\n        console.log(message);\n    }\n    // *** //\n\n    refreshToken(refreshData: any): Observable<any> {\n        this.tokenService.removeToken();\n        this.tokenService.removeRefreshToken();\n        const body = new HttpParams()\n            .set('refresh_token', refreshData.refresh_token)\n            .set('grant_type', 'refresh_token');\n        return this.http.post<any>(this.baseUrl + 'token', body, HTTP_OPTIONS)\n            .pipe(\n                tap(res => {\n                    this.tokenService.saveToken(res.access_token);\n                    this.tokenService.saveRefreshToken(res.refresh_token);\n                }),\n                catchError(AuthService.handleError)\n            );\n    }\n\n    LoginBuyer(data: any) {\n        this.tokenService.removeToken();\n        this.tokenService.removeRefreshToken();\n        return this.http.post<any>(this.baseUrl + 'signin', data, HTTP_OPTIONS)\n            .pipe(\n                tap(res => {\n                    // console.log('res',res);\n\n                    this.tokenService.saveToken(res.access_token);\n                    this.tokenService.saveRefreshToken(res.refresh_token);\n                }),\n                catchError(AuthService.handleError)\n            );\n        // return this.http.post(this.baseUrl + \"signin\", data);\n    }\n\n    createBuyer(data: any) {\n        return this.http.post(this.baseUrl + 'register', data);\n    }\n\n    updateRegBuyer(data: any) {\n        return this.http.post(this.baseUrl + 'update-register-buyer', data);\n    }\n\n    updateBuyer(data: any) {\n        return this.http.post(this.baseUrl + 'create_bussiness', data);\n    }\n\n    getBuyerById(data: any) {\n        return this.http.post(this.baseUrl + 'get-Buyer-by-id', data);\n    }\n\n    otpVerficationBuyer(data: any) {\n        return this.http.post(this.baseUrl + 'verify-reg-otp', data);\n    }\n\n    resendOTP(data: any) {\n        return this.http.post(this.baseUrl + 'resendOTP', data);\n    }\n\n    getAllParentCategory() {\n        return this.http.get(this.baseUrl + 'get-parent-category');\n    }\n\n    getAllCategory() {\n        return this.http.get(this.baseUrl + 'get-all-category');\n        // return this.http.get('assets/category.json');\n    }\n\n    forgetPasswordOTP(data: any) {\n        return this.http.post(this.baseUrl + \"forgot-pass-otp\", data);\n    }\n\n    resetPassword(data: any) {\n        return this.http.post(this.baseUrl + \"reset-password\", data);\n    }\n\n    getIndividualByID(id: any) {\n        return this.http.post(this.baseUrl + \"get-individual-by-id\", id);\n    }\n\n    // Images Preview return data\n    lightboxImage(product: any, key: any) {\n        let imgArray = [];\n        if (product && product[key] && product[key].length) {\n            for (let i in product[key]) {\n                if (product[key][i]['url']) {\n                    product[key][i]['src'] = this.assetsURL + product[key][i]['url'];\n                    imgArray.push(product[key][i]);\n                } else {\n                    let src = '';\n                    src = this.assetsURL + 'product_images' + '/' + product[key][i];\n                    imgArray.push({ src: src });\n                }\n            }\n        }\n        return imgArray;\n    }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { GlobalService } from './global.service';\nimport { NotificationService } from './notification.service';\nimport { SettingService } from './setting.service';\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class CommonService {\n\n   usaState: any = [];\n\n   // Image cursor\n   imagesSlider = {\n      // speed: 1000,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      cssEase: 'linear',\n      // fade: false,\n      autoplay: true,\n      draggable: true,\n      prevArrow: '.client-feedback .prev-arrow',\n      nextArrow: '.client-feedback .next-arrow',\n      asNavFor: \".thumbs\",\n      infinite: true\n   };\n\n   thumbnailsSlider = {\n      speed: 1000,\n      slidesToShow: 5,\n      slidesToScroll: 2,\n      cssEase: 'linear',\n      autoplay: false,\n      centerMode: false,\n      draggable: true,\n      focusOnSelect: true,\n      asNavFor: \".feedback\",\n      infinite: true,\n      variableWidth: true,\n   };\n   //************* */\n\n   // Image cursor 2\n   imagesSliderModal = {\n      speed: 1000,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      cssEase: 'linear',\n      fade: true,\n      autoplay: true,\n      draggable: true,\n      prevArrow: '.client-feedback .prev-arrow',\n      nextArrow: '.client-feedback .next-arrow',\n      asNavFor: \".thumbs-popup\",\n      infinite: true\n   };\n\n   thumbnailsSliderModal = {\n      speed: 1000,\n      slidesToShow: 5,\n      slidesToScroll: 2,\n      cssEase: 'linear',\n      autoplay: false,\n      centerMode: false,\n      draggable: true,\n      focusOnSelect: true,\n      asNavFor: \".feedback-popup\",\n      infinite: true,\n      variableWidth: true,\n   };\n   //************* */\n\n   // Password email pattern\n   passRequirement = {\n      passwordMinLowerCase: 1,\n      passwordMinNumber: 1,\n      passwordMinSymbol: 1,\n      passwordMinCharacters: 8\n   };\n\n   passwordPattern = [\n      `(?=([^A-Za-z]*[A-Za-z])\\{${this.passRequirement.passwordMinLowerCase},\\})`,\n      `(?=([^0-9]*[0-9])\\{${this.passRequirement.passwordMinNumber},\\})`,\n      `(?=(\\.\\*[\\$\\@\\$\\!\\%\\*\\#\\^\\(\\)\\&])\\{${this.passRequirement.passwordMinSymbol},\\})`,\n      `[A-Za-z\\\\d\\$\\@\\$\\!\\%\\*\\#\\^\\(\\)\\&]{${this.passRequirement.passwordMinCharacters},}`\n   ].map(item => item.toString()).join('');\n\n   emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n   // ***** //\n\n   constructor(private router: Router,\n      private gs: GlobalService,\n      private notification: NotificationService,\n      private meta: Meta, private http: HttpClient) {\n\n   }\n\n   updateSeoTags(key: any) {\n      this.http.get('/assets/meta-tags.json').subscribe(data => {\n         let meatad = data[key]['meta'];\n\n         let count = 0;\n\n         const loop = () => {\n            if (count < meatad.length) {\n               if (meatad[count]['name']) {\n                  this.meta.updateTag({ name: meatad[count]['name'], content: meatad[count]['content'] });\n               }\n\n               if (meatad[count]['property']) {\n                  this.meta.updateTag({ property: meatad[count]['property'], content: meatad[count]['content'] });\n               }\n               count += 1;\n               loop();\n            } else {\n               // console.log('Meta added!');\n            }\n         }\n         loop();\n      }, (error: any) => {\n         console.log(error);\n      });\n   }\n\n   // Dsa Buyer change\n   changeBuyer(id: any) {\n      let url = this.router.url.split('?')[0];\n      if (id) {\n         this.router.navigate([url], { queryParams: { bcid: id } })\n         this.getCartCount(id);\n      } else {\n         this.router.navigate([url]);\n         if (this.gs.loginData && this.gs.loginData['_id']) {\n            this.getCartCount(this.gs.loginData['_id']);\n         }\n      }\n\n      if (this.gs.loginData['userType'] == 'DSARUSER') {\n         this.gs.userTypeDSa = this.gs.loginData['userType'];\n      }\n   }\n\n   // Get Cart Count\n   getCartCount(id: any) {\n      this.gs.getCartCount({ id: id }).subscribe((resp: any) => {\n         this.gs.cartCount = resp.data;\n      });\n   }\n\n   // Get Notification Count\n   get_notify_count(id: any) {\n      this.notification.get_notify_count({ individual: id }).subscribe((resp: any) => {\n         this.gs.notificationCount = resp.data;\n      });\n   }\n\n   // Only numbers allowed\n   keyPressOnlyNumbers(event: any) {\n      var charCode = (event.which) ? event.which : event.keyCode;\n      // Only Numbers 0-9\n      if ((charCode < 48 || charCode > 57)) {\n         event.preventDefault();\n         return false;\n      } else {\n         return true;\n      }\n   }\n\n   // Short\n   dynamicSort(property: any) {\n      var sortOrder = 1;\n      if (property[0] === \"-\") {\n         sortOrder = -1;\n         property = property.substr(1);\n      }\n      return function (a: any, b: any) {\n         if (sortOrder == -1) {\n            return b[property].localeCompare(a[property]);\n         } else {\n            return a[property].localeCompare(b[property]);\n         }\n      }\n   }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomainvaluesService {\n\n  baseUrl = environment.api1;\n  api2 = environment.api2;\n\n  constructor(private http: HttpClient) { }\n\n\n  // countries\n  getAll_countries() {\n    return this.http.get(this.baseUrl + 'countries');\n  }\n\n  // Active countries for User\n  getAll_Activecountries() {\n    return this.http.get(this.baseUrl + 'active_countries');\n  }\n\n  // city\n  getAll_city() {\n    return this.http.get(this.baseUrl + 'city');\n  }\n\n  // bussiness_type\n  getAll_bussiness_type() {\n    return this.http.get(this.baseUrl + 'bussiness_type');\n  }\n\n  getstateOrCity(id: any) {\n    return this.http.post(this.baseUrl + 'get-state-by-country', {id: id});\n  }\n\n  // bussiness_ownership\n  getAll_bussiness_ownership() {\n    return this.http.get(this.baseUrl + 'bussiness_ownership');\n  }\n\n  // market_type\n  getAll_market_type() {\n    return this.http.get(this.baseUrl + 'market_type');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DsaService {\n\n    baseUrl = environment.api1;\n    constructor(private http: HttpClient) { }\n\n\n    createDSA(data: any) {\n        return this.http.post(this.baseUrl + 'dsa-register', data);\n    }\n\n    updateDSA(data: any) {\n        return this.http.post(this.baseUrl + 'dsa-update', data);\n    }\n\n    signInDSA(data: any) {\n        return this.http.post(this.baseUrl + \"signin-dsa\", data);\n    }\n\n    getManagePayout(data: any) {\n        return this.http.post(this.baseUrl + 'get-manage-payout', data);\n    }\n\n    getManageSalesReport(data: any) {\n        return this.http.post(this.baseUrl + 'get-manage-sales-report', data);\n    }\n\n\n\n\n    // ######################   Dsa Buyer signup Api  ###################### //\n\n    getManageBuyer(data: any) {\n        return this.http.post(this.baseUrl + 'dsa-manage-buyer-get', data);\n    }\n\n    getDscCreatedDSA(data: any) {\n        return this.http.post(this.baseUrl + 'get-dsc-created-dsa', data);\n    }\n\n    getDSAById(data: any) {\n        return this.http.post(this.baseUrl + 'edit-dsc-created-dsa', data);\n    }\n\n    deleteBuyer(data: any) {\n        return this.http.post(this.baseUrl + 'delete-buyer', data);\n    }\n\n\n    // ######################   Manage Sals Rep Api  ###################### //\n\n    // Get Manage sals rep\n    getAllManageSalsRep(id: any) {\n        return this.http.post(this.baseUrl + 'get-all-manage-sales-rep', { id: id });\n    }\n\n    // Update Manage sals rep\n    update_ManageSals(data: any) {\n        return this.http.post(this.baseUrl + 'update_manage-sals', data);\n    }\n\n    // Delete Manage sals rep\n    delete_ManageSals(data: any) {\n        return this.http.post(this.baseUrl + 'delete-manage-sals', data);\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { DatePipe } from '@angular/common';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GlobalService {\n    baseUrl = environment.api1;\n    api2 = environment.api2;\n    api3 = environment.api3;\n    api6 = environment.api6;\n\n    loginData: any;\n    cartCount: any = 0;\n    notificationCount: any = 0;\n    viewOrder: any;\n    searchTxt: any = '';\n    tomorrowDate: any = new Date();\n    menuPermission: any = [];\n    globalBuyer: any = '';\n    is_buyer_description: any = '';\n    globalBuyerList: any = [];\n    userTypeDSa: any;\n\n    constructor(private http: HttpClient,\n        private datePipe: DatePipe,\n        private titleService: Title) {\n        this.tomorrowDate.setDate(new Date().getDate() + 1);\n        this.tomorrowDate = this.datePipe.transform(this.tomorrowDate, 'yyyy-MM-dd');\n    }\n\n    // Sort by key\n    sortByKey = (array: any[], key: any) => {\n        return array.sort((a, b) => {\n            let x = typeof(a[key]) == 'string' ?  a[key].toLowerCase() : a[key];\n            let y = typeof(b[key]) == 'string' ? b[key].toLowerCase() : b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        });\n    }\n\n    // Sort by key (descending)\n    sortByKeyDesc = (array: any[], key: any) => {\n        return array.sort((a, b) => {\n            let x = typeof(a[key]) == 'string' ?  a[key].toLowerCase() : a[key];\n            let y = typeof(b[key]) == 'string' ? b[key].toLowerCase() : b[key];\n            return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n        });\n    }\n\n    updatePageName(title: any) {\n        this.titleService.setTitle(title);\n    }\n\n    // get Parent to child category\n    getChildCategoryById(id: any) {\n        return this.http.post(this.baseUrl + 'get-child-category', { id: id });\n    }\n\n    // Get User Payment Mathod \n    getPaymentMathod(id: any) {\n        return this.http.post(this.baseUrl + 'payment-mathod', { id: id });\n    }\n\n    // Change primary card\n    changePrimary(data: any) {\n        return this.http.post(this.baseUrl + 'change-primary-card', data);\n    }\n\n    // add User Payment Mathod \n    // addPaymentMathod(data: any) {\n    //     return this.http.post(this.baseUrl + 'create-payment-mathod', data);\n    // }\n\n    addPaymentMathod(data: any) {\n        return this.http.post(this.baseUrl + 'save-payment-detail', data);\n    }\n\n    // add User Payment Mathod \n    editPaymentMathod(data: any) {\n        return this.http.post(this.baseUrl + 'edit-payment-mathod', data);\n    }\n\n    // add User Payment Primary Mathod\n    paymentPrimaryMathod(data: any) {\n        return this.http.post(this.baseUrl + 'payment-primary-mathod', data);\n    }\n\n    deletePayement(data: any) {\n        return this.http.post(this.baseUrl + 'delete-payment-mathod', data);\n    }\n\n    // Get User Address\n    getAddress(id: any) {\n        return this.http.post(this.baseUrl + 'get-address', { id: id });\n    }\n\n    // Get User Address\n    getCharge(body: any) {\n        return this.http.post(this.baseUrl + 'get-zoneChanges',  body);\n    }\n\n    // Get Order Address\n    getOrderAddress(id: any) {\n        return this.http.post(this.baseUrl + 'get-order-address', { id: id });\n    }\n\n    getUseData(id: any) {\n        return this.http.get(this.baseUrl + 'get-user-data/' + id);\n    }\n\n    // Update Profile\n    updateProfile(data: any) {\n        return this.http.post(this.baseUrl + 'profile-update', data);\n    }\n\n    // Add new Address\n    newAddress(data: any) {\n        return this.http.post(this.baseUrl + 'create-new-address', data);\n    }\n\n    // update Address\n    updateAddress(data: any) {\n        return this.http.post(this.baseUrl + 'update-address', data);\n    }\n\n    // Delete Address By Id\n    deleteAddress(data: any) {\n        return this.http.post(this.baseUrl + 'delete-address', data);\n    }\n\n    // search location\n    serchLocation(text: any) {\n        const httpOptions: any = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                Authorization: 'bearer ',\n            }),\n        };\n        return this.http.get(`https://app.zipcodebase.com/landing_demo/?codes=` + text + '&country=in', { headers: httpOptions });\n    }\n    //  save file\n    saveFile(data: any) {\n        return this.http.post(this.baseUrl + 'save-file', data);\n    }\n\n\n    // Payment transaction API\n    verifyCard(data: any) {\n        return this.http.post(this.baseUrl + 'auth-credit-card', data);\n    }\n\n    chargeCard(data: any) {\n        return this.http.post(this.baseUrl + 'charge-credit-card', data);\n    }\n\n\n\n\n\n\n    // ----------------------------------------------------\n    // API 2 PRODUCT\n    // ----------------------------------------------------\n\n    // get Product By Category Id\n    getProductById(data: any) {\n        return this.http.post(this.api2 + 'product-by-category', data);\n    }\n\n    // get Product By Seller Id\n    getProductBySeller(data: any) {\n        return this.http.post(this.api2 + 'product-by-seller', data);\n    }\n\n    // get Product By Category Id\n    getBySideFilter(data: any) {\n        return this.http.post(this.api2 + 'get-by-side-filter', data);\n    }\n\n    // get Market Place Country\n    getMarketPlaceCountry() {\n        return this.http.get(this.api2 + 'get-market-place-country');\n    }\n\n    // get Product By Category Id\n    getProductId(data: any) {\n        return this.http.post(this.api2 + 'product-detail', data);\n    }\n\n    // get Releted Product By Category Id\n    getReletedProduct(data: any) {\n        return this.http.post(this.api2 + 'get-related-product', data);\n    }\n\n    // get Seller Product\n    getSellerProduct(id: any) {\n        return this.http.post(this.api2 + 'get-seller-product', id);\n    }\n\n    // Serch Product\n    searchData(data: any) {\n        return this.http.post(this.api2 + 'search-product', data);\n    }\n\n    // Add new product request\n    addNewProductRequest(data: any) {\n        return this.http.post(this.api2 + 'new-product-request', data);\n    }\n\n    // Update product request\n    updateProductRequest(data: any) {\n        return this.http.post(this.api2 + 'update-product-request', data);\n    }\n\n    //  get Product request\n    getAllProductRequest(id: any) {\n        return this.http.post(this.api2 + 'get-product-request', { id: id });\n    }\n\n    //  get Product By Id\n    getProdById(id: any) {\n        return this.http.post(this.api2 + 'get-prod-request-id', { id: id });\n    }\n\n    //  delete Product request By Id\n    deleteProductRequest(data: any) {\n        return this.http.post(this.api2 + 'delete-product-request', data);\n    }\n\n\n\n\n    // ----------------------------------------------------\n    // API 2 CART\n    // ----------------------------------------------------\n\n    // Add To Cart\n    addToCart(data: any) {\n        return this.http.post(this.api2 + 'add-to-cart', data);\n    }\n\n    // get cart count\n    getCartCount(data: any) {\n        return this.http.post(this.api2 + 'get-cart-count', data);\n    }\n\n    // update quantity\n    updateQuantity(data: any) {\n        return this.http.post(this.api2 + 'update-quantity', data);\n    }\n\n    // order status\n    OrderStatusChange(data: any) {\n        return this.http.post(this.api2 + 'order-status-change', data);\n    }\n\n    // Return refund status\n    returnRefundStatus(data: any) {\n        return this.http.post(this.api2 + 'order-return-refund', data);\n    }\n\n    // Get Return refund Order\n    getReturnRefOrder(data: any) {\n        return this.http.post(this.api2 + 'get-return-refund-order', data);\n    }\n\n    // Get Return refund Order By id\n    getReturnRefOrderByid(data: any) {\n        return this.http.post(this.api2 + 'get-ret-refund-order-by-id', data);\n    }\n\n    addProductToWL(data: any) {\n        return this.http.post(this.api2 + 'add-product-wishlist', data);\n    }\n\n    createWishlist(data: any) {\n        return this.http.post(this.api2 + 'create-wishlist', data);\n    }\n\n    getMyWishlist(id: any) {\n        return this.http.post(this.api2 + 'get-wish-list', { id: id });\n    }\n\n    // Get Cart Data\n    getCartData(id: any) {\n        return this.http.post(this.api2 + 'get-cart-item', { id: id });\n    }\n\n    // Add Wishlist Data in cart\n    addToCartWishlist(data: any) {\n        return this.http.post(this.api2 + 'add-to-cart-wishlist', data);\n    }\n\n    // Add Wishlist Data in cart\n    editWishlist(data: any) {\n        return this.http.post(this.api2 + 'edit-wishlist', data);\n    }\n\n    // cart price update\n    cart_price_update(data: any) {\n        return this.http.post(this.api2 + 'cart_price_update', data);\n    }\n\n    // Delet Cart By ID\n    deleteCartByID(data: any) {\n        return this.http.post(this.api2 + 'delete-cart-item', data);\n    }\n\n    // Get WishList \n    browseWishlist(id: any) {\n        return this.http.post(this.api2 + 'browse-wishlist', { id: id });\n    }\n\n    deleteWishListItem(id: any) {\n        return this.http.post(this.api2 + 'remove-wishlist', { id: id });\n    }\n\n    deleteWishProduct(data: any) {\n        return this.http.post(this.api2 + 'remove-wishlist-item', data);\n    }\n\n    // Place Order\n    placeOrder(data: any) {\n        return this.http.post(this.api2 + 'place-order', data);\n    }\n\n    // Get User Order \n    getOrder(id: any) {\n        return this.http.post(this.api2 + 'get-myorders', { id: id });\n    }\n\n    // view Order Details\n    getAllUserCollPro(data: any) {\n        return this.http.post(this.api2 + 'get-all-user-coll-pro', data);\n    }\n\n    // view Order Details\n    viewOrderDtl(data: any) {\n        return this.http.post(this.api2 + 'view-order-detail', data);\n    }\n\n    // get Product Review\n    getProductReview(data: any) {\n        return this.http.post(this.api2 + 'get-product-review', data);\n    }\n\n    // get Product Review\n    getAllProductReview(data: any) {\n        return this.http.post(this.api2 + 'getAll-product-review', data);\n    }\n\n    // Product Review\n    addUpdateProdReview(data: any) {\n        return this.http.post(this.api2 + 'add-update-product-review', data);\n    }\n\n    // delete Product Review\n    deleteProductReview(data: any) {\n        return this.http.post(this.api2 + 'delete-product-review', data);\n    }\n\n    // get seller Review\n    getSellerFeedback(data: any) {\n        return this.http.post(this.api2 + 'get-seller-feedback', data);\n    }\n\n    // get all seller Review\n    getAllSellerFeedback(data: any) {\n        return this.http.post(this.api2 + 'get-all-feedback', data);\n    }\n\n    // seller Review\n    productSellerReview(data: any) {\n        return this.http.post(this.api2 + 'product-seller-review', data);\n    }\n\n    // delete seller Feedback\n    deleteSellerFeedback(data: any) {\n        return this.http.post(this.api2 + 'delete-seller-feedback', data);\n    }\n\n    // change order status\n    changeCollectionStatus(data: any) {\n        return this.http.post(this.api2 + 'change-order-collection-status', data);\n    }\n\n    // ----------------------------------------------------\n    // API 3 \n    // ----------------------------------------------------\n\n    // Get User Order \n    getTransaction(id: any) {\n        return this.http.post(this.api3 + 'get-transaction-history', { id: id });\n    }\n\n    // Get User Order \n    subscribeEmail(email: any) {\n        return this.http.post(this.baseUrl + 'subscribe-email', { email: email, subscriber: \"Buyer\" });\n    }\n\n    getMaintenanceDetail(data: any){\n        return this.http.post(this.api6 + 'get-maintenance-detail', data);\n    }\n\n    public loadScript() {\n        let node = document.createElement('script');\n        node.src = 'assets/js/main.js';\n        node.type = 'text/javascript';\n        node.async = true;\n        node.charset = 'utf-8';\n        document.getElementsByTagName('head')[0].appendChild(node);\n    }\n\n    // fownload file\n    downloadFileFromUrl(url: any, filename: any) {\n        fetch(url).then(function (t) {\n            return t.blob().then((b) => {\n                var a = document.createElement(\"a\");\n                a.href = URL.createObjectURL(b);\n                a.setAttribute(\"download\", filename);\n                a.click();\n            });\n        });\n    }\n\n    readMore() {\n        var dots = <HTMLElement>document.getElementById(\"dots\");\n        var moreText = <HTMLElement>document.getElementById(\"more\");\n        var btnText = <HTMLElement>document.getElementById(\"myBtn\");\n\n        if (dots.style.display === \"none\") {\n            dots.style.display = \"inline\";\n            btnText.innerHTML = \"Read more\";\n            moreText.style.display = \"none\";\n        } else {\n            dots.style.display = \"none\";\n            btnText.innerHTML = \"Read less\";\n            moreText.style.display = \"inline\";\n        }\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    apiUrl = environment.api5;\n    constructor(private http: HttpClient) { }\n\n    get_system_notification(id: any) {\n        return this.http.post(this.apiUrl + 'get-system-notification', id);\n    }\n\n    read_system_notification(data: any) {\n        return this.http.post(this.apiUrl + 'read-system-notification', data);\n    }\n\n    get_notify_count(data: any) {\n        return this.http.post(this.apiUrl + 'get-notify-count', data);\n    }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingService {\n\n    baseUrl = environment.api1;\n    apiUrl = environment.api3;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router\n    ) { }\n\n    setOTP(data: any) {\n        return this.http.post(this.baseUrl + 'set-otp', data);\n    }\n    \n    setOTPChangeEmail(data: any) {\n        return this.http.post(this.baseUrl + 'set-otp-change-email', data);\n    }\n\n    updatePassword(data: any) {\n        return this.http.post(this.baseUrl + 'update-passwords', data);\n    }\n\n    changeEmail(data: any) {\n        return this.http.post(this.baseUrl + 'change-email', data);\n    }\n\n    // Notification preference Api\n    get_notification_pref(id: any) {\n        return this.http.post(this.apiUrl + 'get-notification-preferences', { id: id });\n    }\n\n    create_notification_pref(data: any) {\n        return this.http.post(this.apiUrl + 'create-notification-preferences', data);\n    }\n\n\n    // menu permission\n    \n\n    getMenuPermission(data: any) {\n        return this.http.post(environment.api5 + 'get-menu-permission', data);\n    }\n\n    getPermission(data: any) {\n        data.formName = this.router.url.split('?')[0];\n        return this.http.post(environment.api5 + 'get-permission', data);\n    }\n\n    // *** //\n\n\n    //  code domain Api\n    getCodeDomainVal(code: any){\n        return this.http.post(environment.api5 + 'get-codedomain-value', {code});\n    }\n\n    inquiryEmail(data: any){\n        return this.http.post(environment.api5 + 'buyer-enquiry', data);\n    }\n}\n","import { Injectable } from '@angular/core';\nconst ACCESS_TOKEN = 'access_token';\nconst REFRESH_TOKEN = 'refresh_token';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenService {\n\n    constructor() { }\n\n    getToken(): string {\n        return localStorage.getItem(ACCESS_TOKEN) || '';\n    }\n\n    getRefreshToken(): string {\n        return localStorage.getItem(REFRESH_TOKEN) || '';\n    }\n\n    saveToken(token: any): void {\n        localStorage.setItem(ACCESS_TOKEN, token);\n    }\n\n    saveRefreshToken(refreshToken: any): void {\n        localStorage.setItem(REFRESH_TOKEN, refreshToken);\n    }\n\n    removeToken(): void {\n        localStorage.removeItem(ACCESS_TOKEN);\n    }\n\n    removeRefreshToken(): void {\n        localStorage.removeItem(REFRESH_TOKEN);\n    }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadfileService {\n\n  baseUrl = environment.api4;\n  constructor(private http:HttpClient) {}\n\n  saveimage(file: any) {\n    var fd = new FormData();\n    fd.append('file', file);\n    return this.http.post(this.baseUrl + 'save-file',fd);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlphabetOnlyDirective } from '../directive/alphabet-only.directive';\nimport { OnlynumberDirective } from '../directive/number-only.directive';\nimport { PasswordvalidatorDirective } from '../directive/equal-validator.directive';\nimport { RightsFooterComponent } from '../layout/rights-footer/rights-footer.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { NgxTreeSelectModule,ExpandMode } from '../directive/ngx-tree-select/src';\nimport { SlickCarouselModule } from 'ngx-slick-carousel';\nimport { AccountHeaderComponent } from '../pages/account-header/account-header.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {Ng2TelInputModule} from 'ng2-tel-input';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { PasswordStrengthMeterModule } from 'angular-password-strength-meter';\n\n@NgModule({\n    declarations: [\n        AlphabetOnlyDirective,\n        OnlynumberDirective,\n        PasswordvalidatorDirective,\n        RightsFooterComponent,\n        AccountHeaderComponent\n    ],\n    imports: [\n        CommonModule,\n        NgxSkeletonLoaderModule.forRoot(),\n        SlickCarouselModule,\n        NgbModule,\n        RouterModule,\n        FormsModule,\n        Ng2SearchPipeModule,\n        Ng2TelInputModule,\n        PasswordStrengthMeterModule,\n        NgxPaginationModule,\n        NgxTreeSelectModule.forRoot({\n            idField: '_id',\n            textField: 'name',\n            expandMode: ExpandMode.Selection\n        }),\n\n    ],\n    exports: [\n        AlphabetOnlyDirective,\n        OnlynumberDirective,\n        PasswordvalidatorDirective,\n        RightsFooterComponent,\n        AccountHeaderComponent,\n        NgbModule,\n        NgxSkeletonLoaderModule,\n        NgxTreeSelectModule,\n        SlickCarouselModule,\n        Ng2SearchPipeModule,\n        Ng2TelInputModule,\n        PasswordStrengthMeterModule,\n        NgxPaginationModule\n    ],\n\n})\nexport class SharedModule { }\n","export const environment = {\n  production: false,\n  isClient: false,\n  assetsURL: 'https://d1ufh3f3pi3vt4.cloudfront.net/',\n\n  api1: 'http://localhost:3000/dev/',\n  api2: 'http://localhost:3000/dev/',\n  api3: 'http://localhost:3000/dev/',\n  api4: 'http://localhost:3000/dev/',\n  api5: 'http://localhost:3000/dev/',\n  // For Maintanace Check\n  api6: 'https://rxpq1tuwn3.execute-api.us-east-1.amazonaws.com/dev/',\n\n\n  // Staging\n//   api1: 'https://sgwg6qjpg4.execute-api.us-east-1.amazonaws.com/dev/',\n//   api2: 'https://kty2be1vw3.execute-api.us-east-1.amazonaws.com/dev/',\n//   api3: 'https://5puey85bj9.execute-api.us-east-1.amazonaws.com/dev/',\n//   api4: 'https://4l7hcsfom0.execute-api.us-east-1.amazonaws.com/dev/',\n//   api5: 'https://zirs8mfgn9.execute-api.us-east-1.amazonaws.com/dev/',\n//   // For Maintanace Check\n//   api6: 'https://rxpq1tuwn3.execute-api.us-east-1.amazonaws.com/dev/',\n\n  // Prduction\n  // assetsURL: 'https://ddfri9dh06qgm.cloudfront.net/',\n  // api1: 'https://q8zccpa4cg.execute-api.ap-south-1.amazonaws.com/prod/',\n  // api2: 'https://7tyxzq79mf.execute-api.ap-south-1.amazonaws.com/prod/',\n  // api3: 'https://n4locny1zj.execute-api.ap-south-1.amazonaws.com/prod/',\n  // api4: 'https://utsdwyqdb8.execute-api.ap-south-1.amazonaws.com/prod/',\n  // api5: 'https://146wr3vs37.execute-api.ap-south-1.amazonaws.com/prod/',\n  // // For Maintanace Check\n  // api6: 'https://s0ehm1e4jh.execute-api.ap-south-1.amazonaws.com/prod/',\n  \n  appVersion: '1.320'\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n};\n\n\nif (document.readyState === 'complete') {\n  bootstrap();\n} else {\n  document.addEventListener('DOMContentLoaded', bootstrap);\n}\n\n"],"names":["HttpHeaders","environment","GlobalService","constructor","http","datePipe","titleService","api1","api2","api3","api6","Date","array","key","sort","a","b","x","toLowerCase","y","tomorrowDate","setDate","getDate","transform","updatePageName","title","setTitle","getChildCategoryById","id","post","baseUrl","getPaymentMathod","changePrimary","data","addPaymentMathod","editPaymentMathod","paymentPrimaryMathod","deletePayement","getAddress","getCharge","body","getOrderAddress","getUseData","get","updateProfile","newAddress","updateAddress","deleteAddress","serchLocation","text","httpOptions","headers","Authorization","saveFile","verifyCard","chargeCard","getProductById","getProductBySeller","getBySideFilter","getMarketPlaceCountry","getProductId","getReletedProduct","getSellerProduct","searchData","addNewProductRequest","updateProductRequest","getAllProductRequest","getProdById","deleteProductRequest","addToCart","getCartCount","updateQuantity","OrderStatusChange","returnRefundStatus","getReturnRefOrder","getReturnRefOrderByid","addProductToWL","createWishlist","getMyWishlist","getCartData","addToCartWishlist","editWishlist","cart_price_update","deleteCartByID","browseWishlist","deleteWishListItem","deleteWishProduct","placeOrder","getOrder","getAllUserCollPro","viewOrderDtl","getProductReview","getAllProductReview","addUpdateProdReview","deleteProductReview","getSellerFeedback","getAllSellerFeedback","productSellerReview","deleteSellerFeedback","changeCollectionStatus","getTransaction","subscribeEmail","email","subscriber","getMaintenanceDetail","loadScript","node","document","createElement","src","type","async","charset","getElementsByTagName","appendChild","downloadFileFromUrl","url","filename","fetch","then","t","blob","href","URL","createObjectURL","setAttribute","click","readMore","dots","getElementById","moreText","btnText","style","display","innerHTML","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}